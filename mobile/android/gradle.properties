# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx512m -XX:MaxMetaspaceSize=256m
# JVM args are configured at the bottom of this file to avoid conflicts

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true

# Use this property to specify which architecture you want to build.
# You can also override it from the CLI using
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64

# Use this property to enable support to the new architecture.
# This will allow you to use TurboModules and the Fabric render in
# your application. You should enable this flag either if you want
# to write custom TurboModules/Fabric components OR use libraries that
# are providing them.
newArchEnabled=false

# Use this property to enable or disable the Hermes JS engine.
# If set to false, you will be using JSC instead.
hermesEnabled=true

# Enable GIF support in React Native images (~200 B increase)
expo.gif.enabled=true
# Enable webp support in React Native images (~85 KB increase)
expo.webp.enabled=true
# Enable animated webp support (~3.4 MB increase)
# Disabled by default because iOS doesn't support animated webp
expo.webp.animated=false

# 系统级镜像配置
systemProp.http.proxyHost=
systemProp.http.proxyPort=
systemProp.https.proxyHost=
systemProp.https.proxyPort=

# TLS协议配置 - 支持更多协议版本
systemProp.https.protocols=TLSv1,TLSv1.1,TLSv1.2,TLSv1.3
systemProp.jdk.tls.client.protocols=TLSv1,TLSv1.1,TLSv1.2,TLSv1.3

# 网络超时配置
systemProp.http.connectionTimeout=60000
systemProp.http.socketTimeout=60000
systemProp.https.connectionTimeout=60000
systemProp.https.socketTimeout=60000

# Enable network inspector
EX_DEV_CLIENT_NETWORK_INSPECTOR=true

# 允许非ASCII字符路径（中文路径）
android.overridePathCheck=true

# Use legacy packaging to compress native libraries in the resulting APK.
expo.useLegacyPackaging=false

# 明确设置Build Tools版本
android.buildToolsVersion=34.0.0
# 强制所有模块使用相同的Build Tools版本
android.overrideBuildToolsVersion=34.0.0
# 禁用Build Tools版本检查
android.suppressUnsupportedCompileSdk=34
# 强制使用本地SDK组件，禁用在线下载
android.builder.sdkDownload=false
# 禁用自动SDK下载
android.sdk.useLibrary=false
# 强制所有子项目使用相同的Build Tools版本
android.defaults.buildfeatures.buildconfig=true
android.nonTransitiveRClass=false
# 强制覆盖所有Build Tools版本引用
org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2,TLSv1.3 -Djdk.tls.client.protocols=TLSv1,TLSv1.1,TLSv1.2,TLSv1.3 -Dcom.sun.net.ssl.checkRevocation=false

# 抑制弃用警告
android.suppressUnsupportedCompileSdk=34
android.suppressUnsupportedOptionWarnings=true

# 优化构建性能
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.configureondemand=true

# 抑制Convention弃用警告
org.gradle.warning.mode=summary
