{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isPaint = exports.StrokeJoin = exports.StrokeCap = exports.PaintStyle = void 0;\n  let PaintStyle = exports.PaintStyle = /*#__PURE__*/function (PaintStyle) {\n    PaintStyle[PaintStyle[\"Fill\"] = 0] = \"Fill\";\n    PaintStyle[PaintStyle[\"Stroke\"] = 1] = \"Stroke\";\n    return PaintStyle;\n  }({});\n  let StrokeCap = exports.StrokeCap = /*#__PURE__*/function (StrokeCap) {\n    StrokeCap[StrokeCap[\"Butt\"] = 0] = \"Butt\";\n    StrokeCap[StrokeCap[\"Round\"] = 1] = \"Round\";\n    StrokeCap[StrokeCap[\"Square\"] = 2] = \"Square\";\n    return StrokeCap;\n  }({});\n  let StrokeJoin = exports.StrokeJoin = /*#__PURE__*/function (StrokeJoin) {\n    StrokeJoin[StrokeJoin[\"Miter\"] = 0] = \"Miter\";\n    StrokeJoin[StrokeJoin[\"Round\"] = 1] = \"Round\";\n    StrokeJoin[StrokeJoin[\"Bevel\"] = 2] = \"Bevel\";\n    return StrokeJoin;\n  }({});\n  const isPaint = obj => obj !== null && obj.__typename__ === \"Paint\";\n  exports.isPaint = isPaint;\n});","lineCount":25,"map":[[6,2,1,7],[6,6,1,11,"PaintStyle"],[6,16,1,21],[6,19,1,21,"exports"],[6,26,1,21],[6,27,1,21,"PaintStyle"],[6,37,1,21],[6,40,1,24],[6,53,1,37],[6,63,1,47,"PaintStyle"],[6,73,1,57],[6,75,1,59],[7,4,2,2,"PaintStyle"],[7,14,2,12],[7,15,2,13,"PaintStyle"],[7,25,2,23],[7,26,2,24],[7,32,2,30],[7,33,2,31],[7,36,2,34],[7,37,2,35],[7,38,2,36],[7,41,2,39],[7,47,2,45],[8,4,3,2,"PaintStyle"],[8,14,3,12],[8,15,3,13,"PaintStyle"],[8,25,3,23],[8,26,3,24],[8,34,3,32],[8,35,3,33],[8,38,3,36],[8,39,3,37],[8,40,3,38],[8,43,3,41],[8,51,3,49],[9,4,4,2],[9,11,4,9,"PaintStyle"],[9,21,4,19],[10,2,5,0],[10,3,5,1],[10,4,5,2],[10,5,5,3],[10,6,5,4],[10,7,5,5],[11,2,6,7],[11,6,6,11,"StrokeCap"],[11,15,6,20],[11,18,6,20,"exports"],[11,25,6,20],[11,26,6,20,"StrokeCap"],[11,35,6,20],[11,38,6,23],[11,51,6,36],[11,61,6,46,"StrokeCap"],[11,70,6,55],[11,72,6,57],[12,4,7,2,"StrokeCap"],[12,13,7,11],[12,14,7,12,"StrokeCap"],[12,23,7,21],[12,24,7,22],[12,30,7,28],[12,31,7,29],[12,34,7,32],[12,35,7,33],[12,36,7,34],[12,39,7,37],[12,45,7,43],[13,4,8,2,"StrokeCap"],[13,13,8,11],[13,14,8,12,"StrokeCap"],[13,23,8,21],[13,24,8,22],[13,31,8,29],[13,32,8,30],[13,35,8,33],[13,36,8,34],[13,37,8,35],[13,40,8,38],[13,47,8,45],[14,4,9,2,"StrokeCap"],[14,13,9,11],[14,14,9,12,"StrokeCap"],[14,23,9,21],[14,24,9,22],[14,32,9,30],[14,33,9,31],[14,36,9,34],[14,37,9,35],[14,38,9,36],[14,41,9,39],[14,49,9,47],[15,4,10,2],[15,11,10,9,"StrokeCap"],[15,20,10,18],[16,2,11,0],[16,3,11,1],[16,4,11,2],[16,5,11,3],[16,6,11,4],[16,7,11,5],[17,2,12,7],[17,6,12,11,"StrokeJoin"],[17,16,12,21],[17,19,12,21,"exports"],[17,26,12,21],[17,27,12,21,"StrokeJoin"],[17,37,12,21],[17,40,12,24],[17,53,12,37],[17,63,12,47,"StrokeJoin"],[17,73,12,57],[17,75,12,59],[18,4,13,2,"StrokeJoin"],[18,14,13,12],[18,15,13,13,"StrokeJoin"],[18,25,13,23],[18,26,13,24],[18,33,13,31],[18,34,13,32],[18,37,13,35],[18,38,13,36],[18,39,13,37],[18,42,13,40],[18,49,13,47],[19,4,14,2,"StrokeJoin"],[19,14,14,12],[19,15,14,13,"StrokeJoin"],[19,25,14,23],[19,26,14,24],[19,33,14,31],[19,34,14,32],[19,37,14,35],[19,38,14,36],[19,39,14,37],[19,42,14,40],[19,49,14,47],[20,4,15,2,"StrokeJoin"],[20,14,15,12],[20,15,15,13,"StrokeJoin"],[20,25,15,23],[20,26,15,24],[20,33,15,31],[20,34,15,32],[20,37,15,35],[20,38,15,36],[20,39,15,37],[20,42,15,40],[20,49,15,47],[21,4,16,2],[21,11,16,9,"StrokeJoin"],[21,21,16,19],[22,2,17,0],[22,3,17,1],[22,4,17,2],[22,5,17,3],[22,6,17,4],[22,7,17,5],[23,2,18,7],[23,8,18,13,"isPaint"],[23,15,18,20],[23,18,18,23,"obj"],[23,21,18,26],[23,25,18,30,"obj"],[23,28,18,33],[23,33,18,38],[23,37,18,42],[23,41,18,46,"obj"],[23,44,18,49],[23,45,18,50,"__typename__"],[23,57,18,62],[23,62,18,67],[23,69,18,74],[24,2,18,75,"exports"],[24,9,18,75],[24,10,18,75,"isPaint"],[24,17,18,75],[24,20,18,75,"isPaint"],[24,27,18,75],[25,0,18,75],[25,3]],"functionMap":{"names":["<global>","<anonymous>","isPaint"],"mappings":"AAA,qCC;CDI;oCCC;CDK;qCCC;CDK;uBEC,mDF"}},"type":"js/module"}]}