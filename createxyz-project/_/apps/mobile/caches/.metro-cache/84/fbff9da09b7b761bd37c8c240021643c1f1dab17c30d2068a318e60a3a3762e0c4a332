{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":37},"end":{"line":2,"column":50,"index":87}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"]}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":88},"end":{"line":3,"column":50,"index":138}}],"key":"lArlpaD/5d+RB4jQyU++60NVCc0=","exportNames":["*"]}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":139},"end":{"line":4,"column":52,"index":191}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"]}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":192},"end":{"line":5,"column":46,"index":238}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":239},"end":{"line":6,"column":67,"index":306}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":307},"end":{"line":7,"column":53,"index":360}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[1], \"react\");\n  var _attachHandlers = require(_dependencyMap[2], \"./attachHandlers\");\n  var _updateHandlers = require(_dependencyMap[3], \"./updateHandlers\");\n  var _needsToReattach = require(_dependencyMap[4], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[5], \"./dropHandlers\");\n  var _utils = require(_dependencyMap[6], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[7], \"../../../findNodeHandle\"));\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    const forceRender = (0, _utils.useForceRender)();\n    const updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":47,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"require"],[7,22,1,0],[7,23,1,0,"_dependencyMap"],[7,37,1,0],[8,2,2,0],[8,6,2,0,"_attachHandlers"],[8,21,2,0],[8,24,2,0,"require"],[8,31,2,0],[8,32,2,0,"_dependencyMap"],[8,46,2,0],[9,2,3,0],[9,6,3,0,"_updateHandlers"],[9,21,3,0],[9,24,3,0,"require"],[9,31,3,0],[9,32,3,0,"_dependencyMap"],[9,46,3,0],[10,2,4,0],[10,6,4,0,"_needsToReattach"],[10,22,4,0],[10,25,4,0,"require"],[10,32,4,0],[10,33,4,0,"_dependencyMap"],[10,47,4,0],[11,2,5,0],[11,6,5,0,"_dropHandlers"],[11,19,5,0],[11,22,5,0,"require"],[11,29,5,0],[11,30,5,0,"_dependencyMap"],[11,44,5,0],[12,2,6,0],[12,6,6,0,"_utils"],[12,12,6,0],[12,15,6,0,"require"],[12,22,6,0],[12,23,6,0,"_dependencyMap"],[12,37,6,0],[13,2,7,0],[13,6,7,0,"_findNodeHandle"],[13,21,7,0],[13,24,7,0,"_interopRequireDefault"],[13,46,7,0],[13,47,7,0,"require"],[13,54,7,0],[13,55,7,0,"_dependencyMap"],[13,69,7,0],[14,2,7,54],[15,2,8,0],[16,2,9,0],[18,2,11,7],[18,11,11,16,"useDetectorUpdater"],[18,29,11,34,"useDetectorUpdater"],[18,30,11,35,"state"],[18,35,11,40],[18,37,11,42,"preparedGesture"],[18,52,11,57],[18,54,11,59,"gesturesToAttach"],[18,70,11,75],[18,72,11,77,"gestureConfig"],[18,85,11,90],[18,87,11,92,"webEventHandlersRef"],[18,106,11,111],[18,108,11,113],[19,4,12,2],[19,10,12,8,"forceRender"],[19,21,12,19],[19,24,12,22],[19,28,12,22,"useForceRender"],[19,49,12,36],[19,51,12,37],[19,52,12,38],[20,4,13,2],[20,10,13,8,"updateAttachedGestures"],[20,32,13,30],[20,35,13,33],[20,39,13,33,"useCallback"],[20,57,13,44],[21,4,13,46],[22,4,14,2,"skipConfigUpdate"],[22,20,14,18],[22,24,14,22],[23,6,15,4],[24,6,16,4],[24,12,16,10,"viewTag"],[24,19,16,17],[24,22,16,20],[24,26,16,20,"findNodeHandle"],[24,49,16,34],[24,51,16,35,"state"],[24,56,16,40],[24,57,16,41,"viewRef"],[24,64,16,48],[24,65,16,49],[25,6,17,4],[25,12,17,10,"didUnderlyingViewChange"],[25,35,17,33],[25,38,17,36,"viewTag"],[25,45,17,43],[25,50,17,48,"state"],[25,55,17,53],[25,56,17,54,"previousViewTag"],[25,71,17,69],[26,6,19,4],[26,10,19,8,"didUnderlyingViewChange"],[26,33,19,31],[26,37,19,35],[26,41,19,35,"needsToReattach"],[26,73,19,50],[26,75,19,51,"preparedGesture"],[26,90,19,66],[26,92,19,68,"gesturesToAttach"],[26,108,19,84],[26,109,19,85],[26,111,19,87],[27,8,20,6],[27,12,20,6,"validateDetectorChildren"],[27,43,20,30],[27,45,20,31,"state"],[27,50,20,36],[27,51,20,37,"viewRef"],[27,58,20,44],[27,59,20,45],[28,8,21,6],[28,12,21,6,"dropHandlers"],[28,38,21,18],[28,40,21,19,"preparedGesture"],[28,55,21,34],[28,56,21,35],[29,8,22,6],[29,12,22,6,"attachHandlers"],[29,42,22,20],[29,44,22,21],[30,10,23,8,"preparedGesture"],[30,25,23,23],[31,10,24,8,"gestureConfig"],[31,23,24,21],[32,10,25,8,"gesturesToAttach"],[32,26,25,24],[33,10,26,8,"webEventHandlersRef"],[33,29,26,27],[34,10,27,8,"viewTag"],[35,8,28,6],[35,9,28,7],[35,10,28,8],[36,8,30,6],[36,12,30,10,"didUnderlyingViewChange"],[36,35,30,33],[36,37,30,35],[37,10,31,8,"state"],[37,15,31,13],[37,16,31,14,"previousViewTag"],[37,31,31,29],[37,34,31,32,"viewTag"],[37,41,31,39],[38,10,32,8,"state"],[38,15,32,13],[38,16,32,14,"forceRebuildReanimatedEvent"],[38,43,32,41],[38,46,32,44],[38,50,32,48],[39,10,33,8,"forceRender"],[39,21,33,19],[39,22,33,20],[39,23,33,21],[40,8,34,6],[41,6,35,4],[41,7,35,5],[41,13,35,11],[41,17,35,15],[41,18,35,16,"skipConfigUpdate"],[41,34,35,32],[41,36,35,34],[42,8,36,6],[42,12,36,6,"updateHandlers"],[42,42,36,20],[42,44,36,21,"preparedGesture"],[42,59,36,36],[42,61,36,38,"gestureConfig"],[42,74,36,51],[42,76,36,53,"gesturesToAttach"],[42,92,36,69],[42,93,36,70],[43,6,37,4],[44,4,38,2],[44,5,38,3],[44,7,38,5],[44,8,38,6,"forceRender"],[44,19,38,17],[44,21,38,19,"gestureConfig"],[44,34,38,32],[44,36,38,34,"gesturesToAttach"],[44,52,38,50],[44,54,38,52,"preparedGesture"],[44,69,38,67],[44,71,38,69,"state"],[44,76,38,74],[44,78,38,76,"webEventHandlersRef"],[44,97,38,95],[44,98,38,96],[44,99,38,97],[45,4,39,2],[45,11,39,9,"updateAttachedGestures"],[45,33,39,31],[46,2,40,0],[47,0,40,1],[47,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCU;ECG;GDwB;CDE"}},"type":"js/module"}]}