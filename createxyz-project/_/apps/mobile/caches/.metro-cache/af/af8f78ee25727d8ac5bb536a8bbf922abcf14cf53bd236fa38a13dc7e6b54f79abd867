{"dependencies":[{"name":"./isSharedValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":51,"index":66}}],"key":"jbgHoPM9eXlUgTWjuCzmYvJw8Xs=","exportNames":["*"]}},{"name":"./PlatformChecker.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":67},"end":{"line":4,"column":46,"index":113}}],"key":"6AA7RQghlqlrd3hVWNoLh/rI420=","exportNames":["*"]}},{"name":"./threads.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":114},"end":{"line":5,"column":39,"index":153}}],"key":"EIyQVLyLcHNu2pjIKQCQrwCtCkA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.startMapper = startMapper;\n  exports.stopMapper = stopMapper;\n  var _isSharedValue = require(_dependencyMap[0], \"./isSharedValue.js\");\n  var _PlatformChecker = require(_dependencyMap[1], \"./PlatformChecker.js\");\n  var _threads = require(_dependencyMap[2], \"./threads.js\");\n  const IS_JEST = (0, _PlatformChecker.isJest)();\n  const _worklet_1831615820738_init_data = {\n    code: \"function createMapperRegistry_reactNativeReanimated_mappersJs1(){const{IS_JEST,isSharedValue}=this.__closure;const mappers=new Map();let sortedMappers=[];let runRequested=false;let processingMappers=false;function updateMappersOrder(){const pre=new Map();mappers.forEach(function(mapper){if(mapper.outputs){for(const output of mapper.outputs){const preMappers=pre.get(output);if(preMappers===undefined){pre.set(output,[mapper]);}else{preMappers.push(mapper);}}}});const visited=new Set();const newOrder=[];function dfs(mapper){visited.add(mapper);for(const input of mapper.inputs){const preMappers=pre.get(input);if(preMappers){for(const preMapper of preMappers){if(!visited.has(preMapper)){dfs(preMapper);}}}}newOrder.push(mapper);}mappers.forEach(function(mapper){if(!visited.has(mapper)){dfs(mapper);}});sortedMappers=newOrder;}function mapperRun(){runRequested=false;if(processingMappers){return;}try{processingMappers=true;if(mappers.size!==sortedMappers.length){updateMappersOrder();}for(const mapper of sortedMappers){if(mapper.dirty){mapper.dirty=false;mapper.worklet();}}}finally{processingMappers=false;}}function maybeRequestUpdates(){if(IS_JEST){mapperRun();}else if(!runRequested){if(processingMappers){requestAnimationFrame(mapperRun);}else{queueMicrotask(mapperRun);}runRequested=true;}}function extractInputs(inputs,resultArray){if(Array.isArray(inputs)){for(const input of inputs){input&&extractInputs(input,resultArray);}}else if(isSharedValue(inputs)){resultArray.push(inputs);}else if(Object.getPrototypeOf(inputs)===Object.prototype){for(const element of Object.values(inputs)){element&&extractInputs(element,resultArray);}}return resultArray;}return{start:function(mapperID,worklet,inputs,outputs){const mapper={id:mapperID,dirty:true,worklet:worklet,inputs:extractInputs(inputs,[]),outputs:outputs};mappers.set(mapper.id,mapper);sortedMappers=[];for(const sv of mapper.inputs){sv.addListener(mapper.id,function(){mapper.dirty=true;maybeRequestUpdates();});}maybeRequestUpdates();},stop:function(mapperID){const mapper=mappers.get(mapperID);if(mapper){mappers.delete(mapper.id);sortedMappers=[];for(const sv of mapper.inputs){sv.removeListener(mapper.id);}}}};}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createMapperRegistry_reactNativeReanimated_mappersJs1\\\",\\\"IS_JEST\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"runRequested\\\",\\\"processingMappers\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperRun\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"requestAnimationFrame\\\",\\\"queueMicrotask\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"Object\\\",\\\"getPrototypeOf\\\",\\\"prototype\\\",\\\"element\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"addListener\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const createMapperRegistry = function () {\n    const _e = [new global.Error(), -3, -27];\n    const createMapperRegistry = function () {\n      const mappers = new Map();\n      let sortedMappers = [];\n      let runRequested = false;\n      let processingMappers = false;\n      function updateMappersOrder() {\n        // sort mappers topologically\n        // the algorithm here takes adventage of a fact that the topological order\n        // of a transposed graph is a reverse topological order of the original graph\n        // The graph in our case consists of mappers and an edge between two mappers\n        // A and B exists if there is a shared value that's on A's output lists and on\n        // B's input list.\n        //\n        // We don't need however to calculate that graph as it is easier to work with\n        // the transposed version of it that can be calculated ad-hoc. For the transposed\n        // version to be traversed we use \"pre\" map that maps share value to mappers that\n        // output that shared value. Then we can infer all the outgoing edges for a given\n        // mapper simply by scanning it's input list and checking if any of the shared values\n        // from that list exists in the \"pre\" map. If they do, then we have an edge between\n        // that mapper and the mappers from the \"pre\" list for the given shared value.\n        //\n        // For topological sorting we use a dfs-based approach that requires the graph to\n        // be traversed in dfs order and each node after being processed lands at the\n        // beginning of the topological order list. Since we traverse a transposed graph,\n        // instead of reversing that order we can use a normal array and push processed\n        // mappers to the end. There is no need to reverse that array after we are done.\n        const pre = new Map(); // map from sv -> mapper that outputs that sv\n        mappers.forEach(mapper => {\n          if (mapper.outputs) {\n            for (const output of mapper.outputs) {\n              const preMappers = pre.get(output);\n              if (preMappers === undefined) {\n                pre.set(output, [mapper]);\n              } else {\n                preMappers.push(mapper);\n              }\n            }\n          }\n        });\n        const visited = new Set();\n        const newOrder = [];\n        function dfs(mapper) {\n          visited.add(mapper);\n          for (const input of mapper.inputs) {\n            const preMappers = pre.get(input);\n            if (preMappers) {\n              for (const preMapper of preMappers) {\n                if (!visited.has(preMapper)) {\n                  dfs(preMapper);\n                }\n              }\n            }\n          }\n          newOrder.push(mapper);\n        }\n        mappers.forEach(mapper => {\n          if (!visited.has(mapper)) {\n            dfs(mapper);\n          }\n        });\n        sortedMappers = newOrder;\n      }\n      function mapperRun() {\n        runRequested = false;\n        if (processingMappers) {\n          return;\n        }\n        try {\n          processingMappers = true;\n          if (mappers.size !== sortedMappers.length) {\n            updateMappersOrder();\n          }\n          for (const mapper of sortedMappers) {\n            if (mapper.dirty) {\n              mapper.dirty = false;\n              mapper.worklet();\n            }\n          }\n        } finally {\n          processingMappers = false;\n        }\n      }\n      function maybeRequestUpdates() {\n        if (IS_JEST) {\n          // On Jest environment we avoid using queueMicrotask as that'd require test\n          // to advance the clock manually. This on other hand would require tests\n          // to know how many times mappers need to run. As we don't want tests to\n          // make any assumptions on that number it is easier to execute mappers\n          // immediately for testing purposes and only expect test to advance timers\n          // if they want to make any assertions on the effects of animations being run.\n          mapperRun();\n        } else if (!runRequested) {\n          if (processingMappers) {\n            // In general, we should avoid having mappers trigger updates as this may\n            // result in unpredictable behavior. Specifically, the updated value can\n            // be read by mappers that run later in the same frame but previous mappers\n            // would access the old value. Updating mappers during the mapper-run phase\n            // breaks the order in which we should execute the mappers. However, doing\n            // that is still a possibility and there are some instances where people use\n            // the API in that way, hence we need to prevent mapper-run phase falling into\n            // an infinite loop. We do that by detecting when mapper-run is requested while\n            // we are already in mapper-run phase, and in that case we use `requestAnimationFrame`\n            // instead of `queueMicrotask` which will schedule mapper run for the next\n            // frame instead of queuing another set of updates in the same frame.\n            requestAnimationFrame(mapperRun);\n          } else {\n            queueMicrotask(mapperRun);\n          }\n          runRequested = true;\n        }\n      }\n      function extractInputs(inputs, resultArray) {\n        if (Array.isArray(inputs)) {\n          for (const input of inputs) {\n            input && extractInputs(input, resultArray);\n          }\n        } else if ((0, _isSharedValue.isSharedValue)(inputs)) {\n          resultArray.push(inputs);\n        } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\n          // we only extract inputs recursively from \"plain\" objects here, if object\n          // is of a derivative class (e.g. HostObject on web, or Map) we don't scan\n          // it recursively\n          for (const element of Object.values(inputs)) {\n            element && extractInputs(element, resultArray);\n          }\n        }\n        return resultArray;\n      }\n      return {\n        start: (mapperID, worklet, inputs, outputs) => {\n          const mapper = {\n            id: mapperID,\n            dirty: true,\n            worklet,\n            inputs: extractInputs(inputs, []),\n            outputs\n          };\n          mappers.set(mapper.id, mapper);\n          sortedMappers = [];\n          for (const sv of mapper.inputs) {\n            sv.addListener(mapper.id, () => {\n              mapper.dirty = true;\n              maybeRequestUpdates();\n            });\n          }\n          maybeRequestUpdates();\n        },\n        stop: mapperID => {\n          const mapper = mappers.get(mapperID);\n          if (mapper) {\n            mappers.delete(mapper.id);\n            sortedMappers = [];\n            for (const sv of mapper.inputs) {\n              sv.removeListener(mapper.id);\n            }\n          }\n        }\n      };\n    };\n    createMapperRegistry.__closure = {\n      IS_JEST,\n      isSharedValue: _isSharedValue.isSharedValue\n    };\n    createMapperRegistry.__workletHash = 1831615820738;\n    createMapperRegistry.__initData = _worklet_1831615820738_init_data;\n    createMapperRegistry.__stackDetails = _e;\n    return createMapperRegistry;\n  }();\n  let MAPPER_ID = 9999;\n  const _worklet_6546531365916_init_data = {\n    code: \"function reactNativeReanimated_mappersJs2(){const{createMapperRegistry,mapperID,worklet,inputs,outputs}=this.__closure;let mapperRegistry=global.__mapperRegistry;if(mapperRegistry===undefined){mapperRegistry=global.__mapperRegistry=createMapperRegistry();}mapperRegistry.start(mapperID,worklet,inputs,outputs);}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs2\\\",\\\"createMapperRegistry\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"start\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AA0KU,SAAAA,gCAAMA,CAAA,QAAAC,oBAAA,CAAAC,QAAA,CAAAC,OAAA,CAAAC,MAAA,CAAAC,OAAA,OAAAC,SAAA,CACZ,GAAI,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC5C,GAAIF,cAAc,GAAKG,SAAS,CAAE,CAChCH,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAAGR,oBAAoB,CAAC,CAAC,CACnE,CACAM,cAAc,CAACI,KAAK,CAACT,QAAQ,CAAEC,OAAO,CAAEC,MAAM,CAAEC,OAAO,CAAC,CAC1D\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function startMapper(worklet, inputs = [], outputs = []) {\n    const mapperID = MAPPER_ID += 1;\n    (0, _threads.runOnUI)(function () {\n      const _e = [new global.Error(), -6, -27];\n      const reactNativeReanimated_mappersJs2 = function () {\n        let mapperRegistry = global.__mapperRegistry;\n        if (mapperRegistry === undefined) {\n          mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n        }\n        mapperRegistry.start(mapperID, worklet, inputs, outputs);\n      };\n      reactNativeReanimated_mappersJs2.__closure = {\n        createMapperRegistry,\n        mapperID,\n        worklet,\n        inputs,\n        outputs\n      };\n      reactNativeReanimated_mappersJs2.__workletHash = 6546531365916;\n      reactNativeReanimated_mappersJs2.__initData = _worklet_6546531365916_init_data;\n      reactNativeReanimated_mappersJs2.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs2;\n    }())();\n    return mapperID;\n  }\n  const _worklet_2151698497712_init_data = {\n    code: \"function reactNativeReanimated_mappersJs3(){const{mapperID}=this.__closure;const mapperRegistry=global.__mapperRegistry;mapperRegistry===null||mapperRegistry===void 0||mapperRegistry.stop(mapperID);}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs3\\\",\\\"mapperID\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AAoLU,SAAAA,gCAAMA,CAAA,QAAAC,QAAA,OAAAC,SAAA,CACZ,KAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC9CF,cAAc,SAAdA,cAAc,WAAdA,cAAc,CAAEG,IAAI,CAACL,QAAQ,CAAC,CAChC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function stopMapper(mapperID) {\n    (0, _threads.runOnUI)(function () {\n      const _e = [new global.Error(), -2, -27];\n      const reactNativeReanimated_mappersJs3 = function () {\n        const mapperRegistry = global.__mapperRegistry;\n        mapperRegistry?.stop(mapperID);\n      };\n      reactNativeReanimated_mappersJs3.__closure = {\n        mapperID\n      };\n      reactNativeReanimated_mappersJs3.__workletHash = 2151698497712;\n      reactNativeReanimated_mappersJs3.__initData = _worklet_2151698497712_init_data;\n      reactNativeReanimated_mappersJs3.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs3;\n    }())();\n  }\n});","lineCount":243,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"startMapper"],[7,21,1,13],[7,24,1,13,"startMapper"],[7,35,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"stopMapper"],[8,20,1,13],[8,23,1,13,"stopMapper"],[8,33,1,13],[9,2,3,0],[9,6,3,0,"_isSharedValue"],[9,20,3,0],[9,23,3,0,"require"],[9,30,3,0],[9,31,3,0,"_dependencyMap"],[9,45,3,0],[10,2,4,0],[10,6,4,0,"_PlatformChecker"],[10,22,4,0],[10,25,4,0,"require"],[10,32,4,0],[10,33,4,0,"_dependencyMap"],[10,47,4,0],[11,2,5,0],[11,6,5,0,"_threads"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,8,6,6,"IS_JEST"],[12,15,6,13],[12,18,6,16],[12,22,6,16,"isJest"],[12,45,6,22],[12,47,6,23],[12,48,6,24],[13,2,6,25],[13,8,6,25,"_worklet_1831615820738_init_data"],[13,40,6,25],[14,4,6,25,"code"],[14,8,6,25],[15,4,6,25,"location"],[15,12,6,25],[16,4,6,25,"sourceMap"],[16,13,6,25],[17,4,6,25,"version"],[17,11,6,25],[18,2,6,25],[19,2,6,25],[19,8,6,25,"createMapperRegistry"],[19,28,6,25],[19,31,7,0],[20,4,7,0],[20,10,7,0,"_e"],[20,12,7,0],[20,20,7,0,"global"],[20,26,7,0],[20,27,7,0,"Error"],[20,32,7,0],[21,4,7,0],[21,10,7,0,"createMapperRegistry"],[21,30,7,0],[21,42,7,0,"createMapperRegistry"],[21,43,7,0],[21,45,7,32],[22,6,10,2],[22,12,10,8,"mappers"],[22,19,10,15],[22,22,10,18],[22,26,10,22,"Map"],[22,29,10,25],[22,30,10,26],[22,31,10,27],[23,6,11,2],[23,10,11,6,"sortedMappers"],[23,23,11,19],[23,26,11,22],[23,28,11,24],[24,6,12,2],[24,10,12,6,"runRequested"],[24,22,12,18],[24,25,12,21],[24,30,12,26],[25,6,13,2],[25,10,13,6,"processingMappers"],[25,27,13,23],[25,30,13,26],[25,35,13,31],[26,6,14,2],[26,15,14,11,"updateMappersOrder"],[26,33,14,29,"updateMappersOrder"],[26,34,14,29],[26,36,14,32],[27,8,15,4],[28,8,16,4],[29,8,17,4],[30,8,18,4],[31,8,19,4],[32,8,20,4],[33,8,21,4],[34,8,22,4],[35,8,23,4],[36,8,24,4],[37,8,25,4],[38,8,26,4],[39,8,27,4],[40,8,28,4],[41,8,29,4],[42,8,30,4],[43,8,31,4],[44,8,32,4],[45,8,33,4],[46,8,34,4],[47,8,35,4],[47,14,35,10,"pre"],[47,17,35,13],[47,20,35,16],[47,24,35,20,"Map"],[47,27,35,23],[47,28,35,24],[47,29,35,25],[47,30,35,26],[47,31,35,27],[48,8,36,4,"mappers"],[48,15,36,11],[48,16,36,12,"forEach"],[48,23,36,19],[48,24,36,20,"mapper"],[48,30,36,26],[48,34,36,30],[49,10,37,6],[49,14,37,10,"mapper"],[49,20,37,16],[49,21,37,17,"outputs"],[49,28,37,24],[49,30,37,26],[50,12,38,8],[50,17,38,13],[50,23,38,19,"output"],[50,29,38,25],[50,33,38,29,"mapper"],[50,39,38,35],[50,40,38,36,"outputs"],[50,47,38,43],[50,49,38,45],[51,14,39,10],[51,20,39,16,"preMappers"],[51,30,39,26],[51,33,39,29,"pre"],[51,36,39,32],[51,37,39,33,"get"],[51,40,39,36],[51,41,39,37,"output"],[51,47,39,43],[51,48,39,44],[52,14,40,10],[52,18,40,14,"preMappers"],[52,28,40,24],[52,33,40,29,"undefined"],[52,42,40,38],[52,44,40,40],[53,16,41,12,"pre"],[53,19,41,15],[53,20,41,16,"set"],[53,23,41,19],[53,24,41,20,"output"],[53,30,41,26],[53,32,41,28],[53,33,41,29,"mapper"],[53,39,41,35],[53,40,41,36],[53,41,41,37],[54,14,42,10],[54,15,42,11],[54,21,42,17],[55,16,43,12,"preMappers"],[55,26,43,22],[55,27,43,23,"push"],[55,31,43,27],[55,32,43,28,"mapper"],[55,38,43,34],[55,39,43,35],[56,14,44,10],[57,12,45,8],[58,10,46,6],[59,8,47,4],[59,9,47,5],[59,10,47,6],[60,8,48,4],[60,14,48,10,"visited"],[60,21,48,17],[60,24,48,20],[60,28,48,24,"Set"],[60,31,48,27],[60,32,48,28],[60,33,48,29],[61,8,49,4],[61,14,49,10,"newOrder"],[61,22,49,18],[61,25,49,21],[61,27,49,23],[62,8,50,4],[62,17,50,13,"dfs"],[62,20,50,16,"dfs"],[62,21,50,17,"mapper"],[62,27,50,23],[62,29,50,25],[63,10,51,6,"visited"],[63,17,51,13],[63,18,51,14,"add"],[63,21,51,17],[63,22,51,18,"mapper"],[63,28,51,24],[63,29,51,25],[64,10,52,6],[64,15,52,11],[64,21,52,17,"input"],[64,26,52,22],[64,30,52,26,"mapper"],[64,36,52,32],[64,37,52,33,"inputs"],[64,43,52,39],[64,45,52,41],[65,12,53,8],[65,18,53,14,"preMappers"],[65,28,53,24],[65,31,53,27,"pre"],[65,34,53,30],[65,35,53,31,"get"],[65,38,53,34],[65,39,53,35,"input"],[65,44,53,40],[65,45,53,41],[66,12,54,8],[66,16,54,12,"preMappers"],[66,26,54,22],[66,28,54,24],[67,14,55,10],[67,19,55,15],[67,25,55,21,"preMapper"],[67,34,55,30],[67,38,55,34,"preMappers"],[67,48,55,44],[67,50,55,46],[68,16,56,12],[68,20,56,16],[68,21,56,17,"visited"],[68,28,56,24],[68,29,56,25,"has"],[68,32,56,28],[68,33,56,29,"preMapper"],[68,42,56,38],[68,43,56,39],[68,45,56,41],[69,18,57,14,"dfs"],[69,21,57,17],[69,22,57,18,"preMapper"],[69,31,57,27],[69,32,57,28],[70,16,58,12],[71,14,59,10],[72,12,60,8],[73,10,61,6],[74,10,62,6,"newOrder"],[74,18,62,14],[74,19,62,15,"push"],[74,23,62,19],[74,24,62,20,"mapper"],[74,30,62,26],[74,31,62,27],[75,8,63,4],[76,8,64,4,"mappers"],[76,15,64,11],[76,16,64,12,"forEach"],[76,23,64,19],[76,24,64,20,"mapper"],[76,30,64,26],[76,34,64,30],[77,10,65,6],[77,14,65,10],[77,15,65,11,"visited"],[77,22,65,18],[77,23,65,19,"has"],[77,26,65,22],[77,27,65,23,"mapper"],[77,33,65,29],[77,34,65,30],[77,36,65,32],[78,12,66,8,"dfs"],[78,15,66,11],[78,16,66,12,"mapper"],[78,22,66,18],[78,23,66,19],[79,10,67,6],[80,8,68,4],[80,9,68,5],[80,10,68,6],[81,8,69,4,"sortedMappers"],[81,21,69,17],[81,24,69,20,"newOrder"],[81,32,69,28],[82,6,70,2],[83,6,71,2],[83,15,71,11,"mapperRun"],[83,24,71,20,"mapperRun"],[83,25,71,20],[83,27,71,23],[84,8,72,4,"runRequested"],[84,20,72,16],[84,23,72,19],[84,28,72,24],[85,8,73,4],[85,12,73,8,"processingMappers"],[85,29,73,25],[85,31,73,27],[86,10,74,6],[87,8,75,4],[88,8,76,4],[88,12,76,8],[89,10,77,6,"processingMappers"],[89,27,77,23],[89,30,77,26],[89,34,77,30],[90,10,78,6],[90,14,78,10,"mappers"],[90,21,78,17],[90,22,78,18,"size"],[90,26,78,22],[90,31,78,27,"sortedMappers"],[90,44,78,40],[90,45,78,41,"length"],[90,51,78,47],[90,53,78,49],[91,12,79,8,"updateMappersOrder"],[91,30,79,26],[91,31,79,27],[91,32,79,28],[92,10,80,6],[93,10,81,6],[93,15,81,11],[93,21,81,17,"mapper"],[93,27,81,23],[93,31,81,27,"sortedMappers"],[93,44,81,40],[93,46,81,42],[94,12,82,8],[94,16,82,12,"mapper"],[94,22,82,18],[94,23,82,19,"dirty"],[94,28,82,24],[94,30,82,26],[95,14,83,10,"mapper"],[95,20,83,16],[95,21,83,17,"dirty"],[95,26,83,22],[95,29,83,25],[95,34,83,30],[96,14,84,10,"mapper"],[96,20,84,16],[96,21,84,17,"worklet"],[96,28,84,24],[96,29,84,25],[96,30,84,26],[97,12,85,8],[98,10,86,6],[99,8,87,4],[99,9,87,5],[99,18,87,14],[100,10,88,6,"processingMappers"],[100,27,88,23],[100,30,88,26],[100,35,88,31],[101,8,89,4],[102,6,90,2],[103,6,91,2],[103,15,91,11,"maybeRequestUpdates"],[103,34,91,30,"maybeRequestUpdates"],[103,35,91,30],[103,37,91,33],[104,8,92,4],[104,12,92,8,"IS_JEST"],[104,19,92,15],[104,21,92,17],[105,10,93,6],[106,10,94,6],[107,10,95,6],[108,10,96,6],[109,10,97,6],[110,10,98,6],[111,10,99,6,"mapperRun"],[111,19,99,15],[111,20,99,16],[111,21,99,17],[112,8,100,4],[112,9,100,5],[112,15,100,11],[112,19,100,15],[112,20,100,16,"runRequested"],[112,32,100,28],[112,34,100,30],[113,10,101,6],[113,14,101,10,"processingMappers"],[113,31,101,27],[113,33,101,29],[114,12,102,8],[115,12,103,8],[116,12,104,8],[117,12,105,8],[118,12,106,8],[119,12,107,8],[120,12,108,8],[121,12,109,8],[122,12,110,8],[123,12,111,8],[124,12,112,8],[125,12,113,8,"requestAnimationFrame"],[125,33,113,29],[125,34,113,30,"mapperRun"],[125,43,113,39],[125,44,113,40],[126,10,114,6],[126,11,114,7],[126,17,114,13],[127,12,115,8,"queueMicrotask"],[127,26,115,22],[127,27,115,23,"mapperRun"],[127,36,115,32],[127,37,115,33],[128,10,116,6],[129,10,117,6,"runRequested"],[129,22,117,18],[129,25,117,21],[129,29,117,25],[130,8,118,4],[131,6,119,2],[132,6,120,2],[132,15,120,11,"extractInputs"],[132,28,120,24,"extractInputs"],[132,29,120,25,"inputs"],[132,35,120,31],[132,37,120,33,"resultArray"],[132,48,120,44],[132,50,120,46],[133,8,121,4],[133,12,121,8,"Array"],[133,17,121,13],[133,18,121,14,"isArray"],[133,25,121,21],[133,26,121,22,"inputs"],[133,32,121,28],[133,33,121,29],[133,35,121,31],[134,10,122,6],[134,15,122,11],[134,21,122,17,"input"],[134,26,122,22],[134,30,122,26,"inputs"],[134,36,122,32],[134,38,122,34],[135,12,123,8,"input"],[135,17,123,13],[135,21,123,17,"extractInputs"],[135,34,123,30],[135,35,123,31,"input"],[135,40,123,36],[135,42,123,38,"resultArray"],[135,53,123,49],[135,54,123,50],[136,10,124,6],[137,8,125,4],[137,9,125,5],[137,15,125,11],[137,19,125,15],[137,23,125,15,"isSharedValue"],[137,51,125,28],[137,53,125,29,"inputs"],[137,59,125,35],[137,60,125,36],[137,62,125,38],[138,10,126,6,"resultArray"],[138,21,126,17],[138,22,126,18,"push"],[138,26,126,22],[138,27,126,23,"inputs"],[138,33,126,29],[138,34,126,30],[139,8,127,4],[139,9,127,5],[139,15,127,11],[139,19,127,15,"Object"],[139,25,127,21],[139,26,127,22,"getPrototypeOf"],[139,40,127,36],[139,41,127,37,"inputs"],[139,47,127,43],[139,48,127,44],[139,53,127,49,"Object"],[139,59,127,55],[139,60,127,56,"prototype"],[139,69,127,65],[139,71,127,67],[140,10,128,6],[141,10,129,6],[142,10,130,6],[143,10,131,6],[143,15,131,11],[143,21,131,17,"element"],[143,28,131,24],[143,32,131,28,"Object"],[143,38,131,34],[143,39,131,35,"values"],[143,45,131,41],[143,46,131,42,"inputs"],[143,52,131,48],[143,53,131,49],[143,55,131,51],[144,12,132,8,"element"],[144,19,132,15],[144,23,132,19,"extractInputs"],[144,36,132,32],[144,37,132,33,"element"],[144,44,132,40],[144,46,132,42,"resultArray"],[144,57,132,53],[144,58,132,54],[145,10,133,6],[146,8,134,4],[147,8,135,4],[147,15,135,11,"resultArray"],[147,26,135,22],[148,6,136,2],[149,6,137,2],[149,13,137,9],[150,8,138,4,"start"],[150,13,138,9],[150,15,138,11,"start"],[150,16,138,12,"mapperID"],[150,24,138,20],[150,26,138,22,"worklet"],[150,33,138,29],[150,35,138,31,"inputs"],[150,41,138,37],[150,43,138,39,"outputs"],[150,50,138,46],[150,55,138,51],[151,10,139,6],[151,16,139,12,"mapper"],[151,22,139,18],[151,25,139,21],[152,12,140,8,"id"],[152,14,140,10],[152,16,140,12,"mapperID"],[152,24,140,20],[153,12,141,8,"dirty"],[153,17,141,13],[153,19,141,15],[153,23,141,19],[154,12,142,8,"worklet"],[154,19,142,15],[155,12,143,8,"inputs"],[155,18,143,14],[155,20,143,16,"extractInputs"],[155,33,143,29],[155,34,143,30,"inputs"],[155,40,143,36],[155,42,143,38],[155,44,143,40],[155,45,143,41],[156,12,144,8,"outputs"],[157,10,145,6],[157,11,145,7],[158,10,146,6,"mappers"],[158,17,146,13],[158,18,146,14,"set"],[158,21,146,17],[158,22,146,18,"mapper"],[158,28,146,24],[158,29,146,25,"id"],[158,31,146,27],[158,33,146,29,"mapper"],[158,39,146,35],[158,40,146,36],[159,10,147,6,"sortedMappers"],[159,23,147,19],[159,26,147,22],[159,28,147,24],[160,10,148,6],[160,15,148,11],[160,21,148,17,"sv"],[160,23,148,19],[160,27,148,23,"mapper"],[160,33,148,29],[160,34,148,30,"inputs"],[160,40,148,36],[160,42,148,38],[161,12,149,8,"sv"],[161,14,149,10],[161,15,149,11,"addListener"],[161,26,149,22],[161,27,149,23,"mapper"],[161,33,149,29],[161,34,149,30,"id"],[161,36,149,32],[161,38,149,34],[161,44,149,40],[162,14,150,10,"mapper"],[162,20,150,16],[162,21,150,17,"dirty"],[162,26,150,22],[162,29,150,25],[162,33,150,29],[163,14,151,10,"maybeRequestUpdates"],[163,33,151,29],[163,34,151,30],[163,35,151,31],[164,12,152,8],[164,13,152,9],[164,14,152,10],[165,10,153,6],[166,10,154,6,"maybeRequestUpdates"],[166,29,154,25],[166,30,154,26],[166,31,154,27],[167,8,155,4],[167,9,155,5],[168,8,156,4,"stop"],[168,12,156,8],[168,14,156,10,"mapperID"],[168,22,156,18],[168,26,156,22],[169,10,157,6],[169,16,157,12,"mapper"],[169,22,157,18],[169,25,157,21,"mappers"],[169,32,157,28],[169,33,157,29,"get"],[169,36,157,32],[169,37,157,33,"mapperID"],[169,45,157,41],[169,46,157,42],[170,10,158,6],[170,14,158,10,"mapper"],[170,20,158,16],[170,22,158,18],[171,12,159,8,"mappers"],[171,19,159,15],[171,20,159,16,"delete"],[171,26,159,22],[171,27,159,23,"mapper"],[171,33,159,29],[171,34,159,30,"id"],[171,36,159,32],[171,37,159,33],[172,12,160,8,"sortedMappers"],[172,25,160,21],[172,28,160,24],[172,30,160,26],[173,12,161,8],[173,17,161,13],[173,23,161,19,"sv"],[173,25,161,21],[173,29,161,25,"mapper"],[173,35,161,31],[173,36,161,32,"inputs"],[173,42,161,38],[173,44,161,40],[174,14,162,10,"sv"],[174,16,162,12],[174,17,162,13,"removeListener"],[174,31,162,27],[174,32,162,28,"mapper"],[174,38,162,34],[174,39,162,35,"id"],[174,41,162,37],[174,42,162,38],[175,12,163,8],[176,10,164,6],[177,8,165,4],[178,6,166,2],[178,7,166,3],[179,4,167,0],[179,5,167,1],[180,4,167,1,"createMapperRegistry"],[180,24,167,1],[180,25,167,1,"__closure"],[180,34,167,1],[181,6,167,1,"IS_JEST"],[181,13,167,1],[182,6,167,1,"isSharedValue"],[182,19,167,1],[182,21,125,15,"isSharedValue"],[183,4,125,28],[184,4,125,28,"createMapperRegistry"],[184,24,125,28],[184,25,125,28,"__workletHash"],[184,38,125,28],[185,4,125,28,"createMapperRegistry"],[185,24,125,28],[185,25,125,28,"__initData"],[185,35,125,28],[185,38,125,28,"_worklet_1831615820738_init_data"],[185,70,125,28],[186,4,125,28,"createMapperRegistry"],[186,24,125,28],[186,25,125,28,"__stackDetails"],[186,39,125,28],[186,42,125,28,"_e"],[186,44,125,28],[187,4,125,28],[187,11,125,28,"createMapperRegistry"],[187,31,125,28],[188,2,125,28],[188,3,7,0],[189,2,168,0],[189,6,168,4,"MAPPER_ID"],[189,15,168,13],[189,18,168,16],[189,22,168,20],[190,2,168,21],[190,8,168,21,"_worklet_6546531365916_init_data"],[190,40,168,21],[191,4,168,21,"code"],[191,8,168,21],[192,4,168,21,"location"],[192,12,168,21],[193,4,168,21,"sourceMap"],[193,13,168,21],[194,4,168,21,"version"],[194,11,168,21],[195,2,168,21],[196,2,169,7],[196,11,169,16,"startMapper"],[196,22,169,27,"startMapper"],[196,23,169,28,"worklet"],[196,30,169,35],[196,32,169,37,"inputs"],[196,38,169,43],[196,41,169,46],[196,43,169,48],[196,45,169,50,"outputs"],[196,52,169,57],[196,55,169,60],[196,57,169,62],[196,59,169,64],[197,4,170,2],[197,10,170,8,"mapperID"],[197,18,170,16],[197,21,170,19,"MAPPER_ID"],[197,30,170,28],[197,34,170,32],[197,35,170,33],[198,4,171,2],[198,8,171,2,"runOnUI"],[198,24,171,9],[198,26,171,10],[199,6,171,10],[199,12,171,10,"_e"],[199,14,171,10],[199,22,171,10,"global"],[199,28,171,10],[199,29,171,10,"Error"],[199,34,171,10],[200,6,171,10],[200,12,171,10,"reactNativeReanimated_mappersJs2"],[200,44,171,10],[200,56,171,10,"reactNativeReanimated_mappersJs2"],[200,57,171,10],[200,59,171,16],[201,8,172,4],[201,12,172,8,"mapperRegistry"],[201,26,172,22],[201,29,172,25,"global"],[201,35,172,31],[201,36,172,32,"__mapperRegistry"],[201,52,172,48],[202,8,173,4],[202,12,173,8,"mapperRegistry"],[202,26,173,22],[202,31,173,27,"undefined"],[202,40,173,36],[202,42,173,38],[203,10,174,6,"mapperRegistry"],[203,24,174,20],[203,27,174,23,"global"],[203,33,174,29],[203,34,174,30,"__mapperRegistry"],[203,50,174,46],[203,53,174,49,"createMapperRegistry"],[203,73,174,69],[203,74,174,70],[203,75,174,71],[204,8,175,4],[205,8,176,4,"mapperRegistry"],[205,22,176,18],[205,23,176,19,"start"],[205,28,176,24],[205,29,176,25,"mapperID"],[205,37,176,33],[205,39,176,35,"worklet"],[205,46,176,42],[205,48,176,44,"inputs"],[205,54,176,50],[205,56,176,52,"outputs"],[205,63,176,59],[205,64,176,60],[206,6,177,2],[206,7,177,3],[207,6,177,3,"reactNativeReanimated_mappersJs2"],[207,38,177,3],[207,39,177,3,"__closure"],[207,48,177,3],[208,8,177,3,"createMapperRegistry"],[208,28,177,3],[209,8,177,3,"mapperID"],[209,16,177,3],[210,8,177,3,"worklet"],[210,15,177,3],[211,8,177,3,"inputs"],[211,14,177,3],[212,8,177,3,"outputs"],[213,6,177,3],[214,6,177,3,"reactNativeReanimated_mappersJs2"],[214,38,177,3],[214,39,177,3,"__workletHash"],[214,52,177,3],[215,6,177,3,"reactNativeReanimated_mappersJs2"],[215,38,177,3],[215,39,177,3,"__initData"],[215,49,177,3],[215,52,177,3,"_worklet_6546531365916_init_data"],[215,84,177,3],[216,6,177,3,"reactNativeReanimated_mappersJs2"],[216,38,177,3],[216,39,177,3,"__stackDetails"],[216,53,177,3],[216,56,177,3,"_e"],[216,58,177,3],[217,6,177,3],[217,13,177,3,"reactNativeReanimated_mappersJs2"],[217,45,177,3],[218,4,177,3],[218,5,171,10],[218,7,177,3],[218,8,177,4],[218,9,177,5],[218,10,177,6],[219,4,178,2],[219,11,178,9,"mapperID"],[219,19,178,17],[220,2,179,0],[221,2,179,1],[221,8,179,1,"_worklet_2151698497712_init_data"],[221,40,179,1],[222,4,179,1,"code"],[222,8,179,1],[223,4,179,1,"location"],[223,12,179,1],[224,4,179,1,"sourceMap"],[224,13,179,1],[225,4,179,1,"version"],[225,11,179,1],[226,2,179,1],[227,2,180,7],[227,11,180,16,"stopMapper"],[227,21,180,26,"stopMapper"],[227,22,180,27,"mapperID"],[227,30,180,35],[227,32,180,37],[228,4,181,2],[228,8,181,2,"runOnUI"],[228,24,181,9],[228,26,181,10],[229,6,181,10],[229,12,181,10,"_e"],[229,14,181,10],[229,22,181,10,"global"],[229,28,181,10],[229,29,181,10,"Error"],[229,34,181,10],[230,6,181,10],[230,12,181,10,"reactNativeReanimated_mappersJs3"],[230,44,181,10],[230,56,181,10,"reactNativeReanimated_mappersJs3"],[230,57,181,10],[230,59,181,16],[231,8,182,4],[231,14,182,10,"mapperRegistry"],[231,28,182,24],[231,31,182,27,"global"],[231,37,182,33],[231,38,182,34,"__mapperRegistry"],[231,54,182,50],[232,8,183,4,"mapperRegistry"],[232,22,183,18],[232,24,183,20,"stop"],[232,28,183,24],[232,29,183,25,"mapperID"],[232,37,183,33],[232,38,183,34],[233,6,184,2],[233,7,184,3],[234,6,184,3,"reactNativeReanimated_mappersJs3"],[234,38,184,3],[234,39,184,3,"__closure"],[234,48,184,3],[235,8,184,3,"mapperID"],[236,6,184,3],[237,6,184,3,"reactNativeReanimated_mappersJs3"],[237,38,184,3],[237,39,184,3,"__workletHash"],[237,52,184,3],[238,6,184,3,"reactNativeReanimated_mappersJs3"],[238,38,184,3],[238,39,184,3,"__initData"],[238,49,184,3],[238,52,184,3,"_worklet_2151698497712_init_data"],[238,84,184,3],[239,6,184,3,"reactNativeReanimated_mappersJs3"],[239,38,184,3],[239,39,184,3,"__stackDetails"],[239,53,184,3],[239,56,184,3,"_e"],[239,58,184,3],[240,6,184,3],[240,13,184,3,"reactNativeReanimated_mappersJs3"],[240,45,184,3],[241,4,184,3],[241,5,181,10],[241,7,184,3],[241,8,184,4],[241,9,184,5],[241,10,184,6],[242,2,185,0],[243,0,185,1],[243,3]],"functionMap":{"names":["<global>","createMapperRegistry","updateMappersOrder","forEach$argument_0","dfs","mapperRun","maybeRequestUpdates","extractInputs","start","sv.addListener$argument_1","stop","startMapper","runOnUI$argument_0","stopMapper"],"mappings":"AAA;ACM;ECO;oBCsB;KDW;IEG;KFa;oBCC;KDI;GDE;EIC;GJmB;EKC;GL4B;EMC;GNgB;WOE;kCCW;SDG;KPG;USC;KTS;CDE;OWE;UCE;GDM;CXE;OaC;UDC;GCG;CbC"}},"type":"js/module"}]}