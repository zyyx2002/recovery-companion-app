{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    constructor(...gestures) {\n      super();\n      _defineProperty(this, \"gestures\", []);\n      _defineProperty(this, \"simultaneousGestures\", []);\n      _defineProperty(this, \"requireGesturesToFail\", []);\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        }; // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  exports.ComposedGesture = ComposedGesture;\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures // and make a copy without it\n      .filter(x => x !== gesture) // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  exports.SimultaneousGesture = SimultaneousGesture;\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail)); // Every group gets to wait for all groups before it\n\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n  exports.ExclusiveGesture = ExclusiveGesture;\n});","lineCount":98,"map":[[6,2,3,0],[6,6,3,0,"_gesture"],[6,14,3,0],[6,17,3,0,"require"],[6,24,3,0],[6,25,3,0,"_dependencyMap"],[6,39,3,0],[7,2,1,0],[7,11,1,9,"_defineProperty"],[7,26,1,24,"_defineProperty"],[7,27,1,25,"obj"],[7,30,1,28],[7,32,1,30,"key"],[7,35,1,33],[7,37,1,35,"value"],[7,42,1,40],[7,44,1,42],[8,4,1,44],[8,8,1,48,"key"],[8,11,1,51],[8,15,1,55,"obj"],[8,18,1,58],[8,20,1,60],[9,6,1,62,"Object"],[9,12,1,68],[9,13,1,69,"defineProperty"],[9,27,1,83],[9,28,1,84,"obj"],[9,31,1,87],[9,33,1,89,"key"],[9,36,1,92],[9,38,1,94],[10,8,1,96,"value"],[10,13,1,101],[10,15,1,103,"value"],[10,20,1,108],[11,8,1,110,"enumerable"],[11,18,1,120],[11,20,1,122],[11,24,1,126],[12,8,1,128,"configurable"],[12,20,1,140],[12,22,1,142],[12,26,1,146],[13,8,1,148,"writable"],[13,16,1,156],[13,18,1,158],[14,6,1,163],[14,7,1,164],[14,8,1,165],[15,4,1,167],[15,5,1,168],[15,11,1,174],[16,6,1,176,"obj"],[16,9,1,179],[16,10,1,180,"key"],[16,13,1,183],[16,14,1,184],[16,17,1,187,"value"],[16,22,1,192],[17,4,1,194],[18,4,1,196],[18,11,1,203,"obj"],[18,14,1,206],[19,2,1,208],[20,2,5,0],[20,11,5,9,"extendRelation"],[20,25,5,23,"extendRelation"],[20,26,5,24,"currentRelation"],[20,41,5,39],[20,43,5,41,"extendWith"],[20,53,5,51],[20,55,5,53],[21,4,6,2],[21,8,6,6,"currentRelation"],[21,23,6,21],[21,28,6,26,"undefined"],[21,37,6,35],[21,39,6,37],[22,6,7,4],[22,13,7,11],[22,14,7,12],[22,17,7,15,"extendWith"],[22,27,7,25],[22,28,7,26],[23,4,8,2],[23,5,8,3],[23,11,8,9],[24,6,9,4],[24,13,9,11],[24,14,9,12],[24,17,9,15,"currentRelation"],[24,32,9,30],[24,34,9,32],[24,37,9,35,"extendWith"],[24,47,9,45],[24,48,9,46],[25,4,10,2],[26,2,11,0],[27,2,13,7],[27,8,13,13,"ComposedGesture"],[27,23,13,28],[27,32,13,37,"Gesture"],[27,48,13,44],[27,49,13,45],[28,4,14,2,"constructor"],[28,15,14,13,"constructor"],[28,16,14,14],[28,19,14,17,"gestures"],[28,27,14,25],[28,29,14,27],[29,6,15,4],[29,11,15,9],[29,12,15,10],[29,13,15,11],[30,6,17,4,"_defineProperty"],[30,21,17,19],[30,22,17,20],[30,26,17,24],[30,28,17,26],[30,38,17,36],[30,40,17,38],[30,42,17,40],[30,43,17,41],[31,6,19,4,"_defineProperty"],[31,21,19,19],[31,22,19,20],[31,26,19,24],[31,28,19,26],[31,50,19,48],[31,52,19,50],[31,54,19,52],[31,55,19,53],[32,6,21,4,"_defineProperty"],[32,21,21,19],[32,22,21,20],[32,26,21,24],[32,28,21,26],[32,51,21,49],[32,53,21,51],[32,55,21,53],[32,56,21,54],[33,6,23,4],[33,10,23,8],[33,11,23,9,"gestures"],[33,19,23,17],[33,22,23,20,"gestures"],[33,30,23,28],[34,4,24,2],[35,4,26,2,"prepareSingleGesture"],[35,24,26,22,"prepareSingleGesture"],[35,25,26,23,"gesture"],[35,32,26,30],[35,34,26,32,"simultaneousGestures"],[35,54,26,52],[35,56,26,54,"requireGesturesToFail"],[35,77,26,75],[35,79,26,77],[36,6,27,4],[36,10,27,8,"gesture"],[36,17,27,15],[36,29,27,27,"BaseGesture"],[36,49,27,38],[36,51,27,40],[37,8,28,6],[37,14,28,12,"newConfig"],[37,23,28,21],[37,26,28,24],[38,10,28,26],[38,13,28,29,"gesture"],[38,20,28,36],[38,21,28,37,"config"],[39,8,29,6],[39,9,29,7],[39,10,29,8],[39,11,29,9],[40,8,30,6],[42,8,32,6,"newConfig"],[42,17,32,15],[42,18,32,16,"simultaneousWith"],[42,34,32,32],[42,37,32,35,"extendRelation"],[42,51,32,49],[42,52,32,50,"newConfig"],[42,61,32,59],[42,62,32,60,"simultaneousWith"],[42,78,32,76],[42,80,32,78,"simultaneousGestures"],[42,100,32,98],[42,101,32,99],[43,8,33,6,"newConfig"],[43,17,33,15],[43,18,33,16,"requireToFail"],[43,31,33,29],[43,34,33,32,"extendRelation"],[43,48,33,46],[43,49,33,47,"newConfig"],[43,58,33,56],[43,59,33,57,"requireToFail"],[43,72,33,70],[43,74,33,72,"requireGesturesToFail"],[43,95,33,93],[43,96,33,94],[44,8,34,6,"gesture"],[44,15,34,13],[44,16,34,14,"config"],[44,22,34,20],[44,25,34,23,"newConfig"],[44,34,34,32],[45,6,35,4],[45,7,35,5],[45,13,35,11],[45,17,35,15,"gesture"],[45,24,35,22],[45,36,35,34,"ComposedGesture"],[45,51,35,49],[45,53,35,51],[46,8,36,6,"gesture"],[46,15,36,13],[46,16,36,14,"simultaneousGestures"],[46,36,36,34],[46,39,36,37,"simultaneousGestures"],[46,59,36,57],[47,8,37,6,"gesture"],[47,15,37,13],[47,16,37,14,"requireGesturesToFail"],[47,37,37,35],[47,40,37,38,"requireGesturesToFail"],[47,61,37,59],[48,8,38,6,"gesture"],[48,15,38,13],[48,16,38,14,"prepare"],[48,23,38,21],[48,24,38,22],[48,25,38,23],[49,6,39,4],[50,4,40,2],[51,4,42,2,"prepare"],[51,11,42,9,"prepare"],[51,12,42,9],[51,14,42,12],[52,6,43,4],[52,11,43,9],[52,17,43,15,"gesture"],[52,24,43,22],[52,28,43,26],[52,32,43,30],[52,33,43,31,"gestures"],[52,41,43,39],[52,43,43,41],[53,8,44,6],[53,12,44,10],[53,13,44,11,"prepareSingleGesture"],[53,33,44,31],[53,34,44,32,"gesture"],[53,41,44,39],[53,43,44,41],[53,47,44,45],[53,48,44,46,"simultaneousGestures"],[53,68,44,66],[53,70,44,68],[53,74,44,72],[53,75,44,73,"requireGesturesToFail"],[53,96,44,94],[53,97,44,95],[54,6,45,4],[55,4,46,2],[56,4,48,2,"initialize"],[56,14,48,12,"initialize"],[56,15,48,12],[56,17,48,15],[57,6,49,4],[57,11,49,9],[57,17,49,15,"gesture"],[57,24,49,22],[57,28,49,26],[57,32,49,30],[57,33,49,31,"gestures"],[57,41,49,39],[57,43,49,41],[58,8,50,6,"gesture"],[58,15,50,13],[58,16,50,14,"initialize"],[58,26,50,24],[58,27,50,25],[58,28,50,26],[59,6,51,4],[60,4,52,2],[61,4,54,2,"toGestureArray"],[61,18,54,16,"toGestureArray"],[61,19,54,16],[61,21,54,19],[62,6,55,4],[62,13,55,11],[62,17,55,15],[62,18,55,16,"gestures"],[62,26,55,24],[62,27,55,25,"flatMap"],[62,34,55,32],[62,35,55,33,"gesture"],[62,42,55,40],[62,46,55,44,"gesture"],[62,53,55,51],[62,54,55,52,"toGestureArray"],[62,68,55,66],[62,69,55,67],[62,70,55,68],[62,71,55,69],[63,4,56,2],[64,2,58,0],[65,2,58,1,"exports"],[65,9,58,1],[65,10,58,1,"ComposedGesture"],[65,25,58,1],[65,28,58,1,"ComposedGesture"],[65,43,58,1],[66,2,59,7],[66,8,59,13,"SimultaneousGesture"],[66,27,59,32],[66,36,59,41,"ComposedGesture"],[66,51,59,56],[66,52,59,57],[67,4,60,2,"prepare"],[67,11,60,9,"prepare"],[67,12,60,9],[67,14,60,12],[68,6,61,4],[69,6,62,4],[70,6,63,4],[70,12,63,10,"simultaneousArrays"],[70,30,63,28],[70,33,63,31],[70,37,63,35],[70,38,63,36,"gestures"],[70,46,63,44],[70,47,63,45,"map"],[70,50,63,48],[70,51,63,49,"gesture"],[70,58,63,56],[71,6,63,60],[72,6,64,4],[72,10,64,8],[72,11,64,9,"gestures"],[72,19,64,17],[72,20,64,18],[73,6,64,18],[73,7,65,5,"filter"],[73,13,65,11],[73,14,65,12,"x"],[73,15,65,13],[73,19,65,17,"x"],[73,20,65,18],[73,25,65,23,"gesture"],[73,32,65,30],[73,33,65,31],[73,34,65,32],[74,6,66,4],[75,6,67,4],[76,6,68,4],[77,6,68,4],[77,7,69,5,"flatMap"],[77,14,69,12],[77,15,69,13,"x"],[77,16,69,14],[77,20,69,18,"x"],[77,21,69,19],[77,22,69,20,"toGestureArray"],[77,36,69,34],[77,37,69,35],[77,38,69,36],[77,39,69,37],[77,40,69,38],[78,6,71,4],[78,11,71,9],[78,15,71,13,"i"],[78,16,71,14],[78,19,71,17],[78,20,71,18],[78,22,71,20,"i"],[78,23,71,21],[78,26,71,24],[78,30,71,28],[78,31,71,29,"gestures"],[78,39,71,37],[78,40,71,38,"length"],[78,46,71,44],[78,48,71,46,"i"],[78,49,71,47],[78,51,71,49],[78,53,71,51],[79,8,72,6],[79,12,72,10],[79,13,72,11,"prepareSingleGesture"],[79,33,72,31],[79,34,72,32],[79,38,72,36],[79,39,72,37,"gestures"],[79,47,72,45],[79,48,72,46,"i"],[79,49,72,47],[79,50,72,48],[79,52,72,50,"simultaneousArrays"],[79,70,72,68],[79,71,72,69,"i"],[79,72,72,70],[79,73,72,71],[79,75,72,73],[79,79,72,77],[79,80,72,78,"requireGesturesToFail"],[79,101,72,99],[79,102,72,100],[80,6,73,4],[81,4,74,2],[82,2,76,0],[83,2,76,1,"exports"],[83,9,76,1],[83,10,76,1,"SimultaneousGesture"],[83,29,76,1],[83,32,76,1,"SimultaneousGesture"],[83,51,76,1],[84,2,77,7],[84,8,77,13,"ExclusiveGesture"],[84,24,77,29],[84,33,77,38,"ComposedGesture"],[84,48,77,53],[84,49,77,54],[85,4,78,2,"prepare"],[85,11,78,9,"prepare"],[85,12,78,9],[85,14,78,12],[86,6,79,4],[87,6,80,4],[88,6,81,4],[88,12,81,10,"gestureArrays"],[88,25,81,23],[88,28,81,26],[88,32,81,30],[88,33,81,31,"gestures"],[88,41,81,39],[88,42,81,40,"map"],[88,45,81,43],[88,46,81,44,"gesture"],[88,53,81,51],[88,57,81,55,"gesture"],[88,64,81,62],[88,65,81,63,"toGestureArray"],[88,79,81,77],[88,80,81,78],[88,81,81,79],[88,82,81,80],[89,6,82,4],[89,10,82,8,"requireToFail"],[89,23,82,21],[89,26,82,24],[89,28,82,26],[90,6,84,4],[90,11,84,9],[90,15,84,13,"i"],[90,16,84,14],[90,19,84,17],[90,20,84,18],[90,22,84,20,"i"],[90,23,84,21],[90,26,84,24],[90,30,84,28],[90,31,84,29,"gestures"],[90,39,84,37],[90,40,84,38,"length"],[90,46,84,44],[90,48,84,46,"i"],[90,49,84,47],[90,51,84,49],[90,53,84,51],[91,8,85,6],[91,12,85,10],[91,13,85,11,"prepareSingleGesture"],[91,33,85,31],[91,34,85,32],[91,38,85,36],[91,39,85,37,"gestures"],[91,47,85,45],[91,48,85,46,"i"],[91,49,85,47],[91,50,85,48],[91,52,85,50],[91,56,85,54],[91,57,85,55,"simultaneousGestures"],[91,77,85,75],[91,79,85,77],[91,83,85,81],[91,84,85,82,"requireGesturesToFail"],[91,105,85,103],[91,106,85,104,"concat"],[91,112,85,110],[91,113,85,111,"requireToFail"],[91,126,85,124],[91,127,85,125],[91,128,85,126],[91,129,85,127],[91,130,85,128],[93,8,87,6,"requireToFail"],[93,21,87,19],[93,24,87,22,"requireToFail"],[93,37,87,35],[93,38,87,36,"concat"],[93,44,87,42],[93,45,87,43,"gestureArrays"],[93,58,87,56],[93,59,87,57,"i"],[93,60,87,58],[93,61,87,59],[93,62,87,60],[94,6,88,4],[95,4,89,2],[96,2,91,0],[97,2,91,1,"exports"],[97,9,91,1],[97,10,91,1,"ExclusiveGesture"],[97,26,91,1],[97,29,91,1,"ExclusiveGesture"],[97,45,91,1],[98,0,91,1],[98,3]],"functionMap":{"names":["_defineProperty","<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA,iNC;ACI;CDM;OEE;ECC;GDU;EEE;GFc;EGE;GHI;EIE;GJI;EKE;iCCC,mCD;GLC;CFE;OSC;ECC;iDCG;YCE,kBD;aEI,uBF,CD;GDK;CTE;OcC;ECC;4CJG,mCI;GDQ;CdE"}},"type":"js/module"}]}