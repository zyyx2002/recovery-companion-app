{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isWorkletFunction = exports.SharedTransitionType = exports.SensorType = exports.ReduceMotion = exports.LayoutAnimationType = exports.KeyboardState = exports.InterfaceOrientation = exports.IOSReferenceFrame = void 0;\n  // this is just a temporary mock\n  var LayoutAnimationType = exports.LayoutAnimationType = /*#__PURE__*/function (LayoutAnimationType) {\n    LayoutAnimationType[LayoutAnimationType[\"ENTERING\"] = 1] = \"ENTERING\";\n    LayoutAnimationType[LayoutAnimationType[\"EXITING\"] = 2] = \"EXITING\";\n    LayoutAnimationType[LayoutAnimationType[\"LAYOUT\"] = 3] = \"LAYOUT\";\n    LayoutAnimationType[LayoutAnimationType[\"SHARED_ELEMENT_TRANSITION\"] = 4] = \"SHARED_ELEMENT_TRANSITION\";\n    LayoutAnimationType[LayoutAnimationType[\"SHARED_ELEMENT_TRANSITION_PROGRESS\"] = 5] = \"SHARED_ELEMENT_TRANSITION_PROGRESS\";\n    return LayoutAnimationType;\n  }({});\n  /**\n   * Used to configure the `.defaultTransitionType()` shared transition modifier.\n   *\n   * @experimental\n   */\n  var SharedTransitionType = exports.SharedTransitionType = /*#__PURE__*/function (SharedTransitionType) {\n    SharedTransitionType[\"ANIMATION\"] = \"animation\";\n    SharedTransitionType[\"PROGRESS_ANIMATION\"] = \"progressAnimation\";\n    return SharedTransitionType;\n  }({});\n  /**\n   * A value that can be used both on the [JavaScript\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#javascript-thread)\n   * and the [UI\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n   *\n   * Shared values are defined using\n   * [useSharedValue](https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue)\n   * hook. You access and modify shared values by their `.value` property.\n   */\n  /**\n   * Due to pattern of `MaybeSharedValue` type present in `AnimatedProps`\n   * (`AnimatedStyle`), contravariance breaks types for animated styles etc.\n   * Instead of refactoring the code with small chances of success, we just\n   * disable contravariance for `SharedValue` in this problematic case.\n   */\n  // The below type is used for HostObjects returned by the JSI API that don't have\n  // any accessible fields or methods but can carry data that is accessed from the\n  // c++ side. We add a field to the type to make it possible for typescript to recognize\n  // which JSI methods accept those types as arguments and to be able to correctly type\n  // check other methods that may use them. However, this field is not actually defined\n  // nor should be used for anything else as assigning any data to those objects will\n  // throw an error.\n  // In case of objects with depth or arrays of objects or arrays of arrays etc.\n  // we add this utility type that makes it a `SharaebleRef` of the outermost type.\n  var _worklet_1314228105291_init_data = {\n    code: \"function isWorkletFunction_reactNativeReanimated_commonTypesTs1(value){return(typeof value==='function'&&!!value.__workletHash);}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/commonTypes.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isWorkletFunction_reactNativeReanimated_commonTypesTs1\\\",\\\"value\\\",\\\"__workletHash\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/commonTypes.ts\\\"],\\\"mappings\\\":\\\"AAoXO,SAAAA,sDAIoEA,CAAAC,KAAA,EAKzE,OAEE,MAAO,CAAAA,KAAK,GAAK,UAAU,EAC3B,CAAC,CAAEA,KAAK,CAAwCC,aAAA,EAEpD\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  /**\n   * This function allows you to determine if a given function is a worklet. It\n   * only works with Reanimated Babel plugin enabled. Unless you are doing\n   * something with internals of Reanimated you shouldn't need to use this\n   * function.\n   *\n   * ### Note\n   *\n   * Do not call it before the worklet is declared, as it will always return false\n   * then. E.g.:\n   *\n   * ```ts\n   * isWorkletFunction(myWorklet); // Will always return false.\n   *\n   * function myWorklet() {\n   *   'worklet';\n   * }\n   * ```\n   *\n   * ### Maintainer note\n   *\n   * This function is supposed to be used only in the React Runtime. It always\n   * returns `false` in Worklet Runtimes.\n   */\n  var isWorkletFunction = exports.isWorkletFunction = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isWorkletFunction = function (value) {\n      // Since host objects always return true for `in` operator, we have to use dot notation to check if the property exists.\n      // See https://github.com/facebook/hermes/blob/340726ef8cf666a7cce75bc60b02fa56b3e54560/lib/VM/JSObject.cpp#L1276.\n\n      return (\n        // `__workletHash` isn't extracted in Worklet Runtimes.\n        typeof value === 'function' && !!value.__workletHash\n      );\n    };\n    isWorkletFunction.__closure = {};\n    isWorkletFunction.__workletHash = 1314228105291;\n    isWorkletFunction.__initData = _worklet_1314228105291_init_data;\n    isWorkletFunction.__stackDetails = _e;\n    return isWorkletFunction;\n  }();\n  var SensorType = exports.SensorType = /*#__PURE__*/function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n    return SensorType;\n  }({});\n  var IOSReferenceFrame = exports.IOSReferenceFrame = /*#__PURE__*/function (IOSReferenceFrame) {\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryZVertical\"] = 0] = \"XArbitraryZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryCorrectedZVertical\"] = 1] = \"XArbitraryCorrectedZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XMagneticNorthZVertical\"] = 2] = \"XMagneticNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XTrueNorthZVertical\"] = 3] = \"XTrueNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"Auto\"] = 4] = \"Auto\";\n    return IOSReferenceFrame;\n  }({});\n  /**\n   * A function called upon animation completion. If the animation is cancelled,\n   * the callback will receive `false` as the argument; otherwise, it will receive\n   * `true`.\n   */\n  var InterfaceOrientation = exports.InterfaceOrientation = /*#__PURE__*/function (InterfaceOrientation) {\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_0\"] = 0] = \"ROTATION_0\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_90\"] = 90] = \"ROTATION_90\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_180\"] = 180] = \"ROTATION_180\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_270\"] = 270] = \"ROTATION_270\";\n    return InterfaceOrientation;\n  }({});\n  var KeyboardState = exports.KeyboardState = /*#__PURE__*/function (KeyboardState) {\n    KeyboardState[KeyboardState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    KeyboardState[KeyboardState[\"OPENING\"] = 1] = \"OPENING\";\n    KeyboardState[KeyboardState[\"OPEN\"] = 2] = \"OPEN\";\n    KeyboardState[KeyboardState[\"CLOSING\"] = 3] = \"CLOSING\";\n    KeyboardState[KeyboardState[\"CLOSED\"] = 4] = \"CLOSED\";\n    return KeyboardState;\n  }({});\n  /**\n   * @param x - A number representing X coordinate relative to the parent\n   *   component.\n   * @param y - A number representing Y coordinate relative to the parent\n   *   component.\n   * @param width - A number representing the width of the component.\n   * @param height - A number representing the height of the component.\n   * @param pageX - A number representing X coordinate relative to the screen.\n   * @param pageY - A number representing Y coordinate relative to the screen.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure#returns\n   */\n  /**\n   * @param System - If the `Reduce motion` accessibility setting is enabled on\n   *   the device, disable the animation. Otherwise, enable the animation.\n   * @param Always - Disable the animation.\n   * @param Never - Enable the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/guides/accessibility\n   */\n  var ReduceMotion = exports.ReduceMotion = /*#__PURE__*/function (ReduceMotion) {\n    ReduceMotion[\"System\"] = \"system\";\n    ReduceMotion[\"Always\"] = \"always\";\n    ReduceMotion[\"Never\"] = \"never\";\n    return ReduceMotion;\n  }({}); // Ideally we want AnimatedStyle to not be generic, but there are\n  // so many dependencies on it being generic that it's not feasible at the moment.\n  /** @deprecated Please use {@link AnimatedStyle} type instead. */\n  /** @deprecated This type is no longer relevant. */\n});","lineCount":162,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"isWorkletFunction"],[7,27,1,13],[7,30,1,13,"exports"],[7,37,1,13],[7,38,1,13,"SharedTransitionType"],[7,58,1,13],[7,61,1,13,"exports"],[7,68,1,13],[7,69,1,13,"SensorType"],[7,79,1,13],[7,82,1,13,"exports"],[7,89,1,13],[7,90,1,13,"ReduceMotion"],[7,102,1,13],[7,105,1,13,"exports"],[7,112,1,13],[7,113,1,13,"LayoutAnimationType"],[7,132,1,13],[7,135,1,13,"exports"],[7,142,1,13],[7,143,1,13,"KeyboardState"],[7,156,1,13],[7,159,1,13,"exports"],[7,166,1,13],[7,167,1,13,"InterfaceOrientation"],[7,187,1,13],[7,190,1,13,"exports"],[7,197,1,13],[7,198,1,13,"IOSReferenceFrame"],[7,215,1,13],[8,2,80,68],[9,2,80,68],[9,6,109,12,"LayoutAnimationType"],[9,25,109,31],[9,28,109,31,"exports"],[9,35,109,31],[9,36,109,31,"LayoutAnimationType"],[9,55,109,31],[9,81,109,12,"LayoutAnimationType"],[9,100,109,31],[10,4,109,12,"LayoutAnimationType"],[10,23,109,31],[10,24,109,12,"LayoutAnimationType"],[10,43,109,31],[11,4,109,12,"LayoutAnimationType"],[11,23,109,31],[11,24,109,12,"LayoutAnimationType"],[11,43,109,31],[12,4,109,12,"LayoutAnimationType"],[12,23,109,31],[12,24,109,12,"LayoutAnimationType"],[12,43,109,31],[13,4,109,12,"LayoutAnimationType"],[13,23,109,31],[13,24,109,12,"LayoutAnimationType"],[13,43,109,31],[14,4,109,12,"LayoutAnimationType"],[14,23,109,31],[14,24,109,12,"LayoutAnimationType"],[14,43,109,31],[15,4,109,31],[15,11,109,12,"LayoutAnimationType"],[15,30,109,31],[16,2,109,31],[17,2,182,0],[18,0,183,0],[19,0,184,0],[20,0,185,0],[21,0,186,0],[22,2,182,0],[22,6,187,12,"SharedTransitionType"],[22,26,187,32],[22,29,187,32,"exports"],[22,36,187,32],[22,37,187,32,"SharedTransitionType"],[22,57,187,32],[22,83,187,12,"SharedTransitionType"],[22,103,187,32],[23,4,187,12,"SharedTransitionType"],[23,24,187,32],[24,4,187,12,"SharedTransitionType"],[24,24,187,32],[25,4,187,32],[25,11,187,12,"SharedTransitionType"],[25,31,187,32],[26,2,187,32],[27,2,221,0],[28,0,222,0],[29,0,223,0],[30,0,224,0],[31,0,225,0],[32,0,226,0],[33,0,227,0],[34,0,228,0],[35,0,229,0],[36,0,230,0],[37,2,243,0],[38,0,244,0],[39,0,245,0],[40,0,246,0],[41,0,247,0],[42,0,248,0],[43,2,267,0],[44,2,268,0],[45,2,269,0],[46,2,270,0],[47,2,271,0],[48,2,272,0],[49,2,273,0],[50,2,278,0],[51,2,279,0],[52,2,279,0],[52,6,279,0,"_worklet_1314228105291_init_data"],[52,38,279,0],[53,4,279,0,"code"],[53,8,279,0],[54,4,279,0,"location"],[54,12,279,0],[55,4,279,0,"sourceMap"],[55,13,279,0],[56,4,279,0,"version"],[56,11,279,0],[57,2,279,0],[58,2,349,0],[59,0,350,0],[60,0,351,0],[61,0,352,0],[62,0,353,0],[63,0,354,0],[64,0,355,0],[65,0,356,0],[66,0,357,0],[67,0,358,0],[68,0,359,0],[69,0,360,0],[70,0,361,0],[71,0,362,0],[72,0,363,0],[73,0,364,0],[74,0,365,0],[75,0,366,0],[76,0,367,0],[77,0,368,0],[78,0,369,0],[79,0,370,0],[80,0,371,0],[81,0,372,0],[82,2,349,0],[82,6,349,0,"isWorkletFunction"],[82,23,349,0],[82,26,349,0,"exports"],[82,33,349,0],[82,34,349,0,"isWorkletFunction"],[82,51,349,0],[82,54,373,7],[83,4,373,7],[83,8,373,7,"_e"],[83,10,373,7],[83,18,373,7,"global"],[83,24,373,7],[83,25,373,7,"Error"],[83,30,373,7],[84,4,373,7],[84,8,373,7,"isWorkletFunction"],[84,25,373,7],[84,37,373,7,"isWorkletFunction"],[84,38,377,2,"value"],[84,43,377,16],[84,45,377,75],[85,6,379,2],[86,6,380,2],[88,6,382,2],[89,8,383,4],[90,8,384,4],[90,15,384,11,"value"],[90,20,384,16],[90,25,384,21],[90,35,384,31],[90,39,385,4],[90,40,385,5],[90,41,385,7,"value"],[90,46,385,12],[90,47,385,52,"__workletHash"],[91,6,385,65],[92,4,387,0],[92,5,387,1],[93,4,387,1,"isWorkletFunction"],[93,21,387,1],[93,22,387,1,"__closure"],[93,31,387,1],[94,4,387,1,"isWorkletFunction"],[94,21,387,1],[94,22,387,1,"__workletHash"],[94,35,387,1],[95,4,387,1,"isWorkletFunction"],[95,21,387,1],[95,22,387,1,"__initData"],[95,32,387,1],[95,35,387,1,"_worklet_1314228105291_init_data"],[95,67,387,1],[96,4,387,1,"isWorkletFunction"],[96,21,387,1],[96,22,387,1,"__stackDetails"],[96,36,387,1],[96,39,387,1,"_e"],[96,41,387,1],[97,4,387,1],[97,11,387,1,"isWorkletFunction"],[97,28,387,1],[98,2,387,1],[98,3,373,7],[99,2,373,7],[99,6,445,12,"SensorType"],[99,16,445,22],[99,19,445,22,"exports"],[99,26,445,22],[99,27,445,22,"SensorType"],[99,37,445,22],[99,63,445,12,"SensorType"],[99,73,445,22],[100,4,445,12,"SensorType"],[100,14,445,22],[100,15,445,12,"SensorType"],[100,25,445,22],[101,4,445,12,"SensorType"],[101,14,445,22],[101,15,445,12,"SensorType"],[101,25,445,22],[102,4,445,12,"SensorType"],[102,14,445,22],[102,15,445,12,"SensorType"],[102,25,445,22],[103,4,445,12,"SensorType"],[103,14,445,22],[103,15,445,12,"SensorType"],[103,25,445,22],[104,4,445,12,"SensorType"],[104,14,445,22],[104,15,445,12,"SensorType"],[104,25,445,22],[105,4,445,22],[105,11,445,12,"SensorType"],[105,21,445,22],[106,2,445,22],[107,2,445,22],[107,6,452,12,"IOSReferenceFrame"],[107,23,452,29],[107,26,452,29,"exports"],[107,33,452,29],[107,34,452,29,"IOSReferenceFrame"],[107,51,452,29],[107,77,452,12,"IOSReferenceFrame"],[107,94,452,29],[108,4,452,12,"IOSReferenceFrame"],[108,21,452,29],[108,22,452,12,"IOSReferenceFrame"],[108,39,452,29],[109,4,452,12,"IOSReferenceFrame"],[109,21,452,29],[109,22,452,12,"IOSReferenceFrame"],[109,39,452,29],[110,4,452,12,"IOSReferenceFrame"],[110,21,452,29],[110,22,452,12,"IOSReferenceFrame"],[110,39,452,29],[111,4,452,12,"IOSReferenceFrame"],[111,21,452,29],[111,22,452,12,"IOSReferenceFrame"],[111,39,452,29],[112,4,452,12,"IOSReferenceFrame"],[112,21,452,29],[112,22,452,12,"IOSReferenceFrame"],[112,39,452,29],[113,4,452,29],[113,11,452,12,"IOSReferenceFrame"],[113,28,452,29],[114,2,452,29],[115,2,473,0],[116,0,474,0],[117,0,475,0],[118,0,476,0],[119,0,477,0],[120,2,473,0],[120,6,503,12,"InterfaceOrientation"],[120,26,503,32],[120,29,503,32,"exports"],[120,36,503,32],[120,37,503,32,"InterfaceOrientation"],[120,57,503,32],[120,83,503,12,"InterfaceOrientation"],[120,103,503,32],[121,4,503,12,"InterfaceOrientation"],[121,24,503,32],[121,25,503,12,"InterfaceOrientation"],[121,45,503,32],[122,4,503,12,"InterfaceOrientation"],[122,24,503,32],[122,25,503,12,"InterfaceOrientation"],[122,45,503,32],[123,4,503,12,"InterfaceOrientation"],[123,24,503,32],[123,25,503,12,"InterfaceOrientation"],[123,45,503,32],[124,4,503,12,"InterfaceOrientation"],[124,24,503,32],[124,25,503,12,"InterfaceOrientation"],[124,45,503,32],[125,4,503,32],[125,11,503,12,"InterfaceOrientation"],[125,31,503,32],[126,2,503,32],[127,2,503,32],[127,6,514,12,"KeyboardState"],[127,19,514,25],[127,22,514,25,"exports"],[127,29,514,25],[127,30,514,25,"KeyboardState"],[127,43,514,25],[127,69,514,12,"KeyboardState"],[127,82,514,25],[128,4,514,12,"KeyboardState"],[128,17,514,25],[128,18,514,12,"KeyboardState"],[128,31,514,25],[129,4,514,12,"KeyboardState"],[129,17,514,25],[129,18,514,12,"KeyboardState"],[129,31,514,25],[130,4,514,12,"KeyboardState"],[130,17,514,25],[130,18,514,12,"KeyboardState"],[130,31,514,25],[131,4,514,12,"KeyboardState"],[131,17,514,25],[131,18,514,12,"KeyboardState"],[131,31,514,25],[132,4,514,12,"KeyboardState"],[132,17,514,25],[132,18,514,12,"KeyboardState"],[132,31,514,25],[133,4,514,25],[133,11,514,12,"KeyboardState"],[133,24,514,25],[134,2,514,25],[135,2,527,0],[136,0,528,0],[137,0,529,0],[138,0,530,0],[139,0,531,0],[140,0,532,0],[141,0,533,0],[142,0,534,0],[143,0,535,0],[144,0,536,0],[145,0,537,0],[146,2,552,0],[147,0,553,0],[148,0,554,0],[149,0,555,0],[150,0,556,0],[151,0,557,0],[152,0,558,0],[153,2,552,0],[153,6,559,12,"ReduceMotion"],[153,18,559,24],[153,21,559,24,"exports"],[153,28,559,24],[153,29,559,24,"ReduceMotion"],[153,41,559,24],[153,67,559,12,"ReduceMotion"],[153,79,559,24],[154,4,559,12,"ReduceMotion"],[154,16,559,24],[155,4,559,12,"ReduceMotion"],[155,16,559,24],[156,4,559,12,"ReduceMotion"],[156,16,559,24],[157,4,559,24],[157,11,559,12,"ReduceMotion"],[157,23,559,24],[158,2,559,24],[158,9,594,0],[159,2,595,0],[160,2,604,0],[161,2,607,0],[162,0,607,0],[162,3]],"functionMap":{"names":["<global>","isWorkletFunction"],"mappings":"AAA;OCoX;CDc"}},"type":"js/module"}]}