{"dependencies":[{"name":"../WorkletEventHandler.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":64,"index":79}}],"key":"e5fG6a6nTf5/kChbWzO7k8c/97s=","exportNames":["*"]}},{"name":"./useEvent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":80},"end":{"line":4,"column":41,"index":121}}],"key":"lBxuQoQIRmtUdzkIqbHyc7lI5BM=","exportNames":["*"]}},{"name":"./useHandler.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":122},"end":{"line":5,"column":45,"index":167}}],"key":"8THmWA5AJY3Y43KoqeF3/ctnJfY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useComposedEventHandler = useComposedEventHandler;\n  var _WorkletEventHandler = require(_dependencyMap[0], \"../WorkletEventHandler.js\");\n  var _useEvent = require(_dependencyMap[1], \"./useEvent.js\");\n  var _useHandler = require(_dependencyMap[2], \"./useHandler.js\");\n  /**\n   * Lets you compose multiple event handlers based on\n   * [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   * hook.\n   *\n   * @param handlers - An array of event handlers created using\n   *   [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   *   hook.\n   * @returns An object you need to pass to a coresponding \"onEvent\" prop on an\n   *   `Animated` component (for example handlers responsible for `onScroll` event\n   *   go to `onScroll` prop).\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useComposedEventHandler\n   */\n  // @ts-expect-error This overload is required by our API.\n  const _worklet_1071011404948_init_data = {\n    code: \"function reactNativeReanimated_useComposedEventHandlerJs1(event){const{workletsMap}=this.__closure;if(workletsMap[event.eventName]){workletsMap[event.eventName].forEach(function(worklet){return worklet(event);});}}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/hook/useComposedEventHandler.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_useComposedEventHandlerJs1\\\",\\\"event\\\",\\\"workletsMap\\\",\\\"__closure\\\",\\\"eventName\\\",\\\"forEach\\\",\\\"worklet\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/lib/module/hook/useComposedEventHandler.js\\\"],\\\"mappings\\\":\\\"AAiDkB,SAAAA,gDAASA,CAAAC,KAAA,QAAAC,WAAA,OAAAC,SAAA,CAGvB,GAAID,WAAW,CAACD,KAAK,CAACG,SAAS,CAAC,CAAE,CAChCF,WAAW,CAACD,KAAK,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,SAAAC,OAAO,QAAI,CAAAA,OAAO,CAACL,KAAK,CAAC,GAAC,CACjE,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function useComposedEventHandler(handlers) {\n    // Record of handlers' worklets to calculate deps diffs. We use the record type to match the useHandler API requirements\n    const workletsRecord = {};\n    // Summed event names for registration\n    const composedEventNames = new Set();\n    // Map that holds worklets for specific handled events\n    const workletsMap = {};\n    handlers.filter(h => h !== null).forEach(handler => {\n      // EventHandlerProcessed is the return type of useEvent and has to be force casted to EventHandlerInternal, because we need WorkletEventHandler object\n      const {\n        workletEventHandler\n      } = handler;\n      if (workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler) {\n        workletEventHandler.eventNames.forEach(eventName => {\n          composedEventNames.add(eventName);\n          if (workletsMap[eventName]) {\n            workletsMap[eventName].push(workletEventHandler.worklet);\n          } else {\n            workletsMap[eventName] = [workletEventHandler.worklet];\n          }\n          const handlerName = eventName + `${workletsMap[eventName].length}`;\n          workletsRecord[handlerName] = workletEventHandler.worklet;\n        });\n      }\n    });\n    const {\n      doDependenciesDiffer\n    } = (0, _useHandler.useHandler)(workletsRecord);\n    return (0, _useEvent.useEvent)(function () {\n      const _e = [new global.Error(), -2, -27];\n      const reactNativeReanimated_useComposedEventHandlerJs1 = function (event) {\n        if (workletsMap[event.eventName]) {\n          workletsMap[event.eventName].forEach(worklet => worklet(event));\n        }\n      };\n      reactNativeReanimated_useComposedEventHandlerJs1.__closure = {\n        workletsMap\n      };\n      reactNativeReanimated_useComposedEventHandlerJs1.__workletHash = 1071011404948;\n      reactNativeReanimated_useComposedEventHandlerJs1.__initData = _worklet_1071011404948_init_data;\n      reactNativeReanimated_useComposedEventHandlerJs1.__stackDetails = _e;\n      return reactNativeReanimated_useComposedEventHandlerJs1;\n    }(), Array.from(composedEventNames), doDependenciesDiffer);\n  }\n});","lineCount":75,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useComposedEventHandler"],[7,33,1,13],[7,36,1,13,"useComposedEventHandler"],[7,59,1,13],[8,2,3,0],[8,6,3,0,"_WorkletEventHandler"],[8,26,3,0],[8,29,3,0,"require"],[8,36,3,0],[8,37,3,0,"_dependencyMap"],[8,51,3,0],[9,2,4,0],[9,6,4,0,"_useEvent"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[10,6,5,0,"_useHandler"],[10,17,5,0],[10,20,5,0,"require"],[10,27,5,0],[10,28,5,0,"_dependencyMap"],[10,42,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,2,20,0],[25,2,20,0],[25,8,20,0,"_worklet_1071011404948_init_data"],[25,40,20,0],[26,4,20,0,"code"],[26,8,20,0],[27,4,20,0,"location"],[27,12,20,0],[28,4,20,0,"sourceMap"],[28,13,20,0],[29,4,20,0,"version"],[29,11,20,0],[30,2,20,0],[31,2,22,7],[31,11,22,16,"useComposedEventHandler"],[31,34,22,39,"useComposedEventHandler"],[31,35,22,40,"handlers"],[31,43,22,48],[31,45,22,50],[32,4,23,2],[33,4,24,2],[33,10,24,8,"workletsRecord"],[33,24,24,22],[33,27,24,25],[33,28,24,26],[33,29,24,27],[34,4,25,2],[35,4,26,2],[35,10,26,8,"composedEventNames"],[35,28,26,26],[35,31,26,29],[35,35,26,33,"Set"],[35,38,26,36],[35,39,26,37],[35,40,26,38],[36,4,27,2],[37,4,28,2],[37,10,28,8,"workletsMap"],[37,21,28,19],[37,24,28,22],[37,25,28,23],[37,26,28,24],[38,4,29,2,"handlers"],[38,12,29,10],[38,13,29,11,"filter"],[38,19,29,17],[38,20,29,18,"h"],[38,21,29,19],[38,25,29,23,"h"],[38,26,29,24],[38,31,29,29],[38,35,29,33],[38,36,29,34],[38,37,29,35,"forEach"],[38,44,29,42],[38,45,29,43,"handler"],[38,52,29,50],[38,56,29,54],[39,6,30,4],[40,6,31,4],[40,12,31,10],[41,8,32,6,"workletEventHandler"],[42,6,33,4],[42,7,33,5],[42,10,33,8,"handler"],[42,17,33,15],[43,6,34,4],[43,10,34,8,"workletEventHandler"],[43,29,34,27],[43,41,34,39,"WorkletEventHandler"],[43,81,34,58],[43,83,34,60],[44,8,35,6,"workletEventHandler"],[44,27,35,25],[44,28,35,26,"eventNames"],[44,38,35,36],[44,39,35,37,"forEach"],[44,46,35,44],[44,47,35,45,"eventName"],[44,56,35,54],[44,60,35,58],[45,10,36,8,"composedEventNames"],[45,28,36,26],[45,29,36,27,"add"],[45,32,36,30],[45,33,36,31,"eventName"],[45,42,36,40],[45,43,36,41],[46,10,37,8],[46,14,37,12,"workletsMap"],[46,25,37,23],[46,26,37,24,"eventName"],[46,35,37,33],[46,36,37,34],[46,38,37,36],[47,12,38,10,"workletsMap"],[47,23,38,21],[47,24,38,22,"eventName"],[47,33,38,31],[47,34,38,32],[47,35,38,33,"push"],[47,39,38,37],[47,40,38,38,"workletEventHandler"],[47,59,38,57],[47,60,38,58,"worklet"],[47,67,38,65],[47,68,38,66],[48,10,39,8],[48,11,39,9],[48,17,39,15],[49,12,40,10,"workletsMap"],[49,23,40,21],[49,24,40,22,"eventName"],[49,33,40,31],[49,34,40,32],[49,37,40,35],[49,38,40,36,"workletEventHandler"],[49,57,40,55],[49,58,40,56,"worklet"],[49,65,40,63],[49,66,40,64],[50,10,41,8],[51,10,42,8],[51,16,42,14,"handlerName"],[51,27,42,25],[51,30,42,28,"eventName"],[51,39,42,37],[51,42,42,40],[51,45,42,43,"workletsMap"],[51,56,42,54],[51,57,42,55,"eventName"],[51,66,42,64],[51,67,42,65],[51,68,42,66,"length"],[51,74,42,72],[51,76,42,74],[52,10,43,8,"workletsRecord"],[52,24,43,22],[52,25,43,23,"handlerName"],[52,36,43,34],[52,37,43,35],[52,40,43,38,"workletEventHandler"],[52,59,43,57],[52,60,43,58,"worklet"],[52,67,43,65],[53,8,44,6],[53,9,44,7],[53,10,44,8],[54,6,45,4],[55,4,46,2],[55,5,46,3],[55,6,46,4],[56,4,47,2],[56,10,47,8],[57,6,48,4,"doDependenciesDiffer"],[58,4,49,2],[58,5,49,3],[58,8,49,6],[58,12,49,6,"useHandler"],[58,34,49,16],[58,36,49,17,"workletsRecord"],[58,50,49,31],[58,51,49,32],[59,4,50,2],[59,11,50,9],[59,15,50,9,"useEvent"],[59,33,50,17],[59,35,50,18],[60,6,50,18],[60,12,50,18,"_e"],[60,14,50,18],[60,22,50,18,"global"],[60,28,50,18],[60,29,50,18,"Error"],[60,34,50,18],[61,6,50,18],[61,12,50,18,"reactNativeReanimated_useComposedEventHandlerJs1"],[61,60,50,18],[61,72,50,18,"reactNativeReanimated_useComposedEventHandlerJs1"],[61,73,50,18,"event"],[61,78,50,23],[61,80,50,27],[62,8,53,4],[62,12,53,8,"workletsMap"],[62,23,53,19],[62,24,53,20,"event"],[62,29,53,25],[62,30,53,26,"eventName"],[62,39,53,35],[62,40,53,36],[62,42,53,38],[63,10,54,6,"workletsMap"],[63,21,54,17],[63,22,54,18,"event"],[63,27,54,23],[63,28,54,24,"eventName"],[63,37,54,33],[63,38,54,34],[63,39,54,35,"forEach"],[63,46,54,42],[63,47,54,43,"worklet"],[63,54,54,50],[63,58,54,54,"worklet"],[63,65,54,61],[63,66,54,62,"event"],[63,71,54,67],[63,72,54,68],[63,73,54,69],[64,8,55,4],[65,6,56,2],[65,7,56,3],[66,6,56,3,"reactNativeReanimated_useComposedEventHandlerJs1"],[66,54,56,3],[66,55,56,3,"__closure"],[66,64,56,3],[67,8,56,3,"workletsMap"],[68,6,56,3],[69,6,56,3,"reactNativeReanimated_useComposedEventHandlerJs1"],[69,54,56,3],[69,55,56,3,"__workletHash"],[69,68,56,3],[70,6,56,3,"reactNativeReanimated_useComposedEventHandlerJs1"],[70,54,56,3],[70,55,56,3,"__initData"],[70,65,56,3],[70,68,56,3,"_worklet_1071011404948_init_data"],[70,100,56,3],[71,6,56,3,"reactNativeReanimated_useComposedEventHandlerJs1"],[71,54,56,3],[71,55,56,3,"__stackDetails"],[71,69,56,3],[71,72,56,3,"_e"],[71,74,56,3],[72,6,56,3],[72,13,56,3,"reactNativeReanimated_useComposedEventHandlerJs1"],[72,61,56,3],[73,4,56,3],[73,5,50,18],[73,9,56,5,"Array"],[73,14,56,10],[73,15,56,11,"from"],[73,19,56,15],[73,20,56,16,"composedEventNames"],[73,38,56,34],[73,39,56,35],[73,41,56,37,"doDependenciesDiffer"],[73,61,56,57],[73,62,56,58],[74,2,57,0],[75,0,57,1],[75,3]],"functionMap":{"names":["<global>","useComposedEventHandler","handlers.filter$argument_0","handlers.filter.forEach$argument_0","workletEventHandler.eventNames.forEach$argument_0","useEvent$argument_0","workletsMap.event.eventName.forEach$argument_0"],"mappings":"AAA;OCqB;kBCO,eD,UE;6CCM;ODS;GFE;kBII;2CCI,yBD;GJE;CDC"}},"type":"js/module"}]}