{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ColorType = void 0;\n  let ColorType = exports.ColorType = /*#__PURE__*/function (ColorType) {\n    ColorType[ColorType[\"Unknown\"] = 0] = \"Unknown\";\n    // uninitialized\n    ColorType[ColorType[\"Alpha_8\"] = 1] = \"Alpha_8\";\n    // pixel with alpha in 8-bit byte\n    ColorType[ColorType[\"RGB_565\"] = 2] = \"RGB_565\";\n    // pixel with 5 bits red, 6 bits green, 5 bits blue, in 16-bit word\n    ColorType[ColorType[\"ARGB_4444\"] = 3] = \"ARGB_4444\";\n    // pixel with 4 bits for alpha, red, green, blue; in 16-bit word\n    ColorType[ColorType[\"RGBA_8888\"] = 4] = \"RGBA_8888\";\n    // pixel with 8 bits for red, green, blue, alpha; in 32-bit word\n    ColorType[ColorType[\"RGB_888x\"] = 5] = \"RGB_888x\";\n    // pixel with 8 bits each for red, green, blue; in 32-bit word\n    ColorType[ColorType[\"BGRA_8888\"] = 6] = \"BGRA_8888\";\n    // pixel with 8 bits for blue, green, red, alpha; in 32-bit word\n    ColorType[ColorType[\"RGBA_1010102\"] = 7] = \"RGBA_1010102\";\n    // 10 bits for red, green, blue; 2 bits for alpha; in 32-bit word\n    ColorType[ColorType[\"BGRA_1010102\"] = 8] = \"BGRA_1010102\";\n    // 10 bits for blue, green, red; 2 bits for alpha; in 32-bit word\n    ColorType[ColorType[\"RGB_101010x\"] = 9] = \"RGB_101010x\";\n    // pixel with 10 bits each for red, green, blue; in 32-bit word\n    ColorType[ColorType[\"BGR_101010x\"] = 10] = \"BGR_101010x\";\n    // pixel with 10 bits each for blue, green, red; in 32-bit word\n    ColorType[ColorType[\"BGR_101010x_XR\"] = 11] = \"BGR_101010x_XR\";\n    // pixel with 10 bits each for blue, green, red; in 32-bit word, extended range\n    ColorType[ColorType[\"BGRA_10101010_XR\"] = 12] = \"BGRA_10101010_XR\";\n    // pixel with 10 bits each for blue, green, red, alpha; in 64-bit word, extended range\n    ColorType[ColorType[\"RGBA_10x6\"] = 13] = \"RGBA_10x6\";\n    // pixel with 10 used bits (most significant) followed by 6 unused\n    ColorType[ColorType[\"Gray_8\"] = 14] = \"Gray_8\";\n    // pixel with grayscale level in 8-bit byte\n    ColorType[ColorType[\"RGBA_F16Norm\"] = 15] = \"RGBA_F16Norm\";\n    // pixel with half floats in [0,1] for red, green, blue, alpha; in 64-bit word\n    ColorType[ColorType[\"RGBA_F16\"] = 16] = \"RGBA_F16\";\n    // pixel with half floats for red, green, blue, alpha; in 64-bit word\n    ColorType[ColorType[\"RGB_F16F16F16x\"] = 17] = \"RGB_F16F16F16x\";\n    // pixel with half floats for red, green, blue; in 64-bit word\n    ColorType[ColorType[\"RGBA_F32\"] = 18] = \"RGBA_F32\"; // pixel using C float for red, green, blue, alpha; in 128-bit word\n    return ColorType;\n  }({});\n});","lineCount":46,"map":[[6,2,1,7],[6,6,1,11,"ColorType"],[6,15,1,20],[6,18,1,20,"exports"],[6,25,1,20],[6,26,1,20,"ColorType"],[6,35,1,20],[6,38,1,23],[6,51,1,36],[6,61,1,46,"ColorType"],[6,70,1,55],[6,72,1,57],[7,4,2,2,"ColorType"],[7,13,2,11],[7,14,2,12,"ColorType"],[7,23,2,21],[7,24,2,22],[7,33,2,31],[7,34,2,32],[7,37,2,35],[7,38,2,36],[7,39,2,37],[7,42,2,40],[7,51,2,49],[8,4,3,2],[9,4,4,2,"ColorType"],[9,13,4,11],[9,14,4,12,"ColorType"],[9,23,4,21],[9,24,4,22],[9,33,4,31],[9,34,4,32],[9,37,4,35],[9,38,4,36],[9,39,4,37],[9,42,4,40],[9,51,4,49],[10,4,5,2],[11,4,6,2,"ColorType"],[11,13,6,11],[11,14,6,12,"ColorType"],[11,23,6,21],[11,24,6,22],[11,33,6,31],[11,34,6,32],[11,37,6,35],[11,38,6,36],[11,39,6,37],[11,42,6,40],[11,51,6,49],[12,4,7,2],[13,4,8,2,"ColorType"],[13,13,8,11],[13,14,8,12,"ColorType"],[13,23,8,21],[13,24,8,22],[13,35,8,33],[13,36,8,34],[13,39,8,37],[13,40,8,38],[13,41,8,39],[13,44,8,42],[13,55,8,53],[14,4,9,2],[15,4,10,2,"ColorType"],[15,13,10,11],[15,14,10,12,"ColorType"],[15,23,10,21],[15,24,10,22],[15,35,10,33],[15,36,10,34],[15,39,10,37],[15,40,10,38],[15,41,10,39],[15,44,10,42],[15,55,10,53],[16,4,11,2],[17,4,12,2,"ColorType"],[17,13,12,11],[17,14,12,12,"ColorType"],[17,23,12,21],[17,24,12,22],[17,34,12,32],[17,35,12,33],[17,38,12,36],[17,39,12,37],[17,40,12,38],[17,43,12,41],[17,53,12,51],[18,4,13,2],[19,4,14,2,"ColorType"],[19,13,14,11],[19,14,14,12,"ColorType"],[19,23,14,21],[19,24,14,22],[19,35,14,33],[19,36,14,34],[19,39,14,37],[19,40,14,38],[19,41,14,39],[19,44,14,42],[19,55,14,53],[20,4,15,2],[21,4,16,2,"ColorType"],[21,13,16,11],[21,14,16,12,"ColorType"],[21,23,16,21],[21,24,16,22],[21,38,16,36],[21,39,16,37],[21,42,16,40],[21,43,16,41],[21,44,16,42],[21,47,16,45],[21,61,16,59],[22,4,17,2],[23,4,18,2,"ColorType"],[23,13,18,11],[23,14,18,12,"ColorType"],[23,23,18,21],[23,24,18,22],[23,38,18,36],[23,39,18,37],[23,42,18,40],[23,43,18,41],[23,44,18,42],[23,47,18,45],[23,61,18,59],[24,4,19,2],[25,4,20,2,"ColorType"],[25,13,20,11],[25,14,20,12,"ColorType"],[25,23,20,21],[25,24,20,22],[25,37,20,35],[25,38,20,36],[25,41,20,39],[25,42,20,40],[25,43,20,41],[25,46,20,44],[25,59,20,57],[26,4,21,2],[27,4,22,2,"ColorType"],[27,13,22,11],[27,14,22,12,"ColorType"],[27,23,22,21],[27,24,22,22],[27,37,22,35],[27,38,22,36],[27,41,22,39],[27,43,22,41],[27,44,22,42],[27,47,22,45],[27,60,22,58],[28,4,23,2],[29,4,24,2,"ColorType"],[29,13,24,11],[29,14,24,12,"ColorType"],[29,23,24,21],[29,24,24,22],[29,40,24,38],[29,41,24,39],[29,44,24,42],[29,46,24,44],[29,47,24,45],[29,50,24,48],[29,66,24,64],[30,4,25,2],[31,4,26,2,"ColorType"],[31,13,26,11],[31,14,26,12,"ColorType"],[31,23,26,21],[31,24,26,22],[31,42,26,40],[31,43,26,41],[31,46,26,44],[31,48,26,46],[31,49,26,47],[31,52,26,50],[31,70,26,68],[32,4,27,2],[33,4,28,2,"ColorType"],[33,13,28,11],[33,14,28,12,"ColorType"],[33,23,28,21],[33,24,28,22],[33,35,28,33],[33,36,28,34],[33,39,28,37],[33,41,28,39],[33,42,28,40],[33,45,28,43],[33,56,28,54],[34,4,29,2],[35,4,30,2,"ColorType"],[35,13,30,11],[35,14,30,12,"ColorType"],[35,23,30,21],[35,24,30,22],[35,32,30,30],[35,33,30,31],[35,36,30,34],[35,38,30,36],[35,39,30,37],[35,42,30,40],[35,50,30,48],[36,4,31,2],[37,4,32,2,"ColorType"],[37,13,32,11],[37,14,32,12,"ColorType"],[37,23,32,21],[37,24,32,22],[37,38,32,36],[37,39,32,37],[37,42,32,40],[37,44,32,42],[37,45,32,43],[37,48,32,46],[37,62,32,60],[38,4,33,2],[39,4,34,2,"ColorType"],[39,13,34,11],[39,14,34,12,"ColorType"],[39,23,34,21],[39,24,34,22],[39,34,34,32],[39,35,34,33],[39,38,34,36],[39,40,34,38],[39,41,34,39],[39,44,34,42],[39,54,34,52],[40,4,35,2],[41,4,36,2,"ColorType"],[41,13,36,11],[41,14,36,12,"ColorType"],[41,23,36,21],[41,24,36,22],[41,40,36,38],[41,41,36,39],[41,44,36,42],[41,46,36,44],[41,47,36,45],[41,50,36,48],[41,66,36,64],[42,4,37,2],[43,4,38,2,"ColorType"],[43,13,38,11],[43,14,38,12,"ColorType"],[43,23,38,21],[43,24,38,22],[43,34,38,32],[43,35,38,33],[43,38,38,36],[43,40,38,38],[43,41,38,39],[43,44,38,42],[43,54,38,52],[43,55,38,53],[43,56,38,54],[44,4,39,2],[44,11,39,9,"ColorType"],[44,20,39,18],[45,2,40,0],[45,3,40,1],[45,4,40,2],[45,5,40,3],[45,6,40,4],[45,7,40,5],[46,0,40,6],[46,3]],"functionMap":{"names":["<global>","<anonymous>"],"mappings":"AAA,oCC;CDuC"}},"type":"js/module"}]}