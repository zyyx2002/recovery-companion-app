{"dependencies":[{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Bezier = void 0;\n  var _errors = require(_dependencyMap[0], \"./errors\");\n  /**\n   * https://github.com/gre/bezier-easing BezierEasing - use bezier curve for\n   * transition easing function by Gaëtan Renaudeau 2014 - 2015 – MIT License\n   */\n\n  // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var _worklet_4367271601962_init_data = {\n    code: \"function A_reactNativeReanimated_BezierTs1(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"A_reactNativeReanimated_BezierTs1\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAmBA,SAAAA,iCAA6CA,CAAAC,GAAA,CAAAC,GAAA,EAE3C,MAAO,IAAG,CAAG,GAAG,CAAGA,GAAG,CAAG,GAAG,CAAGD,GAAG,CACpC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var A = function () {\n    var _e = [new global.Error(), 1, -27];\n    var A = function (aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    };\n    A.__closure = {};\n    A.__workletHash = 4367271601962;\n    A.__initData = _worklet_4367271601962_init_data;\n    A.__stackDetails = _e;\n    return A;\n  }();\n  var _worklet_9454990785451_init_data = {\n    code: \"function B_reactNativeReanimated_BezierTs2(aA1,aA2){return 3.0*aA2-6.0*aA1;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"B_reactNativeReanimated_BezierTs2\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAuBA,SAAAA,iCAA6CA,CAAAC,GAAA,CAAAC,GAAA,EAE3C,MAAO,IAAG,CAAGA,GAAG,CAAG,GAAG,CAAGD,GAAG,CAC9B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var B = function () {\n    var _e = [new global.Error(), 1, -27];\n    var B = function (aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    };\n    B.__closure = {};\n    B.__workletHash = 9454990785451;\n    B.__initData = _worklet_9454990785451_init_data;\n    B.__stackDetails = _e;\n    return B;\n  }();\n  var _worklet_16782186749480_init_data = {\n    code: \"function C_reactNativeReanimated_BezierTs3(aA1){return 3.0*aA1;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"C_reactNativeReanimated_BezierTs3\\\",\\\"aA1\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AA2BA,SAAAA,iCAAwBA,CAAAC,GAAA,EAEtB,MAAO,IAAG,CAAGA,GAAG,CAClB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var C = function () {\n    var _e = [new global.Error(), 1, -27];\n    var C = function (aA1) {\n      return 3.0 * aA1;\n    };\n    C.__closure = {};\n    C.__workletHash = 16782186749480;\n    C.__initData = _worklet_16782186749480_init_data;\n    C.__stackDetails = _e;\n    return C;\n  }(); // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  var _worklet_10875691901728_init_data = {\n    code: \"function calcBezier_reactNativeReanimated_BezierTs4(aT,aA1,aA2){const{A,B,C}=this.__closure;return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"calcBezier_reactNativeReanimated_BezierTs4\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAgCA,SAAAA,2CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,OAAAC,SAAA,SAAAH,CAAA,CAAAF,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAI,CAAA,CAAAH,GAAA,CAAAC,GAAA,GAAAF,EAAA,CAAAK,CAAA,CAAAJ,GAAA,GAAAD,EAAA,CACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var calcBezier = function () {\n    var _e = [new global.Error(), -4, -27];\n    var calcBezier = function (aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    };\n    calcBezier.__closure = {\n      A,\n      B,\n      C\n    };\n    calcBezier.__workletHash = 10875691901728;\n    calcBezier.__initData = _worklet_10875691901728_init_data;\n    calcBezier.__stackDetails = _e;\n    return calcBezier;\n  }(); // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  var _worklet_268514889981_init_data = {\n    code: \"function getSlope_reactNativeReanimated_BezierTs5(aT,aA1,aA2){const{A,B,C}=this.__closure;return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getSlope_reactNativeReanimated_BezierTs5\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAsCA,SAAAA,yCAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,OAAAC,SAAA,YAAAH,CAAA,CAAAF,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAA,EAAA,KAAAI,CAAA,CAAAH,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAK,CAAA,CAAAJ,GAAA,EACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var getSlope = function () {\n    var _e = [new global.Error(), -4, -27];\n    var getSlope = function (aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    };\n    getSlope.__closure = {\n      A,\n      B,\n      C\n    };\n    getSlope.__workletHash = 268514889981;\n    getSlope.__initData = _worklet_268514889981_init_data;\n    getSlope.__stackDetails = _e;\n    return getSlope;\n  }();\n  var _worklet_521490805193_init_data = {\n    code: \"function binarySubdivide_reactNativeReanimated_BezierTs6(aX,aA,aB,mX1,mX2){const{calcBezier,SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS}=this.__closure;let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"binarySubdivide_reactNativeReanimated_BezierTs6\\\",\\\"aX\\\",\\\"aA\\\",\\\"aB\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"calcBezier\\\",\\\"SUBDIVISION_PRECISION\\\",\\\"SUBDIVISION_MAX_ITERATIONS\\\",\\\"__closure\\\",\\\"currentX\\\",\\\"currentT\\\",\\\"i\\\",\\\"Math\\\",\\\"abs\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AA4CA,SAAAA,+CAMUA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,UAAA,CAAAC,qBAAA,CAAAC,0BAAA,OAAAC,SAAA,CAER,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,EAAG,CACDD,QAAQ,CAAGT,EAAE,CAAG,CAACC,EAAE,CAAGD,EAAE,EAAI,GAAG,CAC/BQ,QAAQ,CAAGJ,UAAU,CAACK,QAAQ,CAAEP,GAAG,CAAEC,GAAG,CAAC,CAAGJ,EAAE,CAC9C,GAAIS,QAAQ,CAAG,GAAG,CAAE,CAClBP,EAAE,CAAGQ,QAAQ,CACf,CAAC,IAAM,CACLT,EAAE,CAAGS,QAAQ,CACf,CACF,CAAC,MACCE,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC,CAAGH,qBAAqB,EAC1C,EAAEK,CAAC,CAAGJ,0BAA0B,EAElC,MAAO,CAAAG,QAAQ,CACjB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var binarySubdivide = function () {\n    var _e = [new global.Error(), -4, -27];\n    var binarySubdivide = function (aX, aA, aB, mX1, mX2) {\n      var currentX;\n      var currentT;\n      var i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n      return currentT;\n    };\n    binarySubdivide.__closure = {\n      calcBezier,\n      SUBDIVISION_PRECISION,\n      SUBDIVISION_MAX_ITERATIONS\n    };\n    binarySubdivide.__workletHash = 521490805193;\n    binarySubdivide.__initData = _worklet_521490805193_init_data;\n    binarySubdivide.__stackDetails = _e;\n    return binarySubdivide;\n  }();\n  var _worklet_2303289060743_init_data = {\n    code: \"function newtonRaphsonIterate_reactNativeReanimated_BezierTs7(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=this.__closure;for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"newtonRaphsonIterate_reactNativeReanimated_BezierTs7\\\",\\\"aX\\\",\\\"aGuessT\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_ITERATIONS\\\",\\\"getSlope\\\",\\\"calcBezier\\\",\\\"__closure\\\",\\\"i\\\",\\\"currentSlope\\\",\\\"currentX\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAsEA,SAAAA,oDAKUA,CAAAC,EAAA,CAAAC,OAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,iBAAA,CAAAC,QAAA,CAAAC,UAAA,OAAAC,SAAA,CAER,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGJ,iBAAiB,CAAE,EAAEI,CAAC,CAAE,CAC1C,KAAM,CAAAC,YAAY,CAAGJ,QAAQ,CAACJ,OAAO,CAAEC,GAAG,CAAEC,GAAG,CAAC,CAChD,GAAIM,YAAY,GAAK,GAAG,CAAE,CACxB,MAAO,CAAAR,OAAO,CAChB,CACA,KAAM,CAAAS,QAAQ,CAAGJ,UAAU,CAACL,OAAO,CAAEC,GAAG,CAAEC,GAAG,CAAC,CAAGH,EAAE,CACnDC,OAAO,EAAIS,QAAQ,CAAGD,YAAY,CACpC,CACA,MAAO,CAAAR,OAAO,CAChB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var newtonRaphsonIterate = function () {\n    var _e = [new global.Error(), -4, -27];\n    var newtonRaphsonIterate = function (aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n          return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    };\n    newtonRaphsonIterate.__closure = {\n      NEWTON_ITERATIONS,\n      getSlope,\n      calcBezier\n    };\n    newtonRaphsonIterate.__workletHash = 2303289060743;\n    newtonRaphsonIterate.__initData = _worklet_2303289060743_init_data;\n    newtonRaphsonIterate.__stackDetails = _e;\n    return newtonRaphsonIterate;\n  }();\n  var _worklet_4651979895956_init_data = {\n    code: \"function Bezier_reactNativeReanimated_BezierTs8(mX1,mY1,mX2,mY2){const{kSplineTableSize,calcBezier,kSampleStepSize,getSlope,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;function LinearEasing(x){'worklet';return x;}if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new ReanimatedError('Bezier x values must be in [0, 1] range.');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}const sampleValues=new Array(kSplineTableSize);for(let i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}function getTForX(aX){'worklet';let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function Bezier_reactNativeReanimated_BezierTs8(x){'worklet';if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"Bezier_reactNativeReanimated_BezierTs8\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"kSplineTableSize\\\",\\\"calcBezier\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"__closure\\\",\\\"LinearEasing\\\",\\\"x\\\",\\\"ReanimatedError\\\",\\\"sampleValues\\\",\\\"Array\\\",\\\"i\\\",\\\"getTForX\\\",\\\"aX\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\",\\\"BezierEasing\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAwFO,SAAAA,sCAKkBA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,gBAAA,CAAAC,UAAA,CAAAC,eAAA,CAAAC,QAAA,CAAAC,gBAAA,CAAAC,oBAAA,CAAAC,eAAA,OAAAC,SAAA,CAGvB,QAAS,CAAAC,YAAYA,CAACC,CAAS,CAAU,CACvC,SAAS,CACT,MAAO,CAAAA,CAAC,CACV,CAEA,GAAI,EAAEb,GAAG,EAAI,CAAC,EAAIA,GAAG,EAAI,CAAC,EAAIE,GAAG,EAAI,CAAC,EAAIA,GAAG,EAAI,CAAC,CAAC,CAAE,CACnD,KAAM,IAAI,CAAAY,eAAe,CAAC,0CAA0C,CAAC,CACvE,CAEA,GAAId,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAS,YAAY,CACrB,CAEA,KAAM,CAAAG,YAAY,CAAG,GAAI,CAAAC,KAAK,CAACZ,gBAAgB,CAAC,CAGhD,IAAK,GAAI,CAAAa,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGb,gBAAgB,CAAE,EAAEa,CAAC,CAAE,CACzCF,YAAY,CAACE,CAAC,CAAC,CAAGZ,UAAU,CAACY,CAAC,CAAGX,eAAe,CAAEN,GAAG,CAAEE,GAAG,CAAC,CAC7D,CAEA,QAAS,CAAAgB,QAAQA,CAACC,EAAU,CAAU,CACpC,SAAS,CACT,GAAI,CAAAC,aAAa,CAAG,GAAG,CACvB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,KAAM,CAAAC,UAAU,CAAGlB,gBAAgB,CAAG,CAAC,CAEvC,KAEEiB,aAAa,GAAKC,UAAU,EAAIP,YAAY,CAACM,aAAa,CAAC,EAAIF,EAAE,CACjE,EAAEE,aAAa,CACf,CACAD,aAAa,EAAId,eAAe,CAClC,CACA,EAAEe,aAAa,CAGf,KAAM,CAAAE,IAAI,CACR,CAACJ,EAAE,CAAGJ,YAAY,CAACM,aAAa,CAAC,GAChCN,YAAY,CAACM,aAAa,CAAG,CAAC,CAAC,CAAGN,YAAY,CAACM,aAAa,CAAC,CAAC,CACjE,KAAM,CAAAG,SAAS,CAAGJ,aAAa,CAAGG,IAAI,CAAGjB,eAAe,CAExD,KAAM,CAAAmB,YAAY,CAAGlB,QAAQ,CAACiB,SAAS,CAAExB,GAAG,CAAEE,GAAG,CAAC,CAClD,GAAIuB,YAAY,EAAIjB,gBAAgB,CAAE,CACpC,MAAO,CAAAC,oBAAoB,CAACU,EAAE,CAAEK,SAAS,CAAExB,GAAG,CAAEE,GAAG,CAAC,CACtD,CAAC,IAAM,IAAIuB,YAAY,GAAK,GAAG,CAAE,CAC/B,MAAO,CAAAD,SAAS,CAClB,CAAC,IAAM,CACL,MAAO,CAAAd,eAAe,CACpBS,EAAE,CACFC,aAAa,CACbA,aAAa,CAAGd,eAAe,CAC/BN,GAAG,CACHE,GACF,CAAC,CACH,CACF,CAEA,MAAO,SAAS,CAAAH,sCAAgB2B,CAAAb,CAAA,EAC9B,SAAS,CACT,GAAIb,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAU,CAAC,CACV,CAEA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,MAAO,CAAAR,UAAU,CAACa,QAAQ,CAACL,CAAC,CAAC,CAAEZ,GAAG,CAAEE,GAAG,CAAC,CAC1C,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _worklet_9002002139084_init_data = {\n    code: \"function LinearEasing_reactNativeReanimated_BezierTs9(x){return x;}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"LinearEasing_reactNativeReanimated_BezierTs9\\\",\\\"x\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAgGE,SAAAA,4CAAyCA,CAAAC,CAAA,EAEvC,MAAO,CAAAA,CAAC,CACV\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _worklet_582111972461_init_data = {\n    code: \"function getTForX_reactNativeReanimated_BezierTs10(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getTForX_reactNativeReanimated_BezierTs10\\\",\\\"aX\\\",\\\"kSplineTableSize\\\",\\\"sampleValues\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"__closure\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAoHE,SAAAA,yCAAsCA,CAAAC,EAAA,QAAAC,gBAAA,CAAAC,YAAA,CAAAC,eAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,gBAAA,CAAAC,oBAAA,CAAAC,eAAA,OAAAC,SAAA,CAEpC,GAAI,CAAAC,aAAa,CAAG,GAAG,CACvB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,KAAM,CAAAC,UAAU,CAAGZ,gBAAgB,CAAG,CAAC,CAEvC,KAEEW,aAAa,GAAKC,UAAU,EAAIX,YAAY,CAACU,aAAa,CAAC,EAAIZ,EAAE,CACjE,EAAEY,aAAa,CACf,CACAD,aAAa,EAAIR,eAAe,CAClC,CACA,EAAES,aAAa,CAGf,KAAM,CAAAE,IAAI,CACR,CAACd,EAAE,CAAGE,YAAY,CAACU,aAAa,CAAC,GAChCV,YAAY,CAACU,aAAa,CAAG,CAAC,CAAC,CAAGV,YAAY,CAACU,aAAa,CAAC,CAAC,CACjE,KAAM,CAAAG,SAAS,CAAGJ,aAAa,CAAGG,IAAI,CAAGX,eAAe,CAExD,KAAM,CAAAa,YAAY,CAAGZ,QAAQ,CAACW,SAAS,CAAEV,GAAG,CAAEC,GAAG,CAAC,CAClD,GAAIU,YAAY,EAAIT,gBAAgB,CAAE,CACpC,MAAO,CAAAC,oBAAoB,CAACR,EAAE,CAAEe,SAAS,CAAEV,GAAG,CAAEC,GAAG,CAAC,CACtD,CAAC,IAAM,IAAIU,YAAY,GAAK,GAAG,CAAE,CAC/B,MAAO,CAAAD,SAAS,CAClB,CAAC,IAAM,CACL,MAAO,CAAAN,eAAe,CACpBT,EAAE,CACFW,aAAa,CACbA,aAAa,CAAGR,eAAe,CAC/BE,GAAG,CACHC,GACF,CAAC,CACH,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _worklet_5253683607097_init_data = {\n    code: \"function BezierEasing_reactNativeReanimated_BezierTs11(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=this.__closure;if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}\",\n    location: \"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"BezierEasing_reactNativeReanimated_BezierTs11\\\",\\\"x\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"calcBezier\\\",\\\"getTForX\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/home/user/apps/mobile/node_modules/react-native-reanimated/src/Bezier.ts\\\"],\\\"mappings\\\":\\\"AAyJS,SAAAA,6CAAyBA,CAAAC,CAAA,QAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,UAAA,CAAAC,QAAA,OAAAC,SAAA,CAE9B,GAAIN,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAJ,CAAC,CACV,CAEA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,MAAO,CAAAK,UAAU,CAACC,QAAQ,CAACN,CAAC,CAAC,CAAEE,GAAG,CAAEE,GAAG,CAAC,CAC1C\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var Bezier = exports.Bezier = function () {\n    var _e = [new global.Error(), -8, -27];\n    var Bezier = function (mX1, mY1, mX2, mY2) {\n      var LinearEasing = function () {\n        var _e = [new global.Error(), 1, -27];\n        var LinearEasing = function (x) {\n          return x;\n        };\n        LinearEasing.__closure = {};\n        LinearEasing.__workletHash = 9002002139084;\n        LinearEasing.__initData = _worklet_9002002139084_init_data;\n        LinearEasing.__stackDetails = _e;\n        return LinearEasing;\n      }();\n      if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new _errors.ReanimatedError('Bezier x values must be in [0, 1] range.');\n      }\n      if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n      }\n      var sampleValues = new Array(kSplineTableSize);\n\n      // Precompute samples table\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n      var getTForX = function () {\n        var _e = [new global.Error(), -10, -27];\n        var getTForX = function (aX) {\n          var intervalStart = 0.0;\n          var currentSample = 1;\n          var lastSample = kSplineTableSize - 1;\n          for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n          }\n          --currentSample;\n\n          // Interpolate to provide an initial guess for t\n          var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n          var guessForT = intervalStart + dist * kSampleStepSize;\n          var initialSlope = getSlope(guessForT, mX1, mX2);\n          if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n          } else if (initialSlope === 0.0) {\n            return guessForT;\n          } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n          }\n        };\n        getTForX.__closure = {\n          kSplineTableSize,\n          sampleValues,\n          kSampleStepSize,\n          getSlope,\n          mX1,\n          mX2,\n          NEWTON_MIN_SLOPE,\n          newtonRaphsonIterate,\n          binarySubdivide\n        };\n        getTForX.__workletHash = 582111972461;\n        getTForX.__initData = _worklet_582111972461_init_data;\n        getTForX.__stackDetails = _e;\n        return getTForX;\n      }();\n      return function () {\n        var _e = [new global.Error(), -7, -27];\n        var BezierEasing = function (x) {\n          if (mX1 === mY1 && mX2 === mY2) {\n            return x; // linear\n          }\n          // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n          if (x === 0) {\n            return 0;\n          }\n          if (x === 1) {\n            return 1;\n          }\n          return calcBezier(getTForX(x), mY1, mY2);\n        };\n        BezierEasing.__closure = {\n          mX1,\n          mY1,\n          mX2,\n          mY2,\n          calcBezier,\n          getTForX\n        };\n        BezierEasing.__workletHash = 5253683607097;\n        BezierEasing.__initData = _worklet_5253683607097_init_data;\n        BezierEasing.__stackDetails = _e;\n        return BezierEasing;\n      }();\n    };\n    Bezier.__closure = {\n      kSplineTableSize,\n      calcBezier,\n      kSampleStepSize,\n      getSlope,\n      NEWTON_MIN_SLOPE,\n      newtonRaphsonIterate,\n      binarySubdivide\n    };\n    Bezier.__workletHash = 4651979895956;\n    Bezier.__initData = _worklet_4651979895956_init_data;\n    Bezier.__stackDetails = _e;\n    return Bezier;\n  }();\n});","lineCount":309,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"Bezier"],[7,16,1,13],[8,2,3,0],[8,6,3,0,"_errors"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[14,2,10,0],[16,2,12,0],[16,6,12,6,"NEWTON_ITERATIONS"],[16,23,12,23],[16,26,12,26],[16,27,12,27],[17,2,13,0],[17,6,13,6,"NEWTON_MIN_SLOPE"],[17,22,13,22],[17,25,13,25],[17,30,13,30],[18,2,14,0],[18,6,14,6,"SUBDIVISION_PRECISION"],[18,27,14,27],[18,30,14,30],[18,39,14,39],[19,2,15,0],[19,6,15,6,"SUBDIVISION_MAX_ITERATIONS"],[19,32,15,32],[19,35,15,35],[19,37,15,37],[20,2,17,0],[20,6,17,6,"kSplineTableSize"],[20,22,17,22],[20,25,17,25],[20,27,17,27],[21,2,18,0],[21,6,18,6,"kSampleStepSize"],[21,21,18,21],[21,24,18,24],[21,27,18,27],[21,31,18,31,"kSplineTableSize"],[21,47,18,47],[21,50,18,50],[21,53,18,53],[21,54,18,54],[22,2,18,55],[22,6,18,55,"_worklet_4367271601962_init_data"],[22,38,18,55],[23,4,18,55,"code"],[23,8,18,55],[24,4,18,55,"location"],[24,12,18,55],[25,4,18,55,"sourceMap"],[25,13,18,55],[26,4,18,55,"version"],[26,11,18,55],[27,2,18,55],[28,2,18,55],[28,6,18,55,"A"],[28,7,18,55],[28,10,20,0],[29,4,20,0],[29,8,20,0,"_e"],[29,10,20,0],[29,18,20,0,"global"],[29,24,20,0],[29,25,20,0,"Error"],[29,30,20,0],[30,4,20,0],[30,8,20,0,"A"],[30,9,20,0],[30,21,20,0,"A"],[30,22,20,11,"aA1"],[30,25,20,22],[30,27,20,24,"aA2"],[30,30,20,35],[30,32,20,45],[31,6,22,2],[31,13,22,9],[31,16,22,12],[31,19,22,15],[31,22,22,18],[31,25,22,21,"aA2"],[31,28,22,24],[31,31,22,27],[31,34,22,30],[31,37,22,33,"aA1"],[31,40,22,36],[32,4,23,0],[32,5,23,1],[33,4,23,1,"A"],[33,5,23,1],[33,6,23,1,"__closure"],[33,15,23,1],[34,4,23,1,"A"],[34,5,23,1],[34,6,23,1,"__workletHash"],[34,19,23,1],[35,4,23,1,"A"],[35,5,23,1],[35,6,23,1,"__initData"],[35,16,23,1],[35,19,23,1,"_worklet_4367271601962_init_data"],[35,51,23,1],[36,4,23,1,"A"],[36,5,23,1],[36,6,23,1,"__stackDetails"],[36,20,23,1],[36,23,23,1,"_e"],[36,25,23,1],[37,4,23,1],[37,11,23,1,"A"],[37,12,23,1],[38,2,23,1],[38,3,20,0],[39,2,20,0],[39,6,20,0,"_worklet_9454990785451_init_data"],[39,38,20,0],[40,4,20,0,"code"],[40,8,20,0],[41,4,20,0,"location"],[41,12,20,0],[42,4,20,0,"sourceMap"],[42,13,20,0],[43,4,20,0,"version"],[43,11,20,0],[44,2,20,0],[45,2,20,0],[45,6,20,0,"B"],[45,7,20,0],[45,10,24,0],[46,4,24,0],[46,8,24,0,"_e"],[46,10,24,0],[46,18,24,0,"global"],[46,24,24,0],[46,25,24,0,"Error"],[46,30,24,0],[47,4,24,0],[47,8,24,0,"B"],[47,9,24,0],[47,21,24,0,"B"],[47,22,24,11,"aA1"],[47,25,24,22],[47,27,24,24,"aA2"],[47,30,24,35],[47,32,24,45],[48,6,26,2],[48,13,26,9],[48,16,26,12],[48,19,26,15,"aA2"],[48,22,26,18],[48,25,26,21],[48,28,26,24],[48,31,26,27,"aA1"],[48,34,26,30],[49,4,27,0],[49,5,27,1],[50,4,27,1,"B"],[50,5,27,1],[50,6,27,1,"__closure"],[50,15,27,1],[51,4,27,1,"B"],[51,5,27,1],[51,6,27,1,"__workletHash"],[51,19,27,1],[52,4,27,1,"B"],[52,5,27,1],[52,6,27,1,"__initData"],[52,16,27,1],[52,19,27,1,"_worklet_9454990785451_init_data"],[52,51,27,1],[53,4,27,1,"B"],[53,5,27,1],[53,6,27,1,"__stackDetails"],[53,20,27,1],[53,23,27,1,"_e"],[53,25,27,1],[54,4,27,1],[54,11,27,1,"B"],[54,12,27,1],[55,2,27,1],[55,3,24,0],[56,2,24,0],[56,6,24,0,"_worklet_16782186749480_init_data"],[56,39,24,0],[57,4,24,0,"code"],[57,8,24,0],[58,4,24,0,"location"],[58,12,24,0],[59,4,24,0,"sourceMap"],[59,13,24,0],[60,4,24,0,"version"],[60,11,24,0],[61,2,24,0],[62,2,24,0],[62,6,24,0,"C"],[62,7,24,0],[62,10,28,0],[63,4,28,0],[63,8,28,0,"_e"],[63,10,28,0],[63,18,28,0,"global"],[63,24,28,0],[63,25,28,0,"Error"],[63,30,28,0],[64,4,28,0],[64,8,28,0,"C"],[64,9,28,0],[64,21,28,0,"C"],[64,22,28,11,"aA1"],[64,25,28,22],[64,27,28,24],[65,6,30,2],[65,13,30,9],[65,16,30,12],[65,19,30,15,"aA1"],[65,22,30,18],[66,4,31,0],[66,5,31,1],[67,4,31,1,"C"],[67,5,31,1],[67,6,31,1,"__closure"],[67,15,31,1],[68,4,31,1,"C"],[68,5,31,1],[68,6,31,1,"__workletHash"],[68,19,31,1],[69,4,31,1,"C"],[69,5,31,1],[69,6,31,1,"__initData"],[69,16,31,1],[69,19,31,1,"_worklet_16782186749480_init_data"],[69,52,31,1],[70,4,31,1,"C"],[70,5,31,1],[70,6,31,1,"__stackDetails"],[70,20,31,1],[70,23,31,1,"_e"],[70,25,31,1],[71,4,31,1],[71,11,31,1,"C"],[71,12,31,1],[72,2,31,1],[72,3,28,0],[72,7,33,0],[73,2,33,0],[73,6,33,0,"_worklet_10875691901728_init_data"],[73,39,33,0],[74,4,33,0,"code"],[74,8,33,0],[75,4,33,0,"location"],[75,12,33,0],[76,4,33,0,"sourceMap"],[76,13,33,0],[77,4,33,0,"version"],[77,11,33,0],[78,2,33,0],[79,2,33,0],[79,6,33,0,"calcBezier"],[79,16,33,0],[79,19,34,0],[80,4,34,0],[80,8,34,0,"_e"],[80,10,34,0],[80,18,34,0,"global"],[80,24,34,0],[80,25,34,0,"Error"],[80,30,34,0],[81,4,34,0],[81,8,34,0,"calcBezier"],[81,18,34,0],[81,30,34,0,"calcBezier"],[81,31,34,20,"aT"],[81,33,34,30],[81,35,34,32,"aA1"],[81,38,34,43],[81,40,34,45,"aA2"],[81,43,34,56],[81,45,34,66],[82,6,36,2],[82,13,36,9],[82,14,36,10],[82,15,36,11,"A"],[82,16,36,12],[82,17,36,13,"aA1"],[82,20,36,16],[82,22,36,18,"aA2"],[82,25,36,21],[82,26,36,22],[82,29,36,25,"aT"],[82,31,36,27],[82,34,36,30,"B"],[82,35,36,31],[82,36,36,32,"aA1"],[82,39,36,35],[82,41,36,37,"aA2"],[82,44,36,40],[82,45,36,41],[82,49,36,45,"aT"],[82,51,36,47],[82,54,36,50,"C"],[82,55,36,51],[82,56,36,52,"aA1"],[82,59,36,55],[82,60,36,56],[82,64,36,60,"aT"],[82,66,36,62],[83,4,37,0],[83,5,37,1],[84,4,37,1,"calcBezier"],[84,14,37,1],[84,15,37,1,"__closure"],[84,24,37,1],[85,6,37,1,"A"],[85,7,37,1],[86,6,37,1,"B"],[86,7,37,1],[87,6,37,1,"C"],[88,4,37,1],[89,4,37,1,"calcBezier"],[89,14,37,1],[89,15,37,1,"__workletHash"],[89,28,37,1],[90,4,37,1,"calcBezier"],[90,14,37,1],[90,15,37,1,"__initData"],[90,25,37,1],[90,28,37,1,"_worklet_10875691901728_init_data"],[90,61,37,1],[91,4,37,1,"calcBezier"],[91,14,37,1],[91,15,37,1,"__stackDetails"],[91,29,37,1],[91,32,37,1,"_e"],[91,34,37,1],[92,4,37,1],[92,11,37,1,"calcBezier"],[92,21,37,1],[93,2,37,1],[93,3,34,0],[93,7,39,0],[94,2,39,0],[94,6,39,0,"_worklet_268514889981_init_data"],[94,37,39,0],[95,4,39,0,"code"],[95,8,39,0],[96,4,39,0,"location"],[96,12,39,0],[97,4,39,0,"sourceMap"],[97,13,39,0],[98,4,39,0,"version"],[98,11,39,0],[99,2,39,0],[100,2,39,0],[100,6,39,0,"getSlope"],[100,14,39,0],[100,17,40,0],[101,4,40,0],[101,8,40,0,"_e"],[101,10,40,0],[101,18,40,0,"global"],[101,24,40,0],[101,25,40,0,"Error"],[101,30,40,0],[102,4,40,0],[102,8,40,0,"getSlope"],[102,16,40,0],[102,28,40,0,"getSlope"],[102,29,40,18,"aT"],[102,31,40,28],[102,33,40,30,"aA1"],[102,36,40,41],[102,38,40,43,"aA2"],[102,41,40,54],[102,43,40,64],[103,6,42,2],[103,13,42,9],[103,16,42,12],[103,19,42,15,"A"],[103,20,42,16],[103,21,42,17,"aA1"],[103,24,42,20],[103,26,42,22,"aA2"],[103,29,42,25],[103,30,42,26],[103,33,42,29,"aT"],[103,35,42,31],[103,38,42,34,"aT"],[103,40,42,36],[103,43,42,39],[103,46,42,42],[103,49,42,45,"B"],[103,50,42,46],[103,51,42,47,"aA1"],[103,54,42,50],[103,56,42,52,"aA2"],[103,59,42,55],[103,60,42,56],[103,63,42,59,"aT"],[103,65,42,61],[103,68,42,64,"C"],[103,69,42,65],[103,70,42,66,"aA1"],[103,73,42,69],[103,74,42,70],[104,4,43,0],[104,5,43,1],[105,4,43,1,"getSlope"],[105,12,43,1],[105,13,43,1,"__closure"],[105,22,43,1],[106,6,43,1,"A"],[106,7,43,1],[107,6,43,1,"B"],[107,7,43,1],[108,6,43,1,"C"],[109,4,43,1],[110,4,43,1,"getSlope"],[110,12,43,1],[110,13,43,1,"__workletHash"],[110,26,43,1],[111,4,43,1,"getSlope"],[111,12,43,1],[111,13,43,1,"__initData"],[111,23,43,1],[111,26,43,1,"_worklet_268514889981_init_data"],[111,57,43,1],[112,4,43,1,"getSlope"],[112,12,43,1],[112,13,43,1,"__stackDetails"],[112,27,43,1],[112,30,43,1,"_e"],[112,32,43,1],[113,4,43,1],[113,11,43,1,"getSlope"],[113,19,43,1],[114,2,43,1],[114,3,40,0],[115,2,40,0],[115,6,40,0,"_worklet_521490805193_init_data"],[115,37,40,0],[116,4,40,0,"code"],[116,8,40,0],[117,4,40,0,"location"],[117,12,40,0],[118,4,40,0,"sourceMap"],[118,13,40,0],[119,4,40,0,"version"],[119,11,40,0],[120,2,40,0],[121,2,40,0],[121,6,40,0,"binarySubdivide"],[121,21,40,0],[121,24,45,0],[122,4,45,0],[122,8,45,0,"_e"],[122,10,45,0],[122,18,45,0,"global"],[122,24,45,0],[122,25,45,0,"Error"],[122,30,45,0],[123,4,45,0],[123,8,45,0,"binarySubdivide"],[123,23,45,0],[123,35,45,0,"binarySubdivide"],[123,36,46,2,"aX"],[123,38,46,12],[123,40,47,2,"aA"],[123,42,47,12],[123,44,48,2,"aB"],[123,46,48,12],[123,48,49,2,"mX1"],[123,51,49,13],[123,53,50,2,"mX2"],[123,56,50,13],[123,58,51,10],[124,6,53,2],[124,10,53,6,"currentX"],[124,18,53,14],[125,6,54,2],[125,10,54,6,"currentT"],[125,18,54,14],[126,6,55,2],[126,10,55,6,"i"],[126,11,55,7],[126,14,55,10],[126,15,55,11],[127,6,56,2],[127,9,56,5],[128,8,57,4,"currentT"],[128,16,57,12],[128,19,57,15,"aA"],[128,21,57,17],[128,24,57,20],[128,25,57,21,"aB"],[128,27,57,23],[128,30,57,26,"aA"],[128,32,57,28],[128,36,57,32],[128,39,57,35],[129,8,58,4,"currentX"],[129,16,58,12],[129,19,58,15,"calcBezier"],[129,29,58,25],[129,30,58,26,"currentT"],[129,38,58,34],[129,40,58,36,"mX1"],[129,43,58,39],[129,45,58,41,"mX2"],[129,48,58,44],[129,49,58,45],[129,52,58,48,"aX"],[129,54,58,50],[130,8,59,4],[130,12,59,8,"currentX"],[130,20,59,16],[130,23,59,19],[130,26,59,22],[130,28,59,24],[131,10,60,6,"aB"],[131,12,60,8],[131,15,60,11,"currentT"],[131,23,60,19],[132,8,61,4],[132,9,61,5],[132,15,61,11],[133,10,62,6,"aA"],[133,12,62,8],[133,15,62,11,"currentT"],[133,23,62,19],[134,8,63,4],[135,6,64,2],[135,7,64,3],[135,15,65,4,"Math"],[135,19,65,8],[135,20,65,9,"abs"],[135,23,65,12],[135,24,65,13,"currentX"],[135,32,65,21],[135,33,65,22],[135,36,65,25,"SUBDIVISION_PRECISION"],[135,57,65,46],[135,61,66,4],[135,63,66,6,"i"],[135,64,66,7],[135,67,66,10,"SUBDIVISION_MAX_ITERATIONS"],[135,93,66,36],[136,6,68,2],[136,13,68,9,"currentT"],[136,21,68,17],[137,4,69,0],[137,5,69,1],[138,4,69,1,"binarySubdivide"],[138,19,69,1],[138,20,69,1,"__closure"],[138,29,69,1],[139,6,69,1,"calcBezier"],[139,16,69,1],[140,6,69,1,"SUBDIVISION_PRECISION"],[140,27,69,1],[141,6,69,1,"SUBDIVISION_MAX_ITERATIONS"],[142,4,69,1],[143,4,69,1,"binarySubdivide"],[143,19,69,1],[143,20,69,1,"__workletHash"],[143,33,69,1],[144,4,69,1,"binarySubdivide"],[144,19,69,1],[144,20,69,1,"__initData"],[144,30,69,1],[144,33,69,1,"_worklet_521490805193_init_data"],[144,64,69,1],[145,4,69,1,"binarySubdivide"],[145,19,69,1],[145,20,69,1,"__stackDetails"],[145,34,69,1],[145,37,69,1,"_e"],[145,39,69,1],[146,4,69,1],[146,11,69,1,"binarySubdivide"],[146,26,69,1],[147,2,69,1],[147,3,45,0],[148,2,45,0],[148,6,45,0,"_worklet_2303289060743_init_data"],[148,38,45,0],[149,4,45,0,"code"],[149,8,45,0],[150,4,45,0,"location"],[150,12,45,0],[151,4,45,0,"sourceMap"],[151,13,45,0],[152,4,45,0,"version"],[152,11,45,0],[153,2,45,0],[154,2,45,0],[154,6,45,0,"newtonRaphsonIterate"],[154,26,45,0],[154,29,71,0],[155,4,71,0],[155,8,71,0,"_e"],[155,10,71,0],[155,18,71,0,"global"],[155,24,71,0],[155,25,71,0,"Error"],[155,30,71,0],[156,4,71,0],[156,8,71,0,"newtonRaphsonIterate"],[156,28,71,0],[156,40,71,0,"newtonRaphsonIterate"],[156,41,72,2,"aX"],[156,43,72,12],[156,45,73,2,"aGuessT"],[156,52,73,17],[156,54,74,2,"mX1"],[156,57,74,13],[156,59,75,2,"mX2"],[156,62,75,13],[156,64,76,10],[157,6,78,2],[157,11,78,7],[157,15,78,11,"i"],[157,16,78,12],[157,19,78,15],[157,20,78,16],[157,22,78,18,"i"],[157,23,78,19],[157,26,78,22,"NEWTON_ITERATIONS"],[157,43,78,39],[157,45,78,41],[157,47,78,43,"i"],[157,48,78,44],[157,50,78,46],[158,8,79,4],[158,12,79,10,"currentSlope"],[158,24,79,22],[158,27,79,25,"getSlope"],[158,35,79,33],[158,36,79,34,"aGuessT"],[158,43,79,41],[158,45,79,43,"mX1"],[158,48,79,46],[158,50,79,48,"mX2"],[158,53,79,51],[158,54,79,52],[159,8,80,4],[159,12,80,8,"currentSlope"],[159,24,80,20],[159,29,80,25],[159,32,80,28],[159,34,80,30],[160,10,81,6],[160,17,81,13,"aGuessT"],[160,24,81,20],[161,8,82,4],[162,8,83,4],[162,12,83,10,"currentX"],[162,20,83,18],[162,23,83,21,"calcBezier"],[162,33,83,31],[162,34,83,32,"aGuessT"],[162,41,83,39],[162,43,83,41,"mX1"],[162,46,83,44],[162,48,83,46,"mX2"],[162,51,83,49],[162,52,83,50],[162,55,83,53,"aX"],[162,57,83,55],[163,8,84,4,"aGuessT"],[163,15,84,11],[163,19,84,15,"currentX"],[163,27,84,23],[163,30,84,26,"currentSlope"],[163,42,84,38],[164,6,85,2],[165,6,86,2],[165,13,86,9,"aGuessT"],[165,20,86,16],[166,4,87,0],[166,5,87,1],[167,4,87,1,"newtonRaphsonIterate"],[167,24,87,1],[167,25,87,1,"__closure"],[167,34,87,1],[168,6,87,1,"NEWTON_ITERATIONS"],[168,23,87,1],[169,6,87,1,"getSlope"],[169,14,87,1],[170,6,87,1,"calcBezier"],[171,4,87,1],[172,4,87,1,"newtonRaphsonIterate"],[172,24,87,1],[172,25,87,1,"__workletHash"],[172,38,87,1],[173,4,87,1,"newtonRaphsonIterate"],[173,24,87,1],[173,25,87,1,"__initData"],[173,35,87,1],[173,38,87,1,"_worklet_2303289060743_init_data"],[173,70,87,1],[174,4,87,1,"newtonRaphsonIterate"],[174,24,87,1],[174,25,87,1,"__stackDetails"],[174,39,87,1],[174,42,87,1,"_e"],[174,44,87,1],[175,4,87,1],[175,11,87,1,"newtonRaphsonIterate"],[175,31,87,1],[176,2,87,1],[176,3,71,0],[177,2,71,0],[177,6,71,0,"_worklet_4651979895956_init_data"],[177,38,71,0],[178,4,71,0,"code"],[178,8,71,0],[179,4,71,0,"location"],[179,12,71,0],[180,4,71,0,"sourceMap"],[180,13,71,0],[181,4,71,0,"version"],[181,11,71,0],[182,2,71,0],[183,2,71,0],[183,6,71,0,"_worklet_9002002139084_init_data"],[183,38,71,0],[184,4,71,0,"code"],[184,8,71,0],[185,4,71,0,"location"],[185,12,71,0],[186,4,71,0,"sourceMap"],[186,13,71,0],[187,4,71,0,"version"],[187,11,71,0],[188,2,71,0],[189,2,71,0],[189,6,71,0,"_worklet_582111972461_init_data"],[189,37,71,0],[190,4,71,0,"code"],[190,8,71,0],[191,4,71,0,"location"],[191,12,71,0],[192,4,71,0,"sourceMap"],[192,13,71,0],[193,4,71,0,"version"],[193,11,71,0],[194,2,71,0],[195,2,71,0],[195,6,71,0,"_worklet_5253683607097_init_data"],[195,38,71,0],[196,4,71,0,"code"],[196,8,71,0],[197,4,71,0,"location"],[197,12,71,0],[198,4,71,0,"sourceMap"],[198,13,71,0],[199,4,71,0,"version"],[199,11,71,0],[200,2,71,0],[201,2,71,0],[201,6,71,0,"Bezier"],[201,12,71,0],[201,15,71,0,"exports"],[201,22,71,0],[201,23,71,0,"Bezier"],[201,29,71,0],[201,32,89,7],[202,4,89,7],[202,8,89,7,"_e"],[202,10,89,7],[202,18,89,7,"global"],[202,24,89,7],[202,25,89,7,"Error"],[202,30,89,7],[203,4,89,7],[203,8,89,7,"Bezier"],[203,14,89,7],[203,26,89,7,"Bezier"],[203,27,90,2,"mX1"],[203,30,90,13],[203,32,91,2,"mY1"],[203,35,91,13],[203,37,92,2,"mX2"],[203,40,92,13],[203,42,93,2,"mY2"],[203,45,93,13],[203,47,94,25],[204,6,94,25],[204,10,94,25,"LinearEasing"],[204,22,94,25],[204,25,97,2],[205,8,97,2],[205,12,97,2,"_e"],[205,14,97,2],[205,22,97,2,"global"],[205,28,97,2],[205,29,97,2,"Error"],[205,34,97,2],[206,8,97,2],[206,12,97,2,"LinearEasing"],[206,24,97,2],[206,36,97,2,"LinearEasing"],[206,37,97,24,"x"],[206,38,97,33],[206,40,97,43],[207,10,99,4],[207,17,99,11,"x"],[207,18,99,12],[208,8,100,2],[208,9,100,3],[209,8,100,3,"LinearEasing"],[209,20,100,3],[209,21,100,3,"__closure"],[209,30,100,3],[210,8,100,3,"LinearEasing"],[210,20,100,3],[210,21,100,3,"__workletHash"],[210,34,100,3],[211,8,100,3,"LinearEasing"],[211,20,100,3],[211,21,100,3,"__initData"],[211,31,100,3],[211,34,100,3,"_worklet_9002002139084_init_data"],[211,66,100,3],[212,8,100,3,"LinearEasing"],[212,20,100,3],[212,21,100,3,"__stackDetails"],[212,35,100,3],[212,38,100,3,"_e"],[212,40,100,3],[213,8,100,3],[213,15,100,3,"LinearEasing"],[213,27,100,3],[214,6,100,3],[214,7,97,2],[215,6,102,2],[215,10,102,6],[215,12,102,8,"mX1"],[215,15,102,11],[215,19,102,15],[215,20,102,16],[215,24,102,20,"mX1"],[215,27,102,23],[215,31,102,27],[215,32,102,28],[215,36,102,32,"mX2"],[215,39,102,35],[215,43,102,39],[215,44,102,40],[215,48,102,44,"mX2"],[215,51,102,47],[215,55,102,51],[215,56,102,52],[215,57,102,53],[215,59,102,55],[216,8,103,4],[216,14,103,10],[216,18,103,14,"ReanimatedError"],[216,41,103,29],[216,42,103,30],[216,84,103,72],[216,85,103,73],[217,6,104,2],[218,6,106,2],[218,10,106,6,"mX1"],[218,13,106,9],[218,18,106,14,"mY1"],[218,21,106,17],[218,25,106,21,"mX2"],[218,28,106,24],[218,33,106,29,"mY2"],[218,36,106,32],[218,38,106,34],[219,8,107,4],[219,15,107,11,"LinearEasing"],[219,27,107,23],[220,6,108,2],[221,6,110,2],[221,10,110,8,"sampleValues"],[221,22,110,20],[221,25,110,23],[221,29,110,27,"Array"],[221,34,110,32],[221,35,110,33,"kSplineTableSize"],[221,51,110,49],[221,52,110,50],[223,6,112,2],[224,6,113,2],[224,11,113,7],[224,15,113,11,"i"],[224,16,113,12],[224,19,113,15],[224,20,113,16],[224,22,113,18,"i"],[224,23,113,19],[224,26,113,22,"kSplineTableSize"],[224,42,113,38],[224,44,113,40],[224,46,113,42,"i"],[224,47,113,43],[224,49,113,45],[225,8,114,4,"sampleValues"],[225,20,114,16],[225,21,114,17,"i"],[225,22,114,18],[225,23,114,19],[225,26,114,22,"calcBezier"],[225,36,114,32],[225,37,114,33,"i"],[225,38,114,34],[225,41,114,37,"kSampleStepSize"],[225,56,114,52],[225,58,114,54,"mX1"],[225,61,114,57],[225,63,114,59,"mX2"],[225,66,114,62],[225,67,114,63],[226,6,115,2],[227,6,115,3],[227,10,115,3,"getTForX"],[227,18,115,3],[227,21,117,2],[228,8,117,2],[228,12,117,2,"_e"],[228,14,117,2],[228,22,117,2,"global"],[228,28,117,2],[228,29,117,2,"Error"],[228,34,117,2],[229,8,117,2],[229,12,117,2,"getTForX"],[229,20,117,2],[229,32,117,2,"getTForX"],[229,33,117,20,"aX"],[229,35,117,30],[229,37,117,40],[230,10,119,4],[230,14,119,8,"intervalStart"],[230,27,119,21],[230,30,119,24],[230,33,119,27],[231,10,120,4],[231,14,120,8,"currentSample"],[231,27,120,21],[231,30,120,24],[231,31,120,25],[232,10,121,4],[232,14,121,10,"lastSample"],[232,24,121,20],[232,27,121,23,"kSplineTableSize"],[232,43,121,39],[232,46,121,42],[232,47,121,43],[233,10,123,4],[233,17,125,6,"currentSample"],[233,30,125,19],[233,35,125,24,"lastSample"],[233,45,125,34],[233,49,125,38,"sampleValues"],[233,61,125,50],[233,62,125,51,"currentSample"],[233,75,125,64],[233,76,125,65],[233,80,125,69,"aX"],[233,82,125,71],[233,84,126,6],[233,86,126,8,"currentSample"],[233,99,126,21],[233,101,127,6],[234,12,128,6,"intervalStart"],[234,25,128,19],[234,29,128,23,"kSampleStepSize"],[234,44,128,38],[235,10,129,4],[236,10,130,4],[236,12,130,6,"currentSample"],[236,25,130,19],[238,10,132,4],[239,10,133,4],[239,14,133,10,"dist"],[239,18,133,14],[239,21,134,6],[239,22,134,7,"aX"],[239,24,134,9],[239,27,134,12,"sampleValues"],[239,39,134,24],[239,40,134,25,"currentSample"],[239,53,134,38],[239,54,134,39],[239,59,135,7,"sampleValues"],[239,71,135,19],[239,72,135,20,"currentSample"],[239,85,135,33],[239,88,135,36],[239,89,135,37],[239,90,135,38],[239,93,135,41,"sampleValues"],[239,105,135,53],[239,106,135,54,"currentSample"],[239,119,135,67],[239,120,135,68],[239,121,135,69],[240,10,136,4],[240,14,136,10,"guessForT"],[240,23,136,19],[240,26,136,22,"intervalStart"],[240,39,136,35],[240,42,136,38,"dist"],[240,46,136,42],[240,49,136,45,"kSampleStepSize"],[240,64,136,60],[241,10,138,4],[241,14,138,10,"initialSlope"],[241,26,138,22],[241,29,138,25,"getSlope"],[241,37,138,33],[241,38,138,34,"guessForT"],[241,47,138,43],[241,49,138,45,"mX1"],[241,52,138,48],[241,54,138,50,"mX2"],[241,57,138,53],[241,58,138,54],[242,10,139,4],[242,14,139,8,"initialSlope"],[242,26,139,20],[242,30,139,24,"NEWTON_MIN_SLOPE"],[242,46,139,40],[242,48,139,42],[243,12,140,6],[243,19,140,13,"newtonRaphsonIterate"],[243,39,140,33],[243,40,140,34,"aX"],[243,42,140,36],[243,44,140,38,"guessForT"],[243,53,140,47],[243,55,140,49,"mX1"],[243,58,140,52],[243,60,140,54,"mX2"],[243,63,140,57],[243,64,140,58],[244,10,141,4],[244,11,141,5],[244,17,141,11],[244,21,141,15,"initialSlope"],[244,33,141,27],[244,38,141,32],[244,41,141,35],[244,43,141,37],[245,12,142,6],[245,19,142,13,"guessForT"],[245,28,142,22],[246,10,143,4],[246,11,143,5],[246,17,143,11],[247,12,144,6],[247,19,144,13,"binarySubdivide"],[247,34,144,28],[247,35,145,8,"aX"],[247,37,145,10],[247,39,146,8,"intervalStart"],[247,52,146,21],[247,54,147,8,"intervalStart"],[247,67,147,21],[247,70,147,24,"kSampleStepSize"],[247,85,147,39],[247,87,148,8,"mX1"],[247,90,148,11],[247,92,149,8,"mX2"],[247,95,150,6],[247,96,150,7],[248,10,151,4],[249,8,152,2],[249,9,152,3],[250,8,152,3,"getTForX"],[250,16,152,3],[250,17,152,3,"__closure"],[250,26,152,3],[251,10,152,3,"kSplineTableSize"],[251,26,152,3],[252,10,152,3,"sampleValues"],[252,22,152,3],[253,10,152,3,"kSampleStepSize"],[253,25,152,3],[254,10,152,3,"getSlope"],[254,18,152,3],[255,10,152,3,"mX1"],[255,13,152,3],[256,10,152,3,"mX2"],[256,13,152,3],[257,10,152,3,"NEWTON_MIN_SLOPE"],[257,26,152,3],[258,10,152,3,"newtonRaphsonIterate"],[258,30,152,3],[259,10,152,3,"binarySubdivide"],[260,8,152,3],[261,8,152,3,"getTForX"],[261,16,152,3],[261,17,152,3,"__workletHash"],[261,30,152,3],[262,8,152,3,"getTForX"],[262,16,152,3],[262,17,152,3,"__initData"],[262,27,152,3],[262,30,152,3,"_worklet_582111972461_init_data"],[262,61,152,3],[263,8,152,3,"getTForX"],[263,16,152,3],[263,17,152,3,"__stackDetails"],[263,31,152,3],[263,34,152,3,"_e"],[263,36,152,3],[264,8,152,3],[264,15,152,3,"getTForX"],[264,23,152,3],[265,6,152,3],[265,7,117,2],[266,6,154,2],[266,13,154,9],[267,8,154,9],[267,12,154,9,"_e"],[267,14,154,9],[267,22,154,9,"global"],[267,28,154,9],[267,29,154,9,"Error"],[267,34,154,9],[268,8,154,9],[268,12,154,9,"BezierEasing"],[268,24,154,9],[268,36,154,9,"BezierEasing"],[268,37,154,31,"x"],[268,38,154,32],[268,40,154,34],[269,10,156,4],[269,14,156,8,"mX1"],[269,17,156,11],[269,22,156,16,"mY1"],[269,25,156,19],[269,29,156,23,"mX2"],[269,32,156,26],[269,37,156,31,"mY2"],[269,40,156,34],[269,42,156,36],[270,12,157,6],[270,19,157,13,"x"],[270,20,157,14],[270,21,157,15],[270,22,157,16],[271,10,158,4],[272,10,159,4],[273,10,160,4],[273,14,160,8,"x"],[273,15,160,9],[273,20,160,14],[273,21,160,15],[273,23,160,17],[274,12,161,6],[274,19,161,13],[274,20,161,14],[275,10,162,4],[276,10,163,4],[276,14,163,8,"x"],[276,15,163,9],[276,20,163,14],[276,21,163,15],[276,23,163,17],[277,12,164,6],[277,19,164,13],[277,20,164,14],[278,10,165,4],[279,10,166,4],[279,17,166,11,"calcBezier"],[279,27,166,21],[279,28,166,22,"getTForX"],[279,36,166,30],[279,37,166,31,"x"],[279,38,166,32],[279,39,166,33],[279,41,166,35,"mY1"],[279,44,166,38],[279,46,166,40,"mY2"],[279,49,166,43],[279,50,166,44],[280,8,167,2],[280,9,167,3],[281,8,167,3,"BezierEasing"],[281,20,167,3],[281,21,167,3,"__closure"],[281,30,167,3],[282,10,167,3,"mX1"],[282,13,167,3],[283,10,167,3,"mY1"],[283,13,167,3],[284,10,167,3,"mX2"],[284,13,167,3],[285,10,167,3,"mY2"],[285,13,167,3],[286,10,167,3,"calcBezier"],[286,20,167,3],[287,10,167,3,"getTForX"],[288,8,167,3],[289,8,167,3,"BezierEasing"],[289,20,167,3],[289,21,167,3,"__workletHash"],[289,34,167,3],[290,8,167,3,"BezierEasing"],[290,20,167,3],[290,21,167,3,"__initData"],[290,31,167,3],[290,34,167,3,"_worklet_5253683607097_init_data"],[290,66,167,3],[291,8,167,3,"BezierEasing"],[291,20,167,3],[291,21,167,3,"__stackDetails"],[291,35,167,3],[291,38,167,3,"_e"],[291,40,167,3],[292,8,167,3],[292,15,167,3,"BezierEasing"],[292,27,167,3],[293,6,167,3],[293,7,154,9],[294,4,168,0],[294,5,168,1],[295,4,168,1,"Bezier"],[295,10,168,1],[295,11,168,1,"__closure"],[295,20,168,1],[296,6,168,1,"kSplineTableSize"],[296,22,168,1],[297,6,168,1,"calcBezier"],[297,16,168,1],[298,6,168,1,"kSampleStepSize"],[298,21,168,1],[299,6,168,1,"getSlope"],[299,14,168,1],[300,6,168,1,"NEWTON_MIN_SLOPE"],[300,22,168,1],[301,6,168,1,"newtonRaphsonIterate"],[301,26,168,1],[302,6,168,1,"binarySubdivide"],[303,4,168,1],[304,4,168,1,"Bezier"],[304,10,168,1],[304,11,168,1,"__workletHash"],[304,24,168,1],[305,4,168,1,"Bezier"],[305,10,168,1],[305,11,168,1,"__initData"],[305,21,168,1],[305,24,168,1,"_worklet_4651979895956_init_data"],[305,56,168,1],[306,4,168,1,"Bezier"],[306,10,168,1],[306,11,168,1,"__stackDetails"],[306,25,168,1],[306,28,168,1,"_e"],[306,30,168,1],[307,4,168,1],[307,11,168,1,"Bezier"],[307,17,168,1],[308,2,168,1],[308,3,89,7],[309,0,89,7],[309,3]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","Bezier","LinearEasing","getTForX","BezierEasing"],"mappings":"AAA;ACmB;CDG;AEC;CFG;AGC;CHG;AIG;CJG;AKG;CLG;AME;CNwB;AOE;CPgB;OQE;ECQ;GDG;EEiB;GFmC;SGE;GHa;CRC"}},"type":"js/module"}]}