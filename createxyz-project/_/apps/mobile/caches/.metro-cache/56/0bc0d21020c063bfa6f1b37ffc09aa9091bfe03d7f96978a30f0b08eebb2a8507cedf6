{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"./ExpoLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":40,"index":183}}],"key":"9p576A/DjaRztdSFcD8Nohub+Qg=","exportNames":["*"]}},{"name":"./RNLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":36,"index":220}}],"key":"2y1SxYi56UhLqVRPo+LPBad0ytc=","exportNames":["*"]}},{"name":"./createURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}}],"key":"vA/KQURWJdMSJD6QjTsub0VGQQ0=","exportNames":["*"]}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg=","exportNames":["*"]}},{"name":"./Linking.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":142,"column":0,"index":5340},"end":{"line":142,"column":32,"index":5372}}],"key":"UNHzwDbHrazdE82g65F1azNEReY=","exportNames":["*"]}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":143,"column":0,"index":5373},"end":{"line":143,"column":26,"index":5399}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    addEventListener: true,\n    parseInitialURLAsync: true,\n    sendIntent: true,\n    openSettings: true,\n    getInitialURL: true,\n    getLinkingURL: true,\n    openURL: true,\n    canOpenURL: true,\n    useURL: true,\n    useLinkingURL: true,\n    parse: true,\n    createURL: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.canOpenURL = canOpenURL;\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.createURL;\n    }\n  });\n  exports.getInitialURL = getInitialURL;\n  exports.getLinkingURL = getLinkingURL;\n  exports.openSettings = openSettings;\n  exports.openURL = openURL;\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.parse;\n    }\n  });\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.useLinkingURL = useLinkingURL;\n  exports.useURL = useURL;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _react = require(_dependencyMap[2], \"react\");\n  var _Platform = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\"));\n  var _ExpoLinking = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoLinking\"));\n  var _RNLinking = _interopRequireDefault(require(_dependencyMap[5], \"./RNLinking\"));\n  var _createURL = require(_dependencyMap[6], \"./createURL\");\n  var _validateURL = require(_dependencyMap[7], \"./validateURL\");\n  var _Linking = require(_dependencyMap[8], \"./Linking.types\");\n  Object.keys(_Linking).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Linking[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Linking[key];\n      }\n    });\n  });\n  var _Schemes = require(_dependencyMap[9], \"./Schemes\");\n  Object.keys(_Schemes).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Schemes[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Schemes[key];\n      }\n    });\n  });\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventtype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native documentation on Linking](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return _RNLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  async function parseInitialURLAsync() {\n    const initialUrl = await _RNLinking.default.getInitialURL();\n    if (!initialUrl) {\n      return {\n        scheme: null,\n        hostname: null,\n        path: null,\n        queryParams: null\n      };\n    }\n    return (0, _createURL.parse)(initialUrl);\n  }\n  // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [`expo-intent-launcher`](./intent-launcher) instead. `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  async function sendIntent(action, extras) {\n    if (_Platform.default.OS === 'android') {\n      return await _RNLinking.default.sendIntent(action, extras);\n    }\n    throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n  }\n  // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  async function openSettings() {\n    if (_Platform.default.OS === 'web') {\n      throw new _expoModulesCore.UnavailabilityError('Linking', 'openSettings');\n    }\n    if (_RNLinking.default.openSettings) {\n      return await _RNLinking.default.openSettings();\n    }\n    await openURL('app-settings:');\n  }\n  // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  async function getInitialURL() {\n    return (await _RNLinking.default.getInitialURL()) ?? null;\n  }\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function getLinkingURL() {\n    return _ExpoLinking.default.getLinkingURL();\n  }\n  // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open. For example: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  async function openURL(url) {\n    (0, _validateURL.validateURL)(url);\n    return await _RNLinking.default.openURL(url);\n  }\n  // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  async function canOpenURL(url) {\n    (0, _validateURL.validateURL)(url);\n    return await _RNLinking.default.canOpenURL(url);\n  }\n  // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @return Returns the initial URL or `null`.\n   */\n  function useURL() {\n    const [url, setLink] = (0, _react.useState)(null);\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      const subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n  /**\n   * Returns the linking URL followed by any subsequent changes to the URL.\n   * Always returns the initial URL immediately on reload.\n   * @return Returns the initial URL or `null`.\n   */\n  function useLinkingURL() {\n    const [url, setLink] = (0, _react.useState)(_ExpoLinking.default.getLinkingURL);\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      const subscription = _ExpoLinking.default.addListener('onURLReceived', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url ?? null;\n  }\n});","lineCount":207,"map":[[42,2,1,0],[42,6,1,0,"_expoModulesCore"],[42,22,1,0],[42,25,1,0,"require"],[42,32,1,0],[42,33,1,0,"_dependencyMap"],[42,47,1,0],[43,2,2,0],[43,6,2,0,"_react"],[43,12,2,0],[43,15,2,0,"require"],[43,22,2,0],[43,23,2,0,"_dependencyMap"],[43,37,2,0],[44,2,2,44],[44,6,2,44,"_Platform"],[44,15,2,44],[44,18,2,44,"_interopRequireDefault"],[44,40,2,44],[44,41,2,44,"require"],[44,48,2,44],[44,49,2,44,"_dependencyMap"],[44,63,2,44],[45,2,4,0],[45,6,4,0,"_ExpoLinking"],[45,18,4,0],[45,21,4,0,"_interopRequireDefault"],[45,43,4,0],[45,44,4,0,"require"],[45,51,4,0],[45,52,4,0,"_dependencyMap"],[45,66,4,0],[46,2,5,0],[46,6,5,0,"_RNLinking"],[46,16,5,0],[46,19,5,0,"_interopRequireDefault"],[46,41,5,0],[46,42,5,0,"require"],[46,49,5,0],[46,50,5,0,"_dependencyMap"],[46,64,5,0],[47,2,6,0],[47,6,6,0,"_createURL"],[47,16,6,0],[47,19,6,0,"require"],[47,26,6,0],[47,27,6,0,"_dependencyMap"],[47,41,6,0],[48,2,7,0],[48,6,7,0,"_validateURL"],[48,18,7,0],[48,21,7,0,"require"],[48,28,7,0],[48,29,7,0,"_dependencyMap"],[48,43,7,0],[49,2,142,0],[49,6,142,0,"_Linking"],[49,14,142,0],[49,17,142,0,"require"],[49,24,142,0],[49,25,142,0,"_dependencyMap"],[49,39,142,0],[50,2,142,0,"Object"],[50,8,142,0],[50,9,142,0,"keys"],[50,13,142,0],[50,14,142,0,"_Linking"],[50,22,142,0],[50,24,142,0,"forEach"],[50,31,142,0],[50,42,142,0,"key"],[50,45,142,0],[51,4,142,0],[51,8,142,0,"key"],[51,11,142,0],[51,29,142,0,"key"],[51,32,142,0],[52,4,142,0],[52,8,142,0,"Object"],[52,14,142,0],[52,15,142,0,"prototype"],[52,24,142,0],[52,25,142,0,"hasOwnProperty"],[52,39,142,0],[52,40,142,0,"call"],[52,44,142,0],[52,45,142,0,"_exportNames"],[52,57,142,0],[52,59,142,0,"key"],[52,62,142,0],[53,4,142,0],[53,8,142,0,"key"],[53,11,142,0],[53,15,142,0,"exports"],[53,22,142,0],[53,26,142,0,"exports"],[53,33,142,0],[53,34,142,0,"key"],[53,37,142,0],[53,43,142,0,"_Linking"],[53,51,142,0],[53,52,142,0,"key"],[53,55,142,0],[54,4,142,0,"Object"],[54,10,142,0],[54,11,142,0,"defineProperty"],[54,25,142,0],[54,26,142,0,"exports"],[54,33,142,0],[54,35,142,0,"key"],[54,38,142,0],[55,6,142,0,"enumerable"],[55,16,142,0],[56,6,142,0,"get"],[56,9,142,0],[56,20,142,0,"get"],[56,21,142,0],[57,8,142,0],[57,15,142,0,"_Linking"],[57,23,142,0],[57,24,142,0,"key"],[57,27,142,0],[58,6,142,0],[59,4,142,0],[60,2,142,0],[61,2,143,0],[61,6,143,0,"_Schemes"],[61,14,143,0],[61,17,143,0,"require"],[61,24,143,0],[61,25,143,0,"_dependencyMap"],[61,39,143,0],[62,2,143,0,"Object"],[62,8,143,0],[62,9,143,0,"keys"],[62,13,143,0],[62,14,143,0,"_Schemes"],[62,22,143,0],[62,24,143,0,"forEach"],[62,31,143,0],[62,42,143,0,"key"],[62,45,143,0],[63,4,143,0],[63,8,143,0,"key"],[63,11,143,0],[63,29,143,0,"key"],[63,32,143,0],[64,4,143,0],[64,8,143,0,"Object"],[64,14,143,0],[64,15,143,0,"prototype"],[64,24,143,0],[64,25,143,0,"hasOwnProperty"],[64,39,143,0],[64,40,143,0,"call"],[64,44,143,0],[64,45,143,0,"_exportNames"],[64,57,143,0],[64,59,143,0,"key"],[64,62,143,0],[65,4,143,0],[65,8,143,0,"key"],[65,11,143,0],[65,15,143,0,"exports"],[65,22,143,0],[65,26,143,0,"exports"],[65,33,143,0],[65,34,143,0,"key"],[65,37,143,0],[65,43,143,0,"_Schemes"],[65,51,143,0],[65,52,143,0,"key"],[65,55,143,0],[66,4,143,0,"Object"],[66,10,143,0],[66,11,143,0,"defineProperty"],[66,25,143,0],[66,26,143,0,"exports"],[66,33,143,0],[66,35,143,0,"key"],[66,38,143,0],[67,6,143,0,"enumerable"],[67,16,143,0],[68,6,143,0,"get"],[68,9,143,0],[68,20,143,0,"get"],[68,21,143,0],[69,8,143,0],[69,15,143,0,"_Schemes"],[69,23,143,0],[69,24,143,0,"key"],[69,27,143,0],[70,6,143,0],[71,4,143,0],[72,2,143,0],[73,2,8,0],[74,2,9,0],[75,0,10,0],[76,0,11,0],[77,0,12,0],[78,0,13,0],[79,0,14,0],[80,0,15,0],[81,0,16,0],[82,0,17,0],[83,2,18,7],[83,11,18,16,"addEventListener"],[83,27,18,32,"addEventListener"],[83,28,18,33,"type"],[83,32,18,37],[83,34,18,39,"handler"],[83,41,18,46],[83,43,18,48],[84,4,19,4],[84,11,19,11,"RNLinking"],[84,29,19,20],[84,30,19,21,"addEventListener"],[84,46,19,37],[84,47,19,38,"type"],[84,51,19,42],[84,53,19,44,"handler"],[84,60,19,51],[84,61,19,52],[85,2,20,0],[86,2,21,0],[87,2,22,0],[88,0,23,0],[89,0,24,0],[90,0,25,0],[91,0,26,0],[92,0,27,0],[93,0,28,0],[94,2,29,7],[94,17,29,22,"parseInitialURLAsync"],[94,37,29,42,"parseInitialURLAsync"],[94,38,29,42],[94,40,29,45],[95,4,30,4],[95,10,30,10,"initialUrl"],[95,20,30,20],[95,23,30,23],[95,29,30,29,"RNLinking"],[95,47,30,38],[95,48,30,39,"getInitialURL"],[95,61,30,52],[95,62,30,53],[95,63,30,54],[96,4,31,4],[96,8,31,8],[96,9,31,9,"initialUrl"],[96,19,31,19],[96,21,31,21],[97,6,32,8],[97,13,32,15],[98,8,33,12,"scheme"],[98,14,33,18],[98,16,33,20],[98,20,33,24],[99,8,34,12,"hostname"],[99,16,34,20],[99,18,34,22],[99,22,34,26],[100,8,35,12,"path"],[100,12,35,16],[100,14,35,18],[100,18,35,22],[101,8,36,12,"queryParams"],[101,19,36,23],[101,21,36,25],[102,6,37,8],[102,7,37,9],[103,4,38,4],[104,4,39,4],[104,11,39,11],[104,15,39,11,"parse"],[104,31,39,16],[104,33,39,17,"initialUrl"],[104,43,39,27],[104,44,39,28],[105,2,40,0],[106,2,41,0],[107,2,42,0],[108,0,43,0],[109,0,44,0],[110,0,45,0],[111,0,46,0],[112,0,47,0],[113,2,48,7],[113,17,48,22,"sendIntent"],[113,27,48,32,"sendIntent"],[113,28,48,33,"action"],[113,34,48,39],[113,36,48,41,"extras"],[113,42,48,47],[113,44,48,49],[114,4,49,4],[114,8,49,8,"Platform"],[114,25,49,16],[114,26,49,17,"OS"],[114,28,49,19],[114,33,49,24],[114,42,49,33],[114,44,49,35],[115,6,50,8],[115,13,50,15],[115,19,50,21,"RNLinking"],[115,37,50,30],[115,38,50,31,"sendIntent"],[115,48,50,41],[115,49,50,42,"action"],[115,55,50,48],[115,57,50,50,"extras"],[115,63,50,56],[115,64,50,57],[116,4,51,4],[117,4,52,4],[117,10,52,10],[117,14,52,14,"UnavailabilityError"],[117,50,52,33],[117,51,52,34],[117,60,52,43],[117,62,52,45],[117,74,52,57],[117,75,52,58],[118,2,53,0],[119,2,54,0],[120,2,55,0],[121,0,56,0],[122,0,57,0],[123,2,58,7],[123,17,58,22,"openSettings"],[123,29,58,34,"openSettings"],[123,30,58,34],[123,32,58,37],[124,4,59,4],[124,8,59,8,"Platform"],[124,25,59,16],[124,26,59,17,"OS"],[124,28,59,19],[124,33,59,24],[124,38,59,29],[124,40,59,31],[125,6,60,8],[125,12,60,14],[125,16,60,18,"UnavailabilityError"],[125,52,60,37],[125,53,60,38],[125,62,60,47],[125,64,60,49],[125,78,60,63],[125,79,60,64],[126,4,61,4],[127,4,62,4],[127,8,62,8,"RNLinking"],[127,26,62,17],[127,27,62,18,"openSettings"],[127,39,62,30],[127,41,62,32],[128,6,63,8],[128,13,63,15],[128,19,63,21,"RNLinking"],[128,37,63,30],[128,38,63,31,"openSettings"],[128,50,63,43],[128,51,63,44],[128,52,63,45],[129,4,64,4],[130,4,65,4],[130,10,65,10,"openURL"],[130,17,65,17],[130,18,65,18],[130,33,65,33],[130,34,65,34],[131,2,66,0],[132,2,67,0],[133,2,68,0],[134,0,69,0],[135,0,70,0],[136,0,71,0],[137,2,72,7],[137,17,72,22,"getInitialURL"],[137,30,72,35,"getInitialURL"],[137,31,72,35],[137,33,72,38],[138,4,73,4],[138,11,73,11],[138,12,73,12],[138,18,73,18,"RNLinking"],[138,36,73,27],[138,37,73,28,"getInitialURL"],[138,50,73,41],[138,51,73,42],[138,52,73,43],[138,57,73,48],[138,61,73,52],[139,2,74,0],[140,2,75,0],[141,0,76,0],[142,0,77,0],[143,0,78,0],[144,2,79,7],[144,11,79,16,"getLinkingURL"],[144,24,79,29,"getLinkingURL"],[144,25,79,29],[144,27,79,32],[145,4,80,4],[145,11,80,11,"ExpoLinking"],[145,31,80,22],[145,32,80,23,"getLinkingURL"],[145,45,80,36],[145,46,80,37],[145,47,80,38],[146,2,81,0],[147,2,82,0],[148,2,83,0],[149,0,84,0],[150,0,85,0],[151,0,86,0],[152,0,87,0],[153,0,88,0],[154,0,89,0],[155,0,90,0],[156,2,91,7],[156,17,91,22,"openURL"],[156,24,91,29,"openURL"],[156,25,91,30,"url"],[156,28,91,33],[156,30,91,35],[157,4,92,4],[157,8,92,4,"validateURL"],[157,32,92,15],[157,34,92,16,"url"],[157,37,92,19],[157,38,92,20],[158,4,93,4],[158,11,93,11],[158,17,93,17,"RNLinking"],[158,35,93,26],[158,36,93,27,"openURL"],[158,43,93,34],[158,44,93,35,"url"],[158,47,93,38],[158,48,93,39],[159,2,94,0],[160,2,95,0],[161,2,96,0],[162,0,97,0],[163,0,98,0],[164,0,99,0],[165,0,100,0],[166,0,101,0],[167,0,102,0],[168,0,103,0],[169,0,104,0],[170,2,105,7],[170,17,105,22,"canOpenURL"],[170,27,105,32,"canOpenURL"],[170,28,105,33,"url"],[170,31,105,36],[170,33,105,38],[171,4,106,4],[171,8,106,4,"validateURL"],[171,32,106,15],[171,34,106,16,"url"],[171,37,106,19],[171,38,106,20],[172,4,107,4],[172,11,107,11],[172,17,107,17,"RNLinking"],[172,35,107,26],[172,36,107,27,"canOpenURL"],[172,46,107,37],[172,47,107,38,"url"],[172,50,107,41],[172,51,107,42],[173,2,108,0],[174,2,109,0],[175,2,110,0],[176,0,111,0],[177,0,112,0],[178,0,113,0],[179,2,114,7],[179,11,114,16,"useURL"],[179,17,114,22,"useURL"],[179,18,114,22],[179,20,114,25],[180,4,115,4],[180,10,115,10],[180,11,115,11,"url"],[180,14,115,14],[180,16,115,16,"setLink"],[180,23,115,23],[180,24,115,24],[180,27,115,27],[180,31,115,27,"useState"],[180,46,115,35],[180,48,115,36],[180,52,115,40],[180,53,115,41],[181,4,116,4],[181,13,116,13,"onChange"],[181,21,116,21,"onChange"],[181,22,116,22,"event"],[181,27,116,27],[181,29,116,29],[182,6,117,8,"setLink"],[182,13,117,15],[182,14,117,16,"event"],[182,19,117,21],[182,20,117,22,"url"],[182,23,117,25],[182,24,117,26],[183,4,118,4],[184,4,119,4],[184,8,119,4,"useEffect"],[184,24,119,13],[184,26,119,14],[184,32,119,20],[185,6,120,8,"getInitialURL"],[185,19,120,21],[185,20,120,22],[185,21,120,23],[185,22,120,24,"then"],[185,26,120,28],[185,27,120,30,"url"],[185,30,120,33],[185,34,120,38,"setLink"],[185,41,120,45],[185,42,120,46,"url"],[185,45,120,49],[185,46,120,50],[185,47,120,51],[186,6,121,8],[186,12,121,14,"subscription"],[186,24,121,26],[186,27,121,29,"addEventListener"],[186,43,121,45],[186,44,121,46],[186,49,121,51],[186,51,121,53,"onChange"],[186,59,121,61],[186,60,121,62],[187,6,122,8],[187,13,122,15],[187,19,122,21,"subscription"],[187,31,122,33],[187,32,122,34,"remove"],[187,38,122,40],[187,39,122,41],[187,40,122,42],[188,4,123,4],[188,5,123,5],[188,7,123,7],[188,9,123,9],[188,10,123,10],[189,4,124,4],[189,11,124,11,"url"],[189,14,124,14],[190,2,125,0],[191,2,126,0],[192,0,127,0],[193,0,128,0],[194,0,129,0],[195,0,130,0],[196,2,131,7],[196,11,131,16,"useLinkingURL"],[196,24,131,29,"useLinkingURL"],[196,25,131,29],[196,27,131,32],[197,4,132,4],[197,10,132,10],[197,11,132,11,"url"],[197,14,132,14],[197,16,132,16,"setLink"],[197,23,132,23],[197,24,132,24],[197,27,132,27],[197,31,132,27,"useState"],[197,46,132,35],[197,48,132,36,"ExpoLinking"],[197,68,132,47],[197,69,132,48,"getLinkingURL"],[197,82,132,61],[197,83,132,62],[198,4,133,4],[198,13,133,13,"onChange"],[198,21,133,21,"onChange"],[198,22,133,22,"event"],[198,27,133,27],[198,29,133,29],[199,6,134,8,"setLink"],[199,13,134,15],[199,14,134,16,"event"],[199,19,134,21],[199,20,134,22,"url"],[199,23,134,25],[199,24,134,26],[200,4,135,4],[201,4,136,4],[201,8,136,4,"useEffect"],[201,24,136,13],[201,26,136,14],[201,32,136,20],[202,6,137,8],[202,12,137,14,"subscription"],[202,24,137,26],[202,27,137,29,"ExpoLinking"],[202,47,137,40],[202,48,137,41,"addListener"],[202,59,137,52],[202,60,137,53],[202,75,137,68],[202,77,137,70,"onChange"],[202,85,137,78],[202,86,137,79],[203,6,138,8],[203,13,138,15],[203,19,138,21,"subscription"],[203,31,138,33],[203,32,138,34,"remove"],[203,38,138,40],[203,39,138,41],[203,40,138,42],[204,4,139,4],[204,5,139,5],[204,7,139,7],[204,9,139,9],[204,10,139,10],[205,4,140,4],[205,11,140,11,"url"],[205,14,140,14],[205,18,140,18],[205,22,140,22],[206,2,141,0],[207,0,141,1],[207,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","getLinkingURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>","useLinkingURL"],"mappings":"AAA;OCiB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMK;CNE;OOU;CPG;OQW;CRG;OSM;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CTE;OcM;IJE;KIE;cHC;eEE,2BF;KGC;CdE"}},"type":"js/module"}]}