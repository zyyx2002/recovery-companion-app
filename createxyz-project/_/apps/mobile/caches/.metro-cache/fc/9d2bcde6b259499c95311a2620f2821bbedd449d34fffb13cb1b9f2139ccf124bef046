{"dependencies":[{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"]}},{"name":"../../shared","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":172},"end":{"line":5,"column":40,"index":195}}],"key":"nGuj9FEtRBU67xZ2eTMaA3OncKU=","exportNames":["*"]}},{"name":"../observable","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":21,"index":218},"end":{"line":6,"column":45,"index":242}}],"key":"Wp4whP3mc8t6X+fLKju5VuvTTrc=","exportNames":["*"]}},{"name":"./stylesheet","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":21,"index":265},"end":{"line":7,"column":44,"index":288}}],"key":"+988CTNoUB9Xq0hySmlSzwRp6IU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.colorScheme = void 0;\n  const react_native_1 = require(_dependencyMap[0], \"react-native-web/dist/index\");\n  const shared_1 = require(_dependencyMap[1], \"../../shared\");\n  const observable_1 = require(_dependencyMap[2], \"../observable\");\n  const stylesheet_1 = require(_dependencyMap[3], \"./stylesheet\");\n  let appearance = react_native_1.Appearance;\n  let appearanceListener;\n  const darkModeFlag = stylesheet_1.StyleSheet.getFlag(\"darkMode\");\n  let darkMode;\n  let darkModeValue;\n  let initialColor = undefined;\n  if (darkModeFlag) {\n    const flags = darkModeFlag.split(\" \");\n    darkMode = flags[0];\n    darkModeValue = flags[1];\n    if (darkMode === \"class\") {\n      initialColor = \"window\" in globalThis.window && globalThis.window.document.documentElement.classList.contains(darkModeValue) ? \"dark\" : \"light\";\n    }\n  } else if (\"window\" in globalThis) {\n    const headNode = globalThis.window.document.getElementsByTagName(\"head\")[0];\n    new MutationObserver(function (_, observer) {\n      const darkModeFlag = stylesheet_1.StyleSheet.getFlag(\"darkMode\");\n      if (!darkModeFlag) return;\n      observer.disconnect();\n      const flags = darkModeFlag.split(\" \");\n      darkMode = flags[0];\n      darkModeValue = flags[1];\n      exports.colorScheme.set(globalThis.window.document.documentElement.classList.contains(darkModeValue) ? \"dark\" : \"system\");\n    }).observe(headNode, {\n      attributes: false,\n      childList: true,\n      subtree: false\n    });\n  }\n  const systemColorScheme = (0, observable_1.observable)(appearance.getColorScheme() ?? \"light\");\n  const colorSchemeObservable = (0, observable_1.observable)(initialColor, {\n    fallback: systemColorScheme\n  });\n  exports.colorScheme = {\n    set(value) {\n      if (darkMode === \"media\") {\n        throw new Error(\"Cannot manually set color scheme, as dark mode is type 'media'. Please use StyleSheet.setFlag('darkMode', 'class')\");\n      }\n      if (!globalThis.window) {\n        throw new Error(\"Cannot manually set color scheme while not in a browser environment.\");\n      }\n      if (value === \"system\") {\n        colorSchemeObservable.set(undefined);\n      } else {\n        colorSchemeObservable.set(value);\n      }\n      if (darkModeValue) {\n        if (value === \"dark\") {\n          globalThis.window?.document.documentElement.classList.add(darkModeValue);\n        } else {\n          globalThis.window?.document.documentElement.classList.remove(darkModeValue);\n        }\n      }\n    },\n    get: colorSchemeObservable.get,\n    toggle() {\n      let current = colorSchemeObservable.get();\n      if (current === undefined) current = appearance.getColorScheme() ?? \"light\";\n      exports.colorScheme.set(current === \"light\" ? \"dark\" : \"light\");\n    },\n    [shared_1.INTERNAL_RESET]: appearance => {\n      colorSchemeObservable.set(undefined);\n      resetAppearanceListeners(appearance);\n    }\n  };\n  function resetAppearanceListeners($appearance) {\n    appearance = $appearance;\n    appearanceListener?.remove();\n    appearanceListener = appearance.addChangeListener(state => {\n      if (react_native_1.AppState.currentState === \"active\") {\n        systemColorScheme.set(state.colorScheme ?? \"light\");\n      }\n    });\n  }\n  resetAppearanceListeners(appearance);\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"colorScheme"],[7,21,3,19],[7,24,3,22],[7,29,3,27],[7,30,3,28],[8,2,3,29],[8,8,3,29,"react_native_1"],[8,22,3,29],[8,25,3,29,"require"],[8,32,3,29],[8,33,3,29,"_dependencyMap"],[8,47,3,29],[9,2,5,0],[9,8,5,6,"shared_1"],[9,16,5,14],[9,19,5,17,"require"],[9,26,5,24],[9,27,5,24,"_dependencyMap"],[9,41,5,24],[9,60,5,39],[9,61,5,40],[10,2,6,0],[10,8,6,6,"observable_1"],[10,20,6,18],[10,23,6,21,"require"],[10,30,6,28],[10,31,6,28,"_dependencyMap"],[10,45,6,28],[10,65,6,44],[10,66,6,45],[11,2,7,0],[11,8,7,6,"stylesheet_1"],[11,20,7,18],[11,23,7,21,"require"],[11,30,7,28],[11,31,7,28,"_dependencyMap"],[11,45,7,28],[11,64,7,43],[11,65,7,44],[12,2,8,0],[12,6,8,4,"appearance"],[12,16,8,14],[12,19,8,17,"react_native_1"],[12,33,8,31],[12,34,8,32,"Appearance"],[12,44,8,42],[13,2,9,0],[13,6,9,4,"appearanceListener"],[13,24,9,22],[14,2,10,0],[14,8,10,6,"darkModeFlag"],[14,20,10,18],[14,23,10,21,"stylesheet_1"],[14,35,10,33],[14,36,10,34,"StyleSheet"],[14,46,10,44],[14,47,10,45,"getFlag"],[14,54,10,52],[14,55,10,53],[14,65,10,63],[14,66,10,64],[15,2,11,0],[15,6,11,4,"darkMode"],[15,14,11,12],[16,2,12,0],[16,6,12,4,"darkModeValue"],[16,19,12,17],[17,2,13,0],[17,6,13,4,"initialColor"],[17,18,13,16],[17,21,13,19,"undefined"],[17,30,13,28],[18,2,14,0],[18,6,14,4,"darkModeFlag"],[18,18,14,16],[18,20,14,18],[19,4,15,4],[19,10,15,10,"flags"],[19,15,15,15],[19,18,15,18,"darkModeFlag"],[19,30,15,30],[19,31,15,31,"split"],[19,36,15,36],[19,37,15,37],[19,40,15,40],[19,41,15,41],[20,4,16,4,"darkMode"],[20,12,16,12],[20,15,16,15,"flags"],[20,20,16,20],[20,21,16,21],[20,22,16,22],[20,23,16,23],[21,4,17,4,"darkModeValue"],[21,17,17,17],[21,20,17,20,"flags"],[21,25,17,25],[21,26,17,26],[21,27,17,27],[21,28,17,28],[22,4,18,4],[22,8,18,8,"darkMode"],[22,16,18,16],[22,21,18,21],[22,28,18,28],[22,30,18,30],[23,6,19,8,"initialColor"],[23,18,19,20],[23,21,20,12],[23,29,20,20],[23,33,20,24,"globalThis"],[23,43,20,34],[23,44,20,35,"window"],[23,50,20,41],[23,54,21,16,"globalThis"],[23,64,21,26],[23,65,21,27,"window"],[23,71,21,33],[23,72,21,34,"document"],[23,80,21,42],[23,81,21,43,"documentElement"],[23,96,21,58],[23,97,21,59,"classList"],[23,106,21,68],[23,107,21,69,"contains"],[23,115,21,77],[23,116,21,78,"darkModeValue"],[23,129,21,91],[23,130,21,92],[23,133,22,18],[23,139,22,24],[23,142,23,18],[23,149,23,25],[24,4,24,4],[25,2,25,0],[25,3,25,1],[25,9,26,5],[25,13,26,9],[25,21,26,17],[25,25,26,21,"globalThis"],[25,35,26,31],[25,37,26,33],[26,4,27,4],[26,10,27,10,"headNode"],[26,18,27,18],[26,21,27,21,"globalThis"],[26,31,27,31],[26,32,27,32,"window"],[26,38,27,38],[26,39,27,39,"document"],[26,47,27,47],[26,48,27,48,"getElementsByTagName"],[26,68,27,68],[26,69,27,69],[26,75,27,75],[26,76,27,76],[26,77,27,77],[26,78,27,78],[26,79,27,79],[27,4,28,4],[27,8,28,8,"MutationObserver"],[27,24,28,24],[27,25,28,25],[27,35,28,35,"_"],[27,36,28,36],[27,38,28,38,"observer"],[27,46,28,46],[27,48,28,48],[28,6,29,8],[28,12,29,14,"darkModeFlag"],[28,24,29,26],[28,27,29,29,"stylesheet_1"],[28,39,29,41],[28,40,29,42,"StyleSheet"],[28,50,29,52],[28,51,29,53,"getFlag"],[28,58,29,60],[28,59,29,61],[28,69,29,71],[28,70,29,72],[29,6,30,8],[29,10,30,12],[29,11,30,13,"darkModeFlag"],[29,23,30,25],[29,25,31,12],[30,6,32,8,"observer"],[30,14,32,16],[30,15,32,17,"disconnect"],[30,25,32,27],[30,26,32,28],[30,27,32,29],[31,6,33,8],[31,12,33,14,"flags"],[31,17,33,19],[31,20,33,22,"darkModeFlag"],[31,32,33,34],[31,33,33,35,"split"],[31,38,33,40],[31,39,33,41],[31,42,33,44],[31,43,33,45],[32,6,34,8,"darkMode"],[32,14,34,16],[32,17,34,19,"flags"],[32,22,34,24],[32,23,34,25],[32,24,34,26],[32,25,34,27],[33,6,35,8,"darkModeValue"],[33,19,35,21],[33,22,35,24,"flags"],[33,27,35,29],[33,28,35,30],[33,29,35,31],[33,30,35,32],[34,6,36,8,"exports"],[34,13,36,15],[34,14,36,16,"colorScheme"],[34,25,36,27],[34,26,36,28,"set"],[34,29,36,31],[34,30,36,32,"globalThis"],[34,40,36,42],[34,41,36,43,"window"],[34,47,36,49],[34,48,36,50,"document"],[34,56,36,58],[34,57,36,59,"documentElement"],[34,72,36,74],[34,73,36,75,"classList"],[34,82,36,84],[34,83,36,85,"contains"],[34,91,36,93],[34,92,36,94,"darkModeValue"],[34,105,36,107],[34,106,36,108],[34,109,37,14],[34,115,37,20],[34,118,38,14],[34,126,38,22],[34,127,38,23],[35,4,39,4],[35,5,39,5],[35,6,39,6],[35,7,39,7,"observe"],[35,14,39,14],[35,15,39,15,"headNode"],[35,23,39,23],[35,25,39,25],[36,6,39,27,"attributes"],[36,16,39,37],[36,18,39,39],[36,23,39,44],[37,6,39,46,"childList"],[37,15,39,55],[37,17,39,57],[37,21,39,61],[38,6,39,63,"subtree"],[38,13,39,70],[38,15,39,72],[39,4,39,78],[39,5,39,79],[39,6,39,80],[40,2,40,0],[41,2,41,0],[41,8,41,6,"systemColorScheme"],[41,25,41,23],[41,28,41,26],[41,29,41,27],[41,30,41,28],[41,32,41,30,"observable_1"],[41,44,41,42],[41,45,41,43,"observable"],[41,55,41,53],[41,57,41,55,"appearance"],[41,67,41,65],[41,68,41,66,"getColorScheme"],[41,82,41,80],[41,83,41,81],[41,84,41,82],[41,88,41,86],[41,95,41,93],[41,96,41,94],[42,2,42,0],[42,8,42,6,"colorSchemeObservable"],[42,29,42,27],[42,32,42,30],[42,33,42,31],[42,34,42,32],[42,36,42,34,"observable_1"],[42,48,42,46],[42,49,42,47,"observable"],[42,59,42,57],[42,61,42,59,"initialColor"],[42,73,42,71],[42,75,42,73],[43,4,42,75,"fallback"],[43,12,42,83],[43,14,42,85,"systemColorScheme"],[44,2,42,103],[44,3,42,104],[44,4,42,105],[45,2,43,0,"exports"],[45,9,43,7],[45,10,43,8,"colorScheme"],[45,21,43,19],[45,24,43,22],[46,4,44,4,"set"],[46,7,44,7,"set"],[46,8,44,8,"value"],[46,13,44,13],[46,15,44,15],[47,6,45,8],[47,10,45,12,"darkMode"],[47,18,45,20],[47,23,45,25],[47,30,45,32],[47,32,45,34],[48,8,46,12],[48,14,46,18],[48,18,46,22,"Error"],[48,23,46,27],[48,24,46,28],[48,140,46,144],[48,141,46,145],[49,6,47,8],[50,6,48,8],[50,10,48,12],[50,11,48,13,"globalThis"],[50,21,48,23],[50,22,48,24,"window"],[50,28,48,30],[50,30,48,32],[51,8,49,12],[51,14,49,18],[51,18,49,22,"Error"],[51,23,49,27],[51,24,49,28],[51,94,49,98],[51,95,49,99],[52,6,50,8],[53,6,51,8],[53,10,51,12,"value"],[53,15,51,17],[53,20,51,22],[53,28,51,30],[53,30,51,32],[54,8,52,12,"colorSchemeObservable"],[54,29,52,33],[54,30,52,34,"set"],[54,33,52,37],[54,34,52,38,"undefined"],[54,43,52,47],[54,44,52,48],[55,6,53,8],[55,7,53,9],[55,13,54,13],[56,8,55,12,"colorSchemeObservable"],[56,29,55,33],[56,30,55,34,"set"],[56,33,55,37],[56,34,55,38,"value"],[56,39,55,43],[56,40,55,44],[57,6,56,8],[58,6,57,8],[58,10,57,12,"darkModeValue"],[58,23,57,25],[58,25,57,27],[59,8,58,12],[59,12,58,16,"value"],[59,17,58,21],[59,22,58,26],[59,28,58,32],[59,30,58,34],[60,10,59,16,"globalThis"],[60,20,59,26],[60,21,59,27,"window"],[60,27,59,33],[60,29,59,35,"document"],[60,37,59,43],[60,38,59,44,"documentElement"],[60,53,59,59],[60,54,59,60,"classList"],[60,63,59,69],[60,64,59,70,"add"],[60,67,59,73],[60,68,59,74,"darkModeValue"],[60,81,59,87],[60,82,59,88],[61,8,60,12],[61,9,60,13],[61,15,61,17],[62,10,62,16,"globalThis"],[62,20,62,26],[62,21,62,27,"window"],[62,27,62,33],[62,29,62,35,"document"],[62,37,62,43],[62,38,62,44,"documentElement"],[62,53,62,59],[62,54,62,60,"classList"],[62,63,62,69],[62,64,62,70,"remove"],[62,70,62,76],[62,71,62,77,"darkModeValue"],[62,84,62,90],[62,85,62,91],[63,8,63,12],[64,6,64,8],[65,4,65,4],[65,5,65,5],[66,4,66,4,"get"],[66,7,66,7],[66,9,66,9,"colorSchemeObservable"],[66,30,66,30],[66,31,66,31,"get"],[66,34,66,34],[67,4,67,4,"toggle"],[67,10,67,10,"toggle"],[67,11,67,10],[67,13,67,13],[68,6,68,8],[68,10,68,12,"current"],[68,17,68,19],[68,20,68,22,"colorSchemeObservable"],[68,41,68,43],[68,42,68,44,"get"],[68,45,68,47],[68,46,68,48],[68,47,68,49],[69,6,69,8],[69,10,69,12,"current"],[69,17,69,19],[69,22,69,24,"undefined"],[69,31,69,33],[69,33,70,12,"current"],[69,40,70,19],[69,43,70,22,"appearance"],[69,53,70,32],[69,54,70,33,"getColorScheme"],[69,68,70,47],[69,69,70,48],[69,70,70,49],[69,74,70,53],[69,81,70,60],[70,6,71,8,"exports"],[70,13,71,15],[70,14,71,16,"colorScheme"],[70,25,71,27],[70,26,71,28,"set"],[70,29,71,31],[70,30,71,32,"current"],[70,37,71,39],[70,42,71,44],[70,49,71,51],[70,52,71,54],[70,58,71,60],[70,61,71,63],[70,68,71,70],[70,69,71,71],[71,4,72,4],[71,5,72,5],[72,4,73,4],[72,5,73,5,"shared_1"],[72,13,73,13],[72,14,73,14,"INTERNAL_RESET"],[72,28,73,28],[72,31,73,32,"appearance"],[72,41,73,42],[72,45,73,47],[73,6,74,8,"colorSchemeObservable"],[73,27,74,29],[73,28,74,30,"set"],[73,31,74,33],[73,32,74,34,"undefined"],[73,41,74,43],[73,42,74,44],[74,6,75,8,"resetAppearanceListeners"],[74,30,75,32],[74,31,75,33,"appearance"],[74,41,75,43],[74,42,75,44],[75,4,76,4],[76,2,77,0],[76,3,77,1],[77,2,78,0],[77,11,78,9,"resetAppearanceListeners"],[77,35,78,33,"resetAppearanceListeners"],[77,36,78,34,"$appearance"],[77,47,78,45],[77,49,78,47],[78,4,79,4,"appearance"],[78,14,79,14],[78,17,79,17,"$appearance"],[78,28,79,28],[79,4,80,4,"appearanceListener"],[79,22,80,22],[79,24,80,24,"remove"],[79,30,80,30],[79,31,80,31],[79,32,80,32],[80,4,81,4,"appearanceListener"],[80,22,81,22],[80,25,81,25,"appearance"],[80,35,81,35],[80,36,81,36,"addChangeListener"],[80,53,81,53],[80,54,81,55,"state"],[80,59,81,60],[80,63,81,65],[81,6,82,8],[81,10,82,12,"react_native_1"],[81,24,82,26],[81,25,82,27,"AppState"],[81,33,82,35],[81,34,82,36,"currentState"],[81,46,82,48],[81,51,82,53],[81,59,82,61],[81,61,82,63],[82,8,83,12,"systemColorScheme"],[82,25,83,29],[82,26,83,30,"set"],[82,29,83,33],[82,30,83,34,"state"],[82,35,83,39],[82,36,83,40,"colorScheme"],[82,47,83,51],[82,51,83,55],[82,58,83,62],[82,59,83,63],[83,6,84,8],[84,4,85,4],[84,5,85,5],[84,6,85,6],[85,2,86,0],[86,2,87,0,"resetAppearanceListeners"],[86,26,87,24],[86,27,87,25,"appearance"],[86,37,87,35],[86,38,87,36],[87,0,87,37],[87,3]],"functionMap":{"names":["<global>","MutationObserver$argument_0","exports.colorScheme.set","exports.colorScheme.toggle","exports.colorScheme.shared_1.INTERNAL_RESET","resetAppearanceListeners","appearance.addChangeListener$argument_0"],"mappings":"AAA;yBC2B;KDW;IEK;KFqB;IGE;KHK;+BIC;KJG;AKE;sDCG;KDI;CLC"}},"type":"js/module"}]}