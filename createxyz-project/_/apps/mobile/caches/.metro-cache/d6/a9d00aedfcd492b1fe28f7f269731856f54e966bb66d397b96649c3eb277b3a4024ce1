{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-css-interop","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"GojJv+4gs9E3DINH6CdbjjB/YmY=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":286},"end":{"line":5,"column":31,"index":317}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":66,"index":456}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":457},"end":{"line":8,"column":63,"index":520}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":521},"end":{"line":9,"column":33,"index":554}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":555},"end":{"line":10,"column":108,"index":663}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":664},"end":{"line":11,"column":56,"index":720}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":721},"end":{"line":12,"column":64,"index":785}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":786},"end":{"line":13,"column":47,"index":833}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":834},"end":{"line":14,"column":81,"index":915}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":916},"end":{"line":15,"column":43,"index":959}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":960},"end":{"line":16,"column":64,"index":1024}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1025},"end":{"line":17,"column":77,"index":1102}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1103},"end":{"line":18,"column":55,"index":1158}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1159},"end":{"line":19,"column":49,"index":1208}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _ReactNativeCSSInterop = _interopRequireWildcard(require(_dependencyMap[1], \"react-native-css-interop\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/UIManager\"));\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[5], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  var _customDirectEventTypes = require(_dependencyMap[6], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[7], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[8], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[9], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[10], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[11], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[12], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[13], \"../utils\");\n  var _ActionType = require(_dependencyMap[14], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[15], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[16], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[17], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[18], \"../mountRegistry\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  var _UIManagerAny$getView, _UIManagerAny$getView2, _UIManagerAny$getCons;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const UIManagerAny = _UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  }; // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  }; // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n\n  const UIManagerConstants = (_UIManagerAny$getView = (_UIManagerAny$getView2 = UIManagerAny.getViewManagerConfig) === null || _UIManagerAny$getView2 === void 0 ? void 0 : _UIManagerAny$getView2.call(UIManagerAny, 'getConstants')) !== null && _UIManagerAny$getView !== void 0 ? _UIManagerAny$getView : (_UIManagerAny$getCons = UIManagerAny.getConstants) === null || _UIManagerAny$getCons === void 0 ? void 0 : _UIManagerAny$getCons.call(UIManagerAny);\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  } // Wrap JS responder calls and notify gesture handler manager\n\n  const {\n    setJSResponder: oldSetJSResponder = () => {// no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {// no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _Platform.default.OS === 'android'; // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  if (DEV_ON_ANDROID) {\n    _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1; // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      constructor(props) {\n        super(props);\n        _defineProperty(this, \"handlerTag\", void 0);\n        _defineProperty(this, \"config\", void 0);\n        _defineProperty(this, \"propsRef\", void 0);\n        _defineProperty(this, \"isMountedRef\", void 0);\n        _defineProperty(this, \"viewNode\", void 0);\n        _defineProperty(this, \"viewTag\", void 0);\n        _defineProperty(this, \"inspectorToggleListener\", void 0);\n        _defineProperty(this, \"onGestureHandlerEvent\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onGestureEvent === 'function') {\n              var _this$props$onGesture, _this$props;\n              (_this$props$onGesture = (_this$props = this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props, event);\n            }\n          } else {\n            var _this$props$onGesture2, _this$props2;\n            (_this$props$onGesture2 = (_this$props2 = this.props).onGestureHandlerEvent) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props2, event);\n          }\n        });\n        _defineProperty(this, \"onGestureHandlerStateChange\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onHandlerStateChange === 'function') {\n              var _this$props$onHandler, _this$props3;\n              (_this$props$onHandler = (_this$props3 = this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props3, event);\n            }\n            const state = event.nativeEvent.state;\n            const stateEventName = stateToPropMappings[state];\n            const eventHandler = stateEventName && this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            var _this$props$onGesture3, _this$props4;\n            (_this$props$onGesture3 = (_this$props4 = this.props).onGestureHandlerStateChange) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props4, event);\n          }\n        });\n        _defineProperty(this, \"refHandler\", node => {\n          var _props;\n          this.viewNode = node;\n          const child = React.Children.only(this.props.children); // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n\n          const ref = (0, _utils2.isReact19)() ? (_props = child.props) === null || _props === void 0 ? void 0 : _props.ref : child === null || child === void 0 ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        });\n        _defineProperty(this, \"createGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n        });\n        _defineProperty(this, \"attachGestureHandler\", newViewTag => {\n          this.viewTag = newViewTag;\n          if (_Platform.default.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n              onGestureEvent: this.onGestureHandlerEvent,\n              onGestureStateChange: this.onGestureHandlerStateChange\n            });\n            const actionType = (() => {\n              var _this$props5, _this$props6;\n              const onGestureEvent = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.onGestureEvent;\n              const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              const onHandlerStateChange = (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : _this$props6.onHandlerStateChange;\n              const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n          });\n        });\n        _defineProperty(this, \"updateGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        });\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        var _this$inspectorToggle;\n        (_this$inspectorToggle = this.inspectorToggleListener) === null || _this$inspectorToggle === void 0 ? void 0 : _this$inspectorToggle.remove();\n        this.isMountedRef.current = false;\n        if (_Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)(); // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props; // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        var _this$props$testID;\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/_ReactNativeCSSInterop.createInteropElement(_PressabilityDebugView.PressabilityDebugView, {\n            key: \"pressabilityDebugView\",\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: (_this$props$testID = this.props.testID) !== null && _this$props$testID !== void 0 ? _this$props$testID : child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    _defineProperty(Handler, \"displayName\", name);\n    _defineProperty(Handler, \"contextType\", _GestureHandlerRootViewContext.default);\n    return Handler;\n  }\n});","lineCount":411,"map":[[8,2,5,0],[8,6,5,0,"React"],[8,11,5,0],[8,14,5,0,"_interopRequireWildcard"],[8,37,5,0],[8,38,5,0,"require"],[8,45,5,0],[8,46,5,0,"_dependencyMap"],[8,60,5,0],[9,2,5,31],[9,6,5,31,"_Platform"],[9,15,5,31],[9,18,5,31,"_interopRequireDefault"],[9,40,5,31],[9,41,5,31,"require"],[9,48,5,31],[9,49,5,31,"_dependencyMap"],[9,63,5,31],[10,2,5,31],[10,6,5,31,"_UIManager"],[10,16,5,31],[10,19,5,31,"_interopRequireDefault"],[10,41,5,31],[10,42,5,31,"require"],[10,49,5,31],[10,50,5,31,"_dependencyMap"],[10,64,5,31],[11,2,5,31],[11,6,5,31,"_DeviceEventEmitter"],[11,25,5,31],[11,28,5,31,"_interopRequireDefault"],[11,50,5,31],[11,51,5,31,"require"],[11,58,5,31],[11,59,5,31,"_dependencyMap"],[11,73,5,31],[12,2,7,0],[12,6,7,0,"_customDirectEventTypes"],[12,29,7,0],[12,32,7,0,"require"],[12,39,7,0],[12,40,7,0,"_dependencyMap"],[12,54,7,0],[13,2,8,0],[13,6,8,0,"_RNGestureHandlerModule"],[13,29,8,0],[13,32,8,0,"_interopRequireDefault"],[13,54,8,0],[13,55,8,0,"require"],[13,62,8,0],[13,63,8,0,"_dependencyMap"],[13,77,8,0],[14,2,9,0],[14,6,9,0,"_State"],[14,12,9,0],[14,15,9,0,"require"],[14,22,9,0],[14,23,9,0,"_dependencyMap"],[14,37,9,0],[15,2,10,0],[15,6,10,0,"_handlersRegistry"],[15,23,10,0],[15,26,10,0,"require"],[15,33,10,0],[15,34,10,0,"_dependencyMap"],[15,48,10,0],[16,2,11,0],[16,6,11,0,"_getNextHandlerTag"],[16,24,11,0],[16,27,11,0,"require"],[16,34,11,0],[16,35,11,0,"_dependencyMap"],[16,49,11,0],[17,2,12,0],[17,6,12,0,"_utils"],[17,12,12,0],[17,15,12,0,"require"],[17,22,12,0],[17,23,12,0,"_dependencyMap"],[17,37,12,0],[18,2,13,0],[18,6,13,0,"_findNodeHandle"],[18,21,13,0],[18,24,13,0,"_interopRequireDefault"],[18,46,13,0],[18,47,13,0,"require"],[18,54,13,0],[18,55,13,0,"_dependencyMap"],[18,69,13,0],[19,2,14,0],[19,6,14,0,"_utils2"],[19,13,14,0],[19,16,14,0,"require"],[19,23,14,0],[19,24,14,0,"_dependencyMap"],[19,38,14,0],[20,2,15,0],[20,6,15,0,"_ActionType"],[20,17,15,0],[20,20,15,0,"require"],[20,27,15,0],[20,28,15,0,"_dependencyMap"],[20,42,15,0],[21,2,16,0],[21,6,16,0,"_PressabilityDebugView"],[21,28,16,0],[21,31,16,0,"require"],[21,38,16,0],[21,39,16,0,"_dependencyMap"],[21,53,16,0],[22,2,17,0],[22,6,17,0,"_GestureHandlerRootViewContext"],[22,36,17,0],[22,39,17,0,"_interopRequireDefault"],[22,61,17,0],[22,62,17,0,"require"],[22,69,17,0],[22,70,17,0,"_dependencyMap"],[22,84,17,0],[23,2,18,0],[23,6,18,0,"_ghQueueMicrotask"],[23,23,18,0],[23,26,18,0,"require"],[23,33,18,0],[23,34,18,0,"_dependencyMap"],[23,48,18,0],[24,2,19,0],[24,6,19,0,"_mountRegistry"],[24,20,19,0],[24,23,19,0,"require"],[24,30,19,0],[24,31,19,0,"_dependencyMap"],[24,45,19,0],[25,2,19,49],[25,11,19,49,"_interopRequireWildcard"],[25,35,19,49,"e"],[25,36,19,49],[25,38,19,49,"t"],[25,39,19,49],[25,68,19,49,"WeakMap"],[25,75,19,49],[25,81,19,49,"r"],[25,82,19,49],[25,89,19,49,"WeakMap"],[25,96,19,49],[25,100,19,49,"n"],[25,101,19,49],[25,108,19,49,"WeakMap"],[25,115,19,49],[25,127,19,49,"_interopRequireWildcard"],[25,150,19,49],[25,162,19,49,"_interopRequireWildcard"],[25,163,19,49,"e"],[25,164,19,49],[25,166,19,49,"t"],[25,167,19,49],[25,176,19,49,"t"],[25,177,19,49],[25,181,19,49,"e"],[25,182,19,49],[25,186,19,49,"e"],[25,187,19,49],[25,188,19,49,"__esModule"],[25,198,19,49],[25,207,19,49,"e"],[25,208,19,49],[25,214,19,49,"o"],[25,215,19,49],[25,217,19,49,"i"],[25,218,19,49],[25,220,19,49,"f"],[25,221,19,49],[25,226,19,49,"__proto__"],[25,235,19,49],[25,243,19,49,"default"],[25,250,19,49],[25,252,19,49,"e"],[25,253,19,49],[25,270,19,49,"e"],[25,271,19,49],[25,294,19,49,"e"],[25,295,19,49],[25,320,19,49,"e"],[25,321,19,49],[25,330,19,49,"f"],[25,331,19,49],[25,337,19,49,"o"],[25,338,19,49],[25,341,19,49,"t"],[25,342,19,49],[25,345,19,49,"n"],[25,346,19,49],[25,349,19,49,"r"],[25,350,19,49],[25,358,19,49,"o"],[25,359,19,49],[25,360,19,49,"has"],[25,363,19,49],[25,364,19,49,"e"],[25,365,19,49],[25,375,19,49,"o"],[25,376,19,49],[25,377,19,49,"get"],[25,380,19,49],[25,381,19,49,"e"],[25,382,19,49],[25,385,19,49,"o"],[25,386,19,49],[25,387,19,49,"set"],[25,390,19,49],[25,391,19,49,"e"],[25,392,19,49],[25,394,19,49,"f"],[25,395,19,49],[25,411,19,49,"t"],[25,412,19,49],[25,416,19,49,"e"],[25,417,19,49],[25,433,19,49,"t"],[25,434,19,49],[25,441,19,49,"hasOwnProperty"],[25,455,19,49],[25,456,19,49,"call"],[25,460,19,49],[25,461,19,49,"e"],[25,462,19,49],[25,464,19,49,"t"],[25,465,19,49],[25,472,19,49,"i"],[25,473,19,49],[25,477,19,49,"o"],[25,478,19,49],[25,481,19,49,"Object"],[25,487,19,49],[25,488,19,49,"defineProperty"],[25,502,19,49],[25,507,19,49,"Object"],[25,513,19,49],[25,514,19,49,"getOwnPropertyDescriptor"],[25,538,19,49],[25,539,19,49,"e"],[25,540,19,49],[25,542,19,49,"t"],[25,543,19,49],[25,550,19,49,"i"],[25,551,19,49],[25,552,19,49,"get"],[25,555,19,49],[25,559,19,49,"i"],[25,560,19,49],[25,561,19,49,"set"],[25,564,19,49],[25,568,19,49,"o"],[25,569,19,49],[25,570,19,49,"f"],[25,571,19,49],[25,573,19,49,"t"],[25,574,19,49],[25,576,19,49,"i"],[25,577,19,49],[25,581,19,49,"f"],[25,582,19,49],[25,583,19,49,"t"],[25,584,19,49],[25,588,19,49,"e"],[25,589,19,49],[25,590,19,49,"t"],[25,591,19,49],[25,602,19,49,"f"],[25,603,19,49],[25,608,19,49,"e"],[25,609,19,49],[25,611,19,49,"t"],[25,612,19,49],[26,2,1,0],[26,6,1,4,"_UIManagerAny$getView"],[26,27,1,25],[26,29,1,27,"_UIManagerAny$getView2"],[26,51,1,49],[26,53,1,51,"_UIManagerAny$getCons"],[26,74,1,72],[27,2,3,0],[27,11,3,9,"_defineProperty"],[27,26,3,24,"_defineProperty"],[27,27,3,25,"obj"],[27,30,3,28],[27,32,3,30,"key"],[27,35,3,33],[27,37,3,35,"value"],[27,42,3,40],[27,44,3,42],[28,4,3,44],[28,8,3,48,"key"],[28,11,3,51],[28,15,3,55,"obj"],[28,18,3,58],[28,20,3,60],[29,6,3,62,"Object"],[29,12,3,68],[29,13,3,69,"defineProperty"],[29,27,3,83],[29,28,3,84,"obj"],[29,31,3,87],[29,33,3,89,"key"],[29,36,3,92],[29,38,3,94],[30,8,3,96,"value"],[30,13,3,101],[30,15,3,103,"value"],[30,20,3,108],[31,8,3,110,"enumerable"],[31,18,3,120],[31,20,3,122],[31,24,3,126],[32,8,3,128,"configurable"],[32,20,3,140],[32,22,3,142],[32,26,3,146],[33,8,3,148,"writable"],[33,16,3,156],[33,18,3,158],[34,6,3,163],[34,7,3,164],[34,8,3,165],[35,4,3,167],[35,5,3,168],[35,11,3,174],[36,6,3,176,"obj"],[36,9,3,179],[36,10,3,180,"key"],[36,13,3,183],[36,14,3,184],[36,17,3,187,"value"],[36,22,3,192],[37,4,3,194],[38,4,3,196],[38,11,3,203,"obj"],[38,14,3,206],[39,2,3,208],[40,2,20,0],[40,8,20,6,"UIManagerAny"],[40,20,20,18],[40,23,20,21,"UIManager"],[40,41,20,30],[41,2,21,0,"customDirectEventTypes"],[41,48,21,22],[41,49,21,23,"topGestureHandlerEvent"],[41,71,21,45],[41,74,21,48],[42,4,22,2,"registrationName"],[42,20,22,18],[42,22,22,20],[43,2,23,0],[43,3,23,1],[44,2,24,0],[44,8,24,6,"customGHEventsConfigFabricAndroid"],[44,41,24,39],[44,44,24,42],[45,4,25,2,"topOnGestureHandlerEvent"],[45,28,25,26],[45,30,25,28],[46,6,26,4,"registrationName"],[46,22,26,20],[46,24,26,22],[47,4,27,2],[47,5,27,3],[48,4,28,2,"topOnGestureHandlerStateChange"],[48,34,28,32],[48,36,28,34],[49,6,29,4,"registrationName"],[49,22,29,20],[49,24,29,22],[50,4,30,2],[51,2,31,0],[51,3,31,1],[52,2,32,0],[52,8,32,6,"customGHEventsConfig"],[52,28,32,26],[52,31,32,29],[53,4,33,2,"onGestureHandlerEvent"],[53,25,33,23],[53,27,33,25],[54,6,34,4,"registrationName"],[54,22,34,20],[54,24,34,22],[55,4,35,2],[55,5,35,3],[56,4,36,2,"onGestureHandlerStateChange"],[56,31,36,29],[56,33,36,31],[57,6,37,4,"registrationName"],[57,22,37,20],[57,24,37,22],[58,4,38,2],[58,5,38,3],[59,4,39,2],[60,4,40,2],[61,4,41,2],[62,4,42,2],[63,4,43,2],[64,4,44,2],[65,4,45,2],[66,4,46,2],[67,4,47,2],[67,8,47,6],[67,12,47,6,"isFabric"],[67,28,47,14],[67,30,47,15],[67,31,47,16],[67,35,47,20,"Platform"],[67,52,47,28],[67,53,47,29,"OS"],[67,55,47,31],[67,60,47,36],[67,69,47,45],[67,73,47,49,"customGHEventsConfigFabricAndroid"],[67,106,47,82],[68,2,48,0],[68,3,48,1],[68,4,48,2],[68,5,48,3],[69,2,49,0],[70,2,50,0],[71,2,51,0],[73,2,53,0,"UIManagerAny"],[73,14,53,12],[73,15,53,13,"genericDirectEventTypes"],[73,38,53,36],[73,41,53,39],[74,4,53,41],[74,7,53,44,"UIManagerAny"],[74,19,53,56],[74,20,53,57,"genericDirectEventTypes"],[74,43,53,80],[75,4,54,2],[75,7,54,5,"customGHEventsConfig"],[76,2,55,0],[76,3,55,1],[76,4,55,2],[76,5,55,3],[77,2,56,0],[78,2,57,0],[80,2,59,0],[80,8,59,6,"UIManagerConstants"],[80,26,59,24],[80,29,59,27],[80,30,59,28,"_UIManagerAny$getView"],[80,51,59,49],[80,54,59,52],[80,55,59,53,"_UIManagerAny$getView2"],[80,77,59,75],[80,80,59,78,"UIManagerAny"],[80,92,59,90],[80,93,59,91,"getViewManagerConfig"],[80,113,59,111],[80,119,59,117],[80,123,59,121],[80,127,59,125,"_UIManagerAny$getView2"],[80,149,59,147],[80,154,59,152],[80,159,59,157],[80,160,59,158],[80,163,59,161],[80,168,59,166],[80,169,59,167],[80,172,59,170,"_UIManagerAny$getView2"],[80,194,59,192],[80,195,59,193,"call"],[80,199,59,197],[80,200,59,198,"UIManagerAny"],[80,212,59,210],[80,214,59,212],[80,228,59,226],[80,229,59,227],[80,235,59,233],[80,239,59,237],[80,243,59,241,"_UIManagerAny$getView"],[80,264,59,262],[80,269,59,267],[80,274,59,272],[80,275,59,273],[80,278,59,276,"_UIManagerAny$getView"],[80,299,59,297],[80,302,59,300],[80,303,59,301,"_UIManagerAny$getCons"],[80,324,59,322],[80,327,59,325,"UIManagerAny"],[80,339,59,337],[80,340,59,338,"getConstants"],[80,352,59,350],[80,358,59,356],[80,362,59,360],[80,366,59,364,"_UIManagerAny$getCons"],[80,387,59,385],[80,392,59,390],[80,397,59,395],[80,398,59,396],[80,401,59,399],[80,406,59,404],[80,407,59,405],[80,410,59,408,"_UIManagerAny$getCons"],[80,431,59,429],[80,432,59,430,"call"],[80,436,59,434],[80,437,59,435,"UIManagerAny"],[80,449,59,447],[80,450,59,448],[81,2,61,0],[81,6,61,4,"UIManagerConstants"],[81,24,61,22],[81,26,61,24],[82,4,62,2,"UIManagerConstants"],[82,22,62,20],[82,23,62,21,"genericDirectEventTypes"],[82,46,62,44],[82,49,62,47],[83,6,62,49],[83,9,62,52,"UIManagerConstants"],[83,27,62,70],[83,28,62,71,"genericDirectEventTypes"],[83,51,62,94],[84,6,63,4],[84,9,63,7,"customGHEventsConfig"],[85,4,64,2],[85,5,64,3],[86,2,65,0],[86,3,65,1],[86,4,65,2],[88,2,68,0],[88,8,68,6],[89,4,69,2,"setJSResponder"],[89,18,69,16],[89,20,69,18,"oldSetJSResponder"],[89,37,69,35],[89,40,69,38,"oldSetJSResponder"],[89,41,69,38],[89,46,69,44],[89,47,69,45],[90,4,69,45],[90,5,70,3],[91,4,71,2,"clearJSResponder"],[91,20,71,18],[91,22,71,20,"oldClearJSResponder"],[91,41,71,39],[91,44,71,42,"oldClearJSResponder"],[91,45,71,42],[91,50,71,48],[91,51,71,49],[92,4,71,49],[93,2,73,0],[93,3,73,1],[93,6,73,4,"UIManagerAny"],[93,18,73,16],[94,2,75,0,"UIManagerAny"],[94,14,75,12],[94,15,75,13,"setJSResponder"],[94,29,75,27],[94,32,75,30],[94,33,75,31,"tag"],[94,36,75,34],[94,38,75,36,"blockNativeResponder"],[94,58,75,56],[94,63,75,61],[95,4,76,2,"RNGestureHandlerModule"],[95,35,76,24],[95,36,76,25,"handleSetJSResponder"],[95,56,76,45],[95,57,76,46,"tag"],[95,60,76,49],[95,62,76,51,"blockNativeResponder"],[95,82,76,71],[95,83,76,72],[96,4,77,2,"oldSetJSResponder"],[96,21,77,19],[96,22,77,20,"tag"],[96,25,77,23],[96,27,77,25,"blockNativeResponder"],[96,47,77,45],[96,48,77,46],[97,2,78,0],[97,3,78,1],[98,2,80,0,"UIManagerAny"],[98,14,80,12],[98,15,80,13,"clearJSResponder"],[98,31,80,29],[98,34,80,32],[98,40,80,38],[99,4,81,2,"RNGestureHandlerModule"],[99,35,81,24],[99,36,81,25,"handleClearJSResponder"],[99,58,81,47],[99,59,81,48],[99,60,81,49],[100,4,82,2,"oldClearJSResponder"],[100,23,82,21],[100,24,82,22],[100,25,82,23],[101,2,83,0],[101,3,83,1],[102,2,85,0],[102,6,85,4,"allowTouches"],[102,18,85,16],[102,21,85,19],[102,25,85,23],[103,2,86,0],[103,8,86,6,"DEV_ON_ANDROID"],[103,22,86,20],[103,25,86,23,"__DEV__"],[103,32,86,30],[103,36,86,34,"Platform"],[103,53,86,42],[103,54,86,43,"OS"],[103,56,86,45],[103,61,86,50],[103,70,86,59],[103,71,86,60],[103,72,86,61],[104,2,87,0],[106,2,89,0],[106,6,89,4,"DEV_ON_ANDROID"],[106,20,89,18],[106,22,89,20],[107,4,90,2,"DeviceEventEmitter"],[107,31,90,20],[107,32,90,21,"addListener"],[107,43,90,32],[107,44,90,33],[107,68,90,57],[107,70,90,59],[107,76,90,65],[108,6,91,4,"allowTouches"],[108,18,91,16],[108,21,91,19],[108,22,91,20,"allowTouches"],[108,34,91,32],[109,4,92,2],[109,5,92,3],[109,6,92,4],[110,2,93,0],[111,2,95,0],[111,11,95,9,"hasUnresolvedRefs"],[111,28,95,26,"hasUnresolvedRefs"],[111,29,95,27,"props"],[111,34,95,32],[111,36,95,34],[112,4,96,2],[113,4,97,2],[113,10,97,8,"extract"],[113,17,97,15],[113,20,97,18,"refs"],[113,24,97,22],[113,28,97,26],[114,6,98,4],[114,10,98,8],[114,11,98,9,"Array"],[114,16,98,14],[114,17,98,15,"isArray"],[114,24,98,22],[114,25,98,23,"refs"],[114,29,98,27],[114,30,98,28],[114,32,98,30],[115,8,99,6],[115,15,99,13,"refs"],[115,19,99,17],[115,23,99,21,"refs"],[115,27,99,25],[115,28,99,26,"current"],[115,35,99,33],[115,40,99,38],[115,44,99,42],[116,6,100,4],[117,6,102,4],[117,13,102,11,"refs"],[117,17,102,15],[117,18,102,16,"some"],[117,22,102,20],[117,23,102,21,"r"],[117,24,102,22],[117,28,102,26,"r"],[117,29,102,27],[117,33,102,31,"r"],[117,34,102,32],[117,35,102,33,"current"],[117,42,102,40],[117,47,102,45],[117,51,102,49],[117,52,102,50],[118,4,103,2],[118,5,103,3],[119,4,105,2],[119,11,105,9,"extract"],[119,18,105,16],[119,19,105,17,"props"],[119,24,105,22],[119,25,105,23],[119,47,105,45],[119,48,105,46],[119,49,105,47],[119,53,105,51,"extract"],[119,60,105,58],[119,61,105,59,"props"],[119,66,105,64],[119,67,105,65],[119,76,105,74],[119,77,105,75],[119,78,105,76],[120,2,106,0],[121,2,108,0],[121,8,108,6,"stateToPropMappings"],[121,27,108,25],[121,30,108,28],[122,4,109,2],[122,5,109,3,"State"],[122,17,109,8],[122,18,109,9,"UNDETERMINED"],[122,30,109,21],[122,33,109,24,"undefined"],[122,42,109,33],[123,4,110,2],[123,5,110,3,"State"],[123,17,110,8],[123,18,110,9,"BEGAN"],[123,23,110,14],[123,26,110,17],[123,35,110,26],[124,4,111,2],[124,5,111,3,"State"],[124,17,111,8],[124,18,111,9,"FAILED"],[124,24,111,15],[124,27,111,18],[124,37,111,28],[125,4,112,2],[125,5,112,3,"State"],[125,17,112,8],[125,18,112,9,"CANCELLED"],[125,27,112,18],[125,30,112,21],[125,43,112,34],[126,4,113,2],[126,5,113,3,"State"],[126,17,113,8],[126,18,113,9,"ACTIVE"],[126,24,113,15],[126,27,113,18],[126,40,113,31],[127,4,114,2],[127,5,114,3,"State"],[127,17,114,8],[127,18,114,9,"END"],[127,21,114,12],[127,24,114,15],[128,2,115,0],[128,3,115,1],[129,2,116,0],[129,8,116,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[129,35,116,33],[129,38,116,36],[129,39,116,37],[129,40,116,38],[129,41,116,39],[131,2,118,15],[131,11,118,24,"createHandler"],[131,24,118,37,"createHandler"],[131,25,118,38],[132,4,119,2,"name"],[132,8,119,6],[133,4,120,2,"allowedProps"],[133,16,120,14],[133,19,120,17],[133,21,120,19],[134,4,121,2,"config"],[134,10,121,8],[134,13,121,11],[134,14,121,12],[134,15,121,13],[135,4,122,2,"transformProps"],[135,18,122,16],[136,4,123,2,"customNativeProps"],[136,21,123,19],[136,24,123,22],[137,2,124,0],[137,3,124,1],[137,5,124,3],[138,4,125,2],[138,10,125,8,"Handler"],[138,17,125,15],[138,26,125,24,"React"],[138,31,125,29],[138,32,125,30,"Component"],[138,41,125,39],[138,42,125,40],[139,6,126,4,"constructor"],[139,17,126,15,"constructor"],[139,18,126,16,"props"],[139,23,126,21],[139,25,126,23],[140,8,127,6],[140,13,127,11],[140,14,127,12,"props"],[140,19,127,17],[140,20,127,18],[141,8,129,6,"_defineProperty"],[141,23,129,21],[141,24,129,22],[141,28,129,26],[141,30,129,28],[141,42,129,40],[141,44,129,42],[141,49,129,47],[141,50,129,48],[141,51,129,49],[142,8,131,6,"_defineProperty"],[142,23,131,21],[142,24,131,22],[142,28,131,26],[142,30,131,28],[142,38,131,36],[142,40,131,38],[142,45,131,43],[142,46,131,44],[142,47,131,45],[143,8,133,6,"_defineProperty"],[143,23,133,21],[143,24,133,22],[143,28,133,26],[143,30,133,28],[143,40,133,38],[143,42,133,40],[143,47,133,45],[143,48,133,46],[143,49,133,47],[144,8,135,6,"_defineProperty"],[144,23,135,21],[144,24,135,22],[144,28,135,26],[144,30,135,28],[144,44,135,42],[144,46,135,44],[144,51,135,49],[144,52,135,50],[144,53,135,51],[145,8,137,6,"_defineProperty"],[145,23,137,21],[145,24,137,22],[145,28,137,26],[145,30,137,28],[145,40,137,38],[145,42,137,40],[145,47,137,45],[145,48,137,46],[145,49,137,47],[146,8,139,6,"_defineProperty"],[146,23,139,21],[146,24,139,22],[146,28,139,26],[146,30,139,28],[146,39,139,37],[146,41,139,39],[146,46,139,44],[146,47,139,45],[146,48,139,46],[147,8,141,6,"_defineProperty"],[147,23,141,21],[147,24,141,22],[147,28,141,26],[147,30,141,28],[147,55,141,53],[147,57,141,55],[147,62,141,60],[147,63,141,61],[147,64,141,62],[148,8,143,6,"_defineProperty"],[148,23,143,21],[148,24,143,22],[148,28,143,26],[148,30,143,28],[148,53,143,51],[148,55,143,53,"event"],[148,60,143,58],[148,64,143,62],[149,10,144,8],[149,14,144,12,"event"],[149,19,144,17],[149,20,144,18,"nativeEvent"],[149,31,144,29],[149,32,144,30,"handlerTag"],[149,42,144,40],[149,47,144,45],[149,51,144,49],[149,52,144,50,"handlerTag"],[149,62,144,60],[149,64,144,62],[150,12,145,10],[150,16,145,14],[150,23,145,21],[150,27,145,25],[150,28,145,26,"props"],[150,33,145,31],[150,34,145,32,"onGestureEvent"],[150,48,145,46],[150,53,145,51],[150,63,145,61],[150,65,145,63],[151,14,146,12],[151,18,146,16,"_this$props$onGesture"],[151,39,146,37],[151,41,146,39,"_this$props"],[151,52,146,50],[152,14,148,12],[152,15,148,13,"_this$props$onGesture"],[152,36,148,34],[152,39,148,37],[152,40,148,38,"_this$props"],[152,51,148,49],[152,54,148,52],[152,58,148,56],[152,59,148,57,"props"],[152,64,148,62],[152,66,148,64,"onGestureEvent"],[152,80,148,78],[152,86,148,84],[152,90,148,88],[152,94,148,92,"_this$props$onGesture"],[152,115,148,113],[152,120,148,118],[152,125,148,123],[152,126,148,124],[152,129,148,127],[152,134,148,132],[152,135,148,133],[152,138,148,136,"_this$props$onGesture"],[152,159,148,157],[152,160,148,158,"call"],[152,164,148,162],[152,165,148,163,"_this$props"],[152,176,148,174],[152,178,148,176,"event"],[152,183,148,181],[152,184,148,182],[153,12,149,10],[154,10,150,8],[154,11,150,9],[154,17,150,15],[155,12,151,10],[155,16,151,14,"_this$props$onGesture2"],[155,38,151,36],[155,40,151,38,"_this$props2"],[155,52,151,50],[156,12,153,10],[156,13,153,11,"_this$props$onGesture2"],[156,35,153,33],[156,38,153,36],[156,39,153,37,"_this$props2"],[156,51,153,49],[156,54,153,52],[156,58,153,56],[156,59,153,57,"props"],[156,64,153,62],[156,66,153,64,"onGestureHandlerEvent"],[156,87,153,85],[156,93,153,91],[156,97,153,95],[156,101,153,99,"_this$props$onGesture2"],[156,123,153,121],[156,128,153,126],[156,133,153,131],[156,134,153,132],[156,137,153,135],[156,142,153,140],[156,143,153,141],[156,146,153,144,"_this$props$onGesture2"],[156,168,153,166],[156,169,153,167,"call"],[156,173,153,171],[156,174,153,172,"_this$props2"],[156,186,153,184],[156,188,153,186,"event"],[156,193,153,191],[156,194,153,192],[157,10,154,8],[158,8,155,6],[158,9,155,7],[158,10,155,8],[159,8,157,6,"_defineProperty"],[159,23,157,21],[159,24,157,22],[159,28,157,26],[159,30,157,28],[159,59,157,57],[159,61,157,59,"event"],[159,66,157,64],[159,70,157,68],[160,10,158,8],[160,14,158,12,"event"],[160,19,158,17],[160,20,158,18,"nativeEvent"],[160,31,158,29],[160,32,158,30,"handlerTag"],[160,42,158,40],[160,47,158,45],[160,51,158,49],[160,52,158,50,"handlerTag"],[160,62,158,60],[160,64,158,62],[161,12,159,10],[161,16,159,14],[161,23,159,21],[161,27,159,25],[161,28,159,26,"props"],[161,33,159,31],[161,34,159,32,"onHandlerStateChange"],[161,54,159,52],[161,59,159,57],[161,69,159,67],[161,71,159,69],[162,14,160,12],[162,18,160,16,"_this$props$onHandler"],[162,39,160,37],[162,41,160,39,"_this$props3"],[162,53,160,51],[163,14,162,12],[163,15,162,13,"_this$props$onHandler"],[163,36,162,34],[163,39,162,37],[163,40,162,38,"_this$props3"],[163,52,162,50],[163,55,162,53],[163,59,162,57],[163,60,162,58,"props"],[163,65,162,63],[163,67,162,65,"onHandlerStateChange"],[163,87,162,85],[163,93,162,91],[163,97,162,95],[163,101,162,99,"_this$props$onHandler"],[163,122,162,120],[163,127,162,125],[163,132,162,130],[163,133,162,131],[163,136,162,134],[163,141,162,139],[163,142,162,140],[163,145,162,143,"_this$props$onHandler"],[163,166,162,164],[163,167,162,165,"call"],[163,171,162,169],[163,172,162,170,"_this$props3"],[163,184,162,182],[163,186,162,184,"event"],[163,191,162,189],[163,192,162,190],[164,12,163,10],[165,12,165,10],[165,18,165,16,"state"],[165,23,165,21],[165,26,165,24,"event"],[165,31,165,29],[165,32,165,30,"nativeEvent"],[165,43,165,41],[165,44,165,42,"state"],[165,49,165,47],[166,12,166,10],[166,18,166,16,"stateEventName"],[166,32,166,30],[166,35,166,33,"stateToPropMappings"],[166,54,166,52],[166,55,166,53,"state"],[166,60,166,58],[166,61,166,59],[167,12,167,10],[167,18,167,16,"eventHandler"],[167,30,167,28],[167,33,167,31,"stateEventName"],[167,47,167,45],[167,51,167,49],[167,55,167,53],[167,56,167,54,"props"],[167,61,167,59],[167,62,167,60,"stateEventName"],[167,76,167,74],[167,77,167,75],[168,12,169,10],[168,16,169,14,"eventHandler"],[168,28,169,26],[168,32,169,30],[168,39,169,37,"eventHandler"],[168,51,169,49],[168,56,169,54],[168,66,169,64],[168,68,169,66],[169,14,170,12,"eventHandler"],[169,26,170,24],[169,27,170,25,"event"],[169,32,170,30],[169,33,170,31],[170,12,171,10],[171,10,172,8],[171,11,172,9],[171,17,172,15],[172,12,173,10],[172,16,173,14,"_this$props$onGesture3"],[172,38,173,36],[172,40,173,38,"_this$props4"],[172,52,173,50],[173,12,175,10],[173,13,175,11,"_this$props$onGesture3"],[173,35,175,33],[173,38,175,36],[173,39,175,37,"_this$props4"],[173,51,175,49],[173,54,175,52],[173,58,175,56],[173,59,175,57,"props"],[173,64,175,62],[173,66,175,64,"onGestureHandlerStateChange"],[173,93,175,91],[173,99,175,97],[173,103,175,101],[173,107,175,105,"_this$props$onGesture3"],[173,129,175,127],[173,134,175,132],[173,139,175,137],[173,140,175,138],[173,143,175,141],[173,148,175,146],[173,149,175,147],[173,152,175,150,"_this$props$onGesture3"],[173,174,175,172],[173,175,175,173,"call"],[173,179,175,177],[173,180,175,178,"_this$props4"],[173,192,175,190],[173,194,175,192,"event"],[173,199,175,197],[173,200,175,198],[174,10,176,8],[175,8,177,6],[175,9,177,7],[175,10,177,8],[176,8,179,6,"_defineProperty"],[176,23,179,21],[176,24,179,22],[176,28,179,26],[176,30,179,28],[176,42,179,40],[176,44,179,42,"node"],[176,48,179,46],[176,52,179,50],[177,10,180,8],[177,14,180,12,"_props"],[177,20,180,18],[178,10,182,8],[178,14,182,12],[178,15,182,13,"viewNode"],[178,23,182,21],[178,26,182,24,"node"],[178,30,182,28],[179,10,183,8],[179,16,183,14,"child"],[179,21,183,19],[179,24,183,22,"React"],[179,29,183,27],[179,30,183,28,"Children"],[179,38,183,36],[179,39,183,37,"only"],[179,43,183,41],[179,44,183,42],[179,48,183,46],[179,49,183,47,"props"],[179,54,183,52],[179,55,183,53,"children"],[179,63,183,61],[179,64,183,62],[179,65,183,63],[179,66,183,64],[180,10,184,8],[182,10,186,8],[182,16,186,14,"ref"],[182,19,186,17],[182,22,186,20],[182,26,186,20,"isReact19"],[182,43,186,29],[182,45,186,30],[182,46,186,31],[182,49,186,34],[182,50,186,35,"_props"],[182,56,186,41],[182,59,186,44,"child"],[182,64,186,49],[182,65,186,50,"props"],[182,70,186,55],[182,76,186,61],[182,80,186,65],[182,84,186,69,"_props"],[182,90,186,75],[182,95,186,80],[182,100,186,85],[182,101,186,86],[182,104,186,89],[182,109,186,94],[182,110,186,95],[182,113,186,98,"_props"],[182,119,186,104],[182,120,186,105,"ref"],[182,123,186,108],[182,126,186,111,"child"],[182,131,186,116],[182,136,186,121],[182,140,186,125],[182,144,186,129,"child"],[182,149,186,134],[182,154,186,139],[182,159,186,144],[182,160,186,145],[182,163,186,148],[182,168,186,153],[182,169,186,154],[182,172,186,157,"child"],[182,177,186,162],[182,178,186,163,"ref"],[182,181,186,166],[183,10,188,8],[183,14,188,12],[183,15,188,13,"ref"],[183,18,188,16],[183,20,188,18],[184,12,189,10],[185,10,190,8],[186,10,192,8],[186,14,192,12],[186,21,192,19,"ref"],[186,24,192,22],[186,29,192,27],[186,39,192,37],[186,41,192,39],[187,12,193,10,"ref"],[187,15,193,13],[187,16,193,14,"node"],[187,20,193,18],[187,21,193,19],[188,10,194,8],[188,11,194,9],[188,17,194,15],[189,12,195,10,"ref"],[189,15,195,13],[189,16,195,14,"current"],[189,23,195,21],[189,26,195,24,"node"],[189,30,195,28],[190,10,196,8],[191,8,197,6],[191,9,197,7],[191,10,197,8],[192,8,199,6,"_defineProperty"],[192,23,199,21],[192,24,199,22],[192,28,199,26],[192,30,199,28],[192,52,199,50],[192,54,199,52,"newConfig"],[192,63,199,61],[192,67,199,65],[193,10,200,8],[193,14,200,12],[193,15,200,13,"config"],[193,21,200,19],[193,24,200,22,"newConfig"],[193,33,200,31],[194,10,201,8,"RNGestureHandlerModule"],[194,41,201,30],[194,42,201,31,"createGestureHandler"],[194,62,201,51],[194,63,201,52,"name"],[194,67,201,56],[194,69,201,58],[194,73,201,62],[194,74,201,63,"handlerTag"],[194,84,201,73],[194,86,201,75,"newConfig"],[194,95,201,84],[194,96,201,85],[195,8,202,6],[195,9,202,7],[195,10,202,8],[196,8,204,6,"_defineProperty"],[196,23,204,21],[196,24,204,22],[196,28,204,26],[196,30,204,28],[196,52,204,50],[196,54,204,52,"newViewTag"],[196,64,204,62],[196,68,204,66],[197,10,205,8],[197,14,205,12],[197,15,205,13,"viewTag"],[197,22,205,20],[197,25,205,23,"newViewTag"],[197,35,205,33],[198,10,207,8],[198,14,207,12,"Platform"],[198,31,207,20],[198,32,207,21,"OS"],[198,34,207,23],[198,39,207,28],[198,44,207,33],[198,46,207,35],[199,12,208,10],[200,12,209,10,"RNGestureHandlerModule"],[200,43,209,32],[200,44,209,33,"attachGestureHandler"],[200,64,209,53],[200,65,209,54],[200,69,209,58],[200,70,209,59,"handlerTag"],[200,80,209,69],[200,82,209,71,"newViewTag"],[200,92,209,81],[200,94,209,83,"ActionType"],[200,116,209,93],[200,117,209,94,"JS_FUNCTION_OLD_API"],[200,136,209,113],[201,12,209,115],[202,12,210,10],[202,16,210,14],[202,17,210,15,"propsRef"],[202,25,210,23],[202,26,210,24],[203,10,211,8],[203,11,211,9],[203,17,211,15],[204,12,212,10],[204,16,212,10,"registerOldGestureHandler"],[204,59,212,35],[204,61,212,36],[204,65,212,40],[204,66,212,41,"handlerTag"],[204,76,212,51],[204,78,212,53],[205,14,213,12,"onGestureEvent"],[205,28,213,26],[205,30,213,28],[205,34,213,32],[205,35,213,33,"onGestureHandlerEvent"],[205,56,213,54],[206,14,214,12,"onGestureStateChange"],[206,34,214,32],[206,36,214,34],[206,40,214,38],[206,41,214,39,"onGestureHandlerStateChange"],[207,12,215,10],[207,13,215,11],[207,14,215,12],[208,12,217,10],[208,18,217,16,"actionType"],[208,28,217,26],[208,31,217,29],[208,32,217,30],[208,38,217,36],[209,14,218,12],[209,18,218,16,"_this$props5"],[209,30,218,28],[209,32,218,30,"_this$props6"],[209,44,218,42],[210,14,220,12],[210,20,220,18,"onGestureEvent"],[210,34,220,32],[210,37,220,35],[210,38,220,36,"_this$props5"],[210,50,220,48],[210,53,220,51],[210,57,220,55],[210,58,220,56,"props"],[210,63,220,61],[210,69,220,67],[210,73,220,71],[210,77,220,75,"_this$props5"],[210,89,220,87],[210,94,220,92],[210,99,220,97],[210,100,220,98],[210,103,220,101],[210,108,220,106],[210,109,220,107],[210,112,220,110,"_this$props5"],[210,124,220,122],[210,125,220,123,"onGestureEvent"],[210,139,220,137],[211,14,221,12],[211,20,221,18,"isGestureHandlerWorklet"],[211,43,221,41],[211,46,221,44,"onGestureEvent"],[211,60,221,58],[211,65,221,63],[211,74,221,72],[211,78,221,76,"onGestureEvent"],[211,92,221,90],[211,96,221,94],[211,117,221,115],[211,121,221,119,"onGestureEvent"],[211,135,221,133],[211,136,221,134],[212,14,222,12],[212,20,222,18,"onHandlerStateChange"],[212,40,222,38],[212,43,222,41],[212,44,222,42,"_this$props6"],[212,56,222,54],[212,59,222,57],[212,63,222,61],[212,64,222,62,"props"],[212,69,222,67],[212,75,222,73],[212,79,222,77],[212,83,222,81,"_this$props6"],[212,95,222,93],[212,100,222,98],[212,105,222,103],[212,106,222,104],[212,109,222,107],[212,114,222,112],[212,115,222,113],[212,118,222,116,"_this$props6"],[212,130,222,128],[212,131,222,129,"onHandlerStateChange"],[212,151,222,149],[213,14,223,12],[213,20,223,18,"isStateChangeHandlerWorklet"],[213,47,223,45],[213,50,223,48,"onHandlerStateChange"],[213,70,223,68],[213,75,223,73],[213,84,223,82],[213,88,223,86,"onHandlerStateChange"],[213,108,223,106],[213,112,223,110],[213,133,223,131],[213,137,223,135,"onHandlerStateChange"],[213,157,223,155],[213,158,223,156],[214,14,224,12],[214,20,224,18,"isReanimatedHandler"],[214,39,224,37],[214,42,224,40,"isGestureHandlerWorklet"],[214,65,224,63],[214,69,224,67,"isStateChangeHandlerWorklet"],[214,96,224,94],[215,14,226,12],[215,18,226,16,"isReanimatedHandler"],[215,37,226,35],[215,39,226,37],[216,16,227,14],[217,16,228,14],[217,23,228,21,"ActionType"],[217,45,228,31],[217,46,228,32,"REANIMATED_WORKLET"],[217,64,228,50],[218,14,229,12],[218,15,229,13],[218,21,229,19],[218,25,229,23,"onGestureEvent"],[218,39,229,37],[218,43,229,41],[218,55,229,53],[218,59,229,57,"onGestureEvent"],[218,73,229,71],[218,75,229,73],[219,16,230,14],[220,16,231,14],[220,23,231,21,"ActionType"],[220,45,231,31],[220,46,231,32,"NATIVE_ANIMATED_EVENT"],[220,67,231,53],[221,14,232,12],[221,15,232,13],[221,21,232,19],[222,16,233,14],[223,16,234,14],[223,23,234,21,"ActionType"],[223,45,234,31],[223,46,234,32,"JS_FUNCTION_OLD_API"],[223,65,234,51],[224,14,235,12],[225,12,236,10],[225,13,236,11],[225,15,236,13],[225,16,236,14],[226,12,238,10,"RNGestureHandlerModule"],[226,43,238,32],[226,44,238,33,"attachGestureHandler"],[226,64,238,53],[226,65,238,54],[226,69,238,58],[226,70,238,59,"handlerTag"],[226,80,238,69],[226,82,238,71,"newViewTag"],[226,92,238,81],[226,94,238,83,"actionType"],[226,104,238,93],[226,105,238,94],[227,10,239,8],[228,10,241,8],[228,14,241,8,"scheduleFlushOperations"],[228,44,241,31],[228,46,241,32],[228,47,241,33],[229,10,242,8],[229,14,242,8,"ghQueueMicrotask"],[229,48,242,24],[229,50,242,25],[229,56,242,31],[230,12,243,10,"MountRegistry"],[230,40,243,23],[230,41,243,24,"gestureHandlerWillMount"],[230,64,243,47],[230,65,243,48],[230,69,243,52],[230,70,243,53],[231,10,244,8],[231,11,244,9],[231,12,244,10],[232,8,245,6],[232,9,245,7],[232,10,245,8],[233,8,247,6,"_defineProperty"],[233,23,247,21],[233,24,247,22],[233,28,247,26],[233,30,247,28],[233,52,247,50],[233,54,247,52,"newConfig"],[233,63,247,61],[233,67,247,65],[234,10,248,8],[234,14,248,12],[234,15,248,13,"config"],[234,21,248,19],[234,24,248,22,"newConfig"],[234,33,248,31],[235,10,249,8,"RNGestureHandlerModule"],[235,41,249,30],[235,42,249,31,"updateGestureHandler"],[235,62,249,51],[235,63,249,52],[235,67,249,56],[235,68,249,57,"handlerTag"],[235,78,249,67],[235,80,249,69,"newConfig"],[235,89,249,78],[235,90,249,79],[236,10,250,8],[236,14,250,8,"scheduleFlushOperations"],[236,44,250,31],[236,46,250,32],[236,47,250,33],[237,8,251,6],[237,9,251,7],[237,10,251,8],[238,8,253,6],[238,12,253,10],[238,13,253,11,"handlerTag"],[238,23,253,21],[238,26,253,24],[238,30,253,24,"getNextHandlerTag"],[238,66,253,41],[238,68,253,42],[238,69,253,43],[239,8,254,6],[239,12,254,10],[239,13,254,11,"config"],[239,19,254,17],[239,22,254,20],[239,23,254,21],[239,24,254,22],[240,8,255,6],[240,12,255,10],[240,13,255,11,"propsRef"],[240,21,255,19],[240,24,255,22],[240,37,255,35,"React"],[240,42,255,40],[240,43,255,41,"createRef"],[240,52,255,50],[240,53,255,51],[240,54,255,52],[241,8,256,6],[241,12,256,10],[241,13,256,11,"isMountedRef"],[241,25,256,23],[241,28,256,26],[241,41,256,39,"React"],[241,46,256,44],[241,47,256,45,"createRef"],[241,56,256,54],[241,57,256,55],[241,58,256,56],[242,8,257,6],[242,12,257,10],[242,13,257,11,"state"],[242,18,257,16],[242,21,257,19],[243,10,258,8,"allowTouches"],[244,8,259,6],[244,9,259,7],[245,8,261,6],[245,12,261,10,"props"],[245,17,261,15],[245,18,261,16,"id"],[245,20,261,18],[245,22,261,20],[246,10,262,8],[246,14,262,12,"handlerIDToTag"],[246,46,262,26],[246,47,262,27,"props"],[246,52,262,32],[246,53,262,33,"id"],[246,55,262,35],[246,56,262,36],[246,61,262,41,"undefined"],[246,70,262,50],[246,72,262,52],[247,12,263,10],[247,18,263,16],[247,22,263,20,"Error"],[247,27,263,25],[247,28,263,26],[247,48,263,46,"props"],[247,53,263,51],[247,54,263,52,"id"],[247,56,263,54],[247,78,263,76],[247,79,263,77],[248,10,264,8],[249,10,266,8,"handlerIDToTag"],[249,42,266,22],[249,43,266,23,"props"],[249,48,266,28],[249,49,266,29,"id"],[249,51,266,31],[249,52,266,32],[249,55,266,35],[249,59,266,39],[249,60,266,40,"handlerTag"],[249,70,266,50],[250,8,267,6],[251,6,268,4],[252,6,270,4,"componentDidMount"],[252,23,270,21,"componentDidMount"],[252,24,270,21],[252,26,270,24],[253,8,271,6],[253,14,271,12,"props"],[253,19,271,17],[253,22,271,20],[253,26,271,24],[253,27,271,25,"props"],[253,32,271,30],[254,8,272,6],[254,12,272,10],[254,13,272,11,"isMountedRef"],[254,25,272,23],[254,26,272,24,"current"],[254,33,272,31],[254,36,272,34],[254,40,272,38],[255,8,274,6],[255,12,274,10,"DEV_ON_ANDROID"],[255,26,274,24],[255,28,274,26],[256,10,275,8],[256,14,275,12],[256,15,275,13,"inspectorToggleListener"],[256,38,275,36],[256,41,275,39,"DeviceEventEmitter"],[256,68,275,57],[256,69,275,58,"addListener"],[256,80,275,69],[256,81,275,70],[256,105,275,94],[256,107,275,96],[256,113,275,102],[257,12,276,10],[257,16,276,14],[257,17,276,15,"setState"],[257,25,276,23],[257,26,276,24,"_"],[257,27,276,25],[257,32,276,30],[258,14,277,12,"allowTouches"],[259,12,278,10],[259,13,278,11],[259,14,278,12],[259,15,278,13],[260,12,279,10],[260,16,279,14],[260,17,279,15,"update"],[260,23,279,21],[260,24,279,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[260,51,279,49],[260,52,279,50],[261,10,280,8],[261,11,280,9],[261,12,280,10],[262,8,281,6],[263,8,283,6],[263,12,283,10,"hasUnresolvedRefs"],[263,29,283,27],[263,30,283,28,"props"],[263,35,283,33],[263,36,283,34],[263,38,283,36],[264,10,284,8],[265,10,285,8],[266,10,286,8],[267,10,287,8],[268,10,288,8],[269,10,289,8],[270,10,290,8],[270,14,290,8,"ghQueueMicrotask"],[270,48,290,24],[270,50,290,25],[270,56,290,31],[271,12,291,10],[271,16,291,14],[271,17,291,15,"update"],[271,23,291,21],[271,24,291,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[271,51,291,49],[271,52,291,50],[272,10,292,8],[272,11,292,9],[272,12,292,10],[273,8,293,6],[274,8,295,6],[274,12,295,10],[274,13,295,11,"createGestureHandler"],[274,33,295,31],[274,34,295,32],[274,38,295,32,"filterConfig"],[274,57,295,44],[274,59,295,45,"transformProps"],[274,73,295,59],[274,76,295,62,"transformProps"],[274,90,295,76],[274,91,295,77],[274,95,295,81],[274,96,295,82,"props"],[274,101,295,87],[274,102,295,88],[274,105,295,91],[274,109,295,95],[274,110,295,96,"props"],[274,115,295,101],[274,117,295,103],[274,118,295,104],[274,121,295,107,"allowedProps"],[274,133,295,119],[274,135,295,121],[274,138,295,124,"customNativeProps"],[274,155,295,141],[274,156,295,142],[274,158,295,144,"config"],[274,164,295,150],[274,165,295,151],[274,166,295,152],[275,8,297,6],[275,12,297,10],[275,13,297,11],[275,17,297,15],[275,18,297,16,"viewNode"],[275,26,297,24],[275,28,297,26],[276,10,298,8],[276,16,298,14],[276,20,298,18,"Error"],[276,25,298,23],[276,26,298,24],[276,73,298,71,"Handler"],[276,80,298,78],[276,81,298,79,"displayName"],[276,92,298,90],[276,152,298,150],[276,153,298,151],[277,8,299,6],[278,8,301,6],[278,12,301,10],[278,13,301,11,"attachGestureHandler"],[278,33,301,31],[278,34,301,32],[278,38,301,32,"findNodeHandle"],[278,61,301,46],[278,63,301,47],[278,67,301,51],[278,68,301,52,"viewNode"],[278,76,301,60],[278,77,301,61],[278,78,301,62],[278,79,301,63],[278,80,301,64],[279,6,302,4],[280,6,304,4,"componentDidUpdate"],[280,24,304,22,"componentDidUpdate"],[280,25,304,22],[280,27,304,25],[281,8,305,6],[281,14,305,12,"viewTag"],[281,21,305,19],[281,24,305,22],[281,28,305,22,"findNodeHandle"],[281,51,305,36],[281,53,305,37],[281,57,305,41],[281,58,305,42,"viewNode"],[281,66,305,50],[281,67,305,51],[282,8,307,6],[282,12,307,10],[282,16,307,14],[282,17,307,15,"viewTag"],[282,24,307,22],[282,29,307,27,"viewTag"],[282,36,307,34],[282,38,307,36],[283,10,308,8],[283,14,308,12],[283,15,308,13,"attachGestureHandler"],[283,35,308,33],[283,36,308,34,"viewTag"],[283,43,308,41],[283,44,308,42],[283,45,308,43],[283,46,308,44],[284,8,309,6],[285,8,311,6],[285,12,311,10],[285,13,311,11,"update"],[285,19,311,17],[285,20,311,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[285,47,311,45],[285,48,311,46],[286,6,312,4],[287,6,314,4,"componentWillUnmount"],[287,26,314,24,"componentWillUnmount"],[287,27,314,24],[287,29,314,27],[288,8,315,6],[288,12,315,10,"_this$inspectorToggle"],[288,33,315,31],[289,8,317,6],[289,9,317,7,"_this$inspectorToggle"],[289,30,317,28],[289,33,317,31],[289,37,317,35],[289,38,317,36,"inspectorToggleListener"],[289,61,317,59],[289,67,317,65],[289,71,317,69],[289,75,317,73,"_this$inspectorToggle"],[289,96,317,94],[289,101,317,99],[289,106,317,104],[289,107,317,105],[289,110,317,108],[289,115,317,113],[289,116,317,114],[289,119,317,117,"_this$inspectorToggle"],[289,140,317,138],[289,141,317,139,"remove"],[289,147,317,145],[289,148,317,146],[289,149,317,147],[290,8,318,6],[290,12,318,10],[290,13,318,11,"isMountedRef"],[290,25,318,23],[290,26,318,24,"current"],[290,33,318,31],[290,36,318,34],[290,41,318,39],[291,8,320,6],[291,12,320,10,"Platform"],[291,29,320,18],[291,30,320,19,"OS"],[291,32,320,21],[291,37,320,26],[291,42,320,31],[291,44,320,33],[292,10,321,8],[292,14,321,8,"unregisterOldGestureHandler"],[292,59,321,35],[292,61,321,36],[292,65,321,40],[292,66,321,41,"handlerTag"],[292,76,321,51],[292,77,321,52],[293,8,322,6],[294,8,324,6,"RNGestureHandlerModule"],[294,39,324,28],[294,40,324,29,"dropGestureHandler"],[294,58,324,47],[294,59,324,48],[294,63,324,52],[294,64,324,53,"handlerTag"],[294,74,324,63],[294,75,324,64],[295,8,325,6],[295,12,325,6,"scheduleFlushOperations"],[295,42,325,29],[295,44,325,30],[295,45,325,31],[295,46,325,32],[295,47,325,33],[297,8,327,6],[297,14,327,12,"handlerID"],[297,23,327,21],[297,26,327,24],[297,30,327,28],[297,31,327,29,"props"],[297,36,327,34],[297,37,327,35,"id"],[297,39,327,37],[298,8,329,6],[298,12,329,10,"handlerID"],[298,21,329,19],[298,23,329,21],[299,10,330,8],[300,10,331,8],[300,17,331,15,"handlerIDToTag"],[300,49,331,29],[300,50,331,30,"handlerID"],[300,59,331,39],[300,60,331,40],[301,8,332,6],[302,8,334,6,"MountRegistry"],[302,36,334,19],[302,37,334,20,"gestureHandlerWillUnmount"],[302,62,334,45],[302,63,334,46],[302,67,334,50],[302,68,334,51],[303,6,335,4],[304,6,337,4,"update"],[304,12,337,10,"update"],[304,13,337,11,"remainingTries"],[304,27,337,25],[304,29,337,27],[305,8,338,6],[305,12,338,10],[305,13,338,11],[305,17,338,15],[305,18,338,16,"isMountedRef"],[305,30,338,28],[305,31,338,29,"current"],[305,38,338,36],[305,40,338,38],[306,10,339,8],[307,8,340,6],[308,8,342,6],[308,14,342,12,"props"],[308,19,342,17],[308,22,342,20],[308,26,342,24],[308,27,342,25,"props"],[308,32,342,30],[308,33,342,31],[308,34,342,32],[309,8,343,6],[310,8,344,6],[312,8,346,6],[312,12,346,10,"hasUnresolvedRefs"],[312,29,346,27],[312,30,346,28,"props"],[312,35,346,33],[312,36,346,34],[312,40,346,38,"remainingTries"],[312,54,346,52],[312,57,346,55],[312,58,346,56],[312,60,346,58],[313,10,347,8],[313,14,347,8,"ghQueueMicrotask"],[313,48,347,24],[313,50,347,25],[313,56,347,31],[314,12,348,10],[314,16,348,14],[314,17,348,15,"update"],[314,23,348,21],[314,24,348,22,"remainingTries"],[314,38,348,36],[314,41,348,39],[314,42,348,40],[314,43,348,41],[315,10,349,8],[315,11,349,9],[315,12,349,10],[316,8,350,6],[316,9,350,7],[316,15,350,13],[317,10,351,8],[317,16,351,14,"newConfig"],[317,25,351,23],[317,28,351,26],[317,32,351,26,"filterConfig"],[317,51,351,38],[317,53,351,39,"transformProps"],[317,67,351,53],[317,70,351,56,"transformProps"],[317,84,351,70],[317,85,351,71],[317,89,351,75],[317,90,351,76,"props"],[317,95,351,81],[317,96,351,82],[317,99,351,85],[317,103,351,89],[317,104,351,90,"props"],[317,109,351,95],[317,111,351,97],[317,112,351,98],[317,115,351,101,"allowedProps"],[317,127,351,113],[317,129,351,115],[317,132,351,118,"customNativeProps"],[317,149,351,135],[317,150,351,136],[317,152,351,138,"config"],[317,158,351,144],[317,159,351,145],[318,10,353,8],[318,14,353,12],[318,15,353,13],[318,19,353,13,"deepEqual"],[318,36,353,22],[318,38,353,23],[318,42,353,27],[318,43,353,28,"config"],[318,49,353,34],[318,51,353,36,"newConfig"],[318,60,353,45],[318,61,353,46],[318,63,353,48],[319,12,354,10],[319,16,354,14],[319,17,354,15,"updateGestureHandler"],[319,37,354,35],[319,38,354,36,"newConfig"],[319,47,354,45],[319,48,354,46],[320,10,355,8],[321,8,356,6],[322,6,357,4],[323,6,359,4,"setNativeProps"],[323,20,359,18,"setNativeProps"],[323,21,359,19,"updates"],[323,28,359,26],[323,30,359,28],[324,8,360,6],[324,14,360,12,"mergedProps"],[324,25,360,23],[324,28,360,26],[325,10,360,28],[325,13,360,31],[325,17,360,35],[325,18,360,36,"props"],[325,23,360,41],[326,10,361,8],[326,13,361,11,"updates"],[327,8,362,6],[327,9,362,7],[328,8,363,6],[328,14,363,12,"newConfig"],[328,23,363,21],[328,26,363,24],[328,30,363,24,"filterConfig"],[328,49,363,36],[328,51,363,37,"transformProps"],[328,65,363,51],[328,68,363,54,"transformProps"],[328,82,363,68],[328,83,363,69,"mergedProps"],[328,94,363,80],[328,95,363,81],[328,98,363,84,"mergedProps"],[328,109,363,95],[328,111,363,97],[328,112,363,98],[328,115,363,101,"allowedProps"],[328,127,363,113],[328,129,363,115],[328,132,363,118,"customNativeProps"],[328,149,363,135],[328,150,363,136],[328,152,363,138,"config"],[328,158,363,144],[328,159,363,145],[329,8,364,6],[329,12,364,10],[329,13,364,11,"updateGestureHandler"],[329,33,364,31],[329,34,364,32,"newConfig"],[329,43,364,41],[329,44,364,42],[330,6,365,4],[331,6,367,4,"render"],[331,12,367,10,"render"],[331,13,367,10],[331,15,367,13],[332,8,368,6],[332,12,368,10,"_this$props$testID"],[332,30,368,28],[333,8,370,6],[333,12,370,10,"__DEV__"],[333,19,370,17],[333,23,370,21],[333,24,370,22],[333,28,370,26],[333,29,370,27,"context"],[333,36,370,34],[333,40,370,38],[333,41,370,39],[333,45,370,39,"isTestEnv"],[333,62,370,48],[333,64,370,49],[333,65,370,50],[333,69,370,54,"Platform"],[333,86,370,62],[333,87,370,63,"OS"],[333,89,370,65],[333,94,370,70],[333,99,370,75],[333,101,370,77],[334,10,371,8],[334,16,371,14],[334,20,371,18,"Error"],[334,25,371,23],[334,26,371,24,"name"],[334,30,371,28],[334,33,371,31],[334,234,371,232],[334,235,371,233],[335,8,372,6],[336,8,374,6],[336,12,374,10,"gestureEventHandler"],[336,31,374,29],[336,34,374,32],[336,38,374,36],[336,39,374,37,"onGestureHandlerEvent"],[336,60,374,58],[336,61,374,59],[336,62,374,60],[338,8,376,6],[338,14,376,12],[339,10,377,8,"onGestureEvent"],[339,24,377,22],[340,10,378,8,"onGestureHandlerEvent"],[341,8,379,6],[341,9,379,7],[341,12,379,10],[341,16,379,14],[341,17,379,15,"props"],[341,22,379,20],[342,8,381,6],[342,12,381,10,"onGestureEvent"],[342,26,381,24],[342,30,381,28],[342,37,381,35,"onGestureEvent"],[342,51,381,49],[342,56,381,54],[342,66,381,64],[342,68,381,66],[343,10,382,8],[344,10,383,8],[345,10,384,8],[346,10,385,8],[346,14,385,12,"onGestureHandlerEvent"],[346,35,385,33],[346,37,385,35],[347,12,386,10],[347,18,386,16],[347,22,386,20,"Error"],[347,27,386,25],[347,28,386,26],[347,101,386,99],[347,102,386,100],[348,10,387,8],[349,10,389,8,"gestureEventHandler"],[349,29,389,27],[349,32,389,30,"onGestureEvent"],[349,46,389,44],[350,8,390,6],[350,9,390,7],[350,15,390,13],[351,10,391,8],[351,14,391,12,"onGestureHandlerEvent"],[351,35,391,33],[351,39,391,37],[351,46,391,44,"onGestureHandlerEvent"],[351,67,391,65],[351,72,391,70],[351,82,391,80],[351,84,391,82],[352,12,392,10],[352,18,392,16],[352,22,392,20,"Error"],[352,27,392,25],[352,28,392,26],[352,101,392,99],[352,102,392,100],[353,10,393,8],[354,8,394,6],[355,8,396,6],[355,12,396,10,"gestureStateEventHandler"],[355,36,396,34],[355,39,396,37],[355,43,396,41],[355,44,396,42,"onGestureHandlerStateChange"],[355,71,396,69],[355,72,396,70],[355,73,396,71],[357,8,398,6],[357,14,398,12],[358,10,399,8,"onHandlerStateChange"],[358,30,399,28],[359,10,400,8,"onGestureHandlerStateChange"],[360,8,401,6],[360,9,401,7],[360,12,401,10],[360,16,401,14],[360,17,401,15,"props"],[360,22,401,20],[361,8,403,6],[361,12,403,10,"onHandlerStateChange"],[361,32,403,30],[361,36,403,34],[361,43,403,41,"onHandlerStateChange"],[361,63,403,61],[361,68,403,66],[361,78,403,76],[361,80,403,78],[362,10,404,8],[363,10,405,8],[364,10,406,8],[365,10,407,8],[365,14,407,12,"onGestureHandlerStateChange"],[365,41,407,39],[365,43,407,41],[366,12,408,10],[366,18,408,16],[366,22,408,20,"Error"],[366,27,408,25],[366,28,408,26],[366,101,408,99],[366,102,408,100],[367,10,409,8],[368,10,411,8,"gestureStateEventHandler"],[368,34,411,32],[368,37,411,35,"onHandlerStateChange"],[368,57,411,55],[369,8,412,6],[369,9,412,7],[369,15,412,13],[370,10,413,8],[370,14,413,12,"onGestureHandlerStateChange"],[370,41,413,39],[370,45,413,43],[370,52,413,50,"onGestureHandlerStateChange"],[370,79,413,77],[370,84,413,82],[370,94,413,92],[370,96,413,94],[371,12,414,10],[371,18,414,16],[371,22,414,20,"Error"],[371,27,414,25],[371,28,414,26],[371,101,414,99],[371,102,414,100],[372,10,415,8],[373,8,416,6],[374,8,418,6],[374,14,418,12,"events"],[374,20,418,18],[374,23,418,21],[375,10,419,8,"onGestureHandlerEvent"],[375,31,419,29],[375,33,419,31],[375,37,419,35],[375,38,419,36,"state"],[375,43,419,41],[375,44,419,42,"allowTouches"],[375,56,419,54],[375,59,419,57,"gestureEventHandler"],[375,78,419,76],[375,81,419,79,"undefined"],[375,90,419,88],[376,10,420,8,"onGestureHandlerStateChange"],[376,37,420,35],[376,39,420,37],[376,43,420,41],[376,44,420,42,"state"],[376,49,420,47],[376,50,420,48,"allowTouches"],[376,62,420,60],[376,65,420,63,"gestureStateEventHandler"],[376,89,420,87],[376,92,420,90,"undefined"],[377,8,421,6],[377,9,421,7],[378,8,422,6],[378,12,422,10],[378,13,422,11,"propsRef"],[378,21,422,19],[378,22,422,20,"current"],[378,29,422,27],[378,32,422,30,"events"],[378,38,422,36],[379,8,423,6],[379,12,423,10,"child"],[379,17,423,15],[379,20,423,18],[379,24,423,22],[380,8,425,6],[380,12,425,10],[381,10,426,8,"child"],[381,15,426,13],[381,18,426,16,"React"],[381,23,426,21],[381,24,426,22,"Children"],[381,32,426,30],[381,33,426,31,"only"],[381,37,426,35],[381,38,426,36],[381,42,426,40],[381,43,426,41,"props"],[381,48,426,46],[381,49,426,47,"children"],[381,57,426,55],[381,58,426,56],[382,8,427,6],[382,9,427,7],[382,10,427,8],[382,17,427,15,"e"],[382,18,427,16],[382,20,427,18],[383,10,428,8],[383,16,428,14],[383,20,428,18,"Error"],[383,25,428,23],[383,26,428,24],[383,30,428,24,"tagMessage"],[383,48,428,34],[383,50,428,35],[383,53,428,38,"name"],[383,57,428,42],[383,213,428,198],[383,214,428,199],[383,215,428,200],[384,8,429,6],[385,8,431,6],[385,12,431,10,"grandChildren"],[385,25,431,23],[385,28,431,26,"child"],[385,33,431,31],[385,34,431,32,"props"],[385,39,431,37],[385,40,431,38,"children"],[385,48,431,46],[386,8,433,6],[386,12,433,10,"__DEV__"],[386,19,433,17],[386,23,433,21,"child"],[386,28,433,26],[386,29,433,27,"type"],[386,33,433,31],[386,38,433,36,"child"],[386,43,433,41],[386,44,433,42,"type"],[386,48,433,46],[386,53,433,51],[386,77,433,75],[386,81,433,79,"child"],[386,86,433,84],[386,87,433,85,"type"],[386,91,433,89],[386,92,433,90,"name"],[386,96,433,94],[386,101,433,99],[386,107,433,105],[386,111,433,109,"child"],[386,116,433,114],[386,117,433,115,"type"],[386,121,433,119],[386,122,433,120,"displayName"],[386,133,433,131],[386,138,433,136],[386,144,433,142],[386,145,433,143],[386,147,433,145],[387,10,434,8,"grandChildren"],[387,23,434,21],[387,26,434,24,"React"],[387,31,434,29],[387,32,434,30,"Children"],[387,40,434,38],[387,41,434,39,"toArray"],[387,48,434,46],[387,49,434,47,"grandChildren"],[387,62,434,60],[387,63,434,61],[388,10,435,8,"grandChildren"],[388,23,435,21],[388,24,435,22,"push"],[388,28,435,26],[388,29,435,28],[388,42,435,41,"_ReactNativeCSSInterop"],[388,64,435,41],[388,65,435,41,"createInteropElement"],[388,85,435,41],[388,86,435,61,"PressabilityDebugView"],[388,130,435,82],[388,132,435,84],[389,12,436,10,"key"],[389,15,436,13],[389,17,436,15],[389,40,436,38],[390,12,437,10,"color"],[390,17,437,15],[390,19,437,17],[390,38,437,36],[391,12,438,10,"hitSlop"],[391,19,438,17],[391,21,438,19,"child"],[391,26,438,24],[391,27,438,25,"props"],[391,32,438,30],[391,33,438,31,"hitSlop"],[392,10,439,8],[392,11,439,9],[392,12,439,10],[392,13,439,11],[393,8,440,6],[394,8,442,6],[394,15,442,13],[394,28,442,26,"React"],[394,33,442,31],[394,34,442,32,"cloneElement"],[394,46,442,44],[394,47,442,45,"child"],[394,52,442,50],[394,54,442,52],[395,10,443,8,"ref"],[395,13,443,11],[395,15,443,13],[395,19,443,17],[395,20,443,18,"refHandler"],[395,30,443,28],[396,10,444,8,"collapsable"],[396,21,444,19],[396,23,444,21],[396,28,444,26],[397,10,445,8],[397,14,445,12],[397,18,445,12,"isTestEnv"],[397,35,445,21],[397,37,445,22],[397,38,445,23],[397,41,445,26],[398,12,446,10,"handlerType"],[398,23,446,21],[398,25,446,23,"name"],[398,29,446,27],[399,12,447,10,"handlerTag"],[399,22,447,20],[399,24,447,22],[399,28,447,26],[399,29,447,27,"handlerTag"],[399,39,447,37],[400,12,448,10,"enabled"],[400,19,448,17],[400,21,448,19],[400,25,448,23],[400,26,448,24,"props"],[400,31,448,29],[400,32,448,30,"enabled"],[401,10,449,8],[401,11,449,9],[401,14,449,12],[401,15,449,13],[401,16,449,14],[401,17,449,15],[402,10,450,8,"testID"],[402,16,450,14],[402,18,450,16],[402,19,450,17,"_this$props$testID"],[402,37,450,35],[402,40,450,38],[402,44,450,42],[402,45,450,43,"props"],[402,50,450,48],[402,51,450,49,"testID"],[402,57,450,55],[402,63,450,61],[402,67,450,65],[402,71,450,69,"_this$props$testID"],[402,89,450,87],[402,94,450,92],[402,99,450,97],[402,100,450,98],[402,103,450,101,"_this$props$testID"],[402,121,450,119],[402,124,450,122,"child"],[402,129,450,127],[402,130,450,128,"props"],[402,135,450,133],[402,136,450,134,"testID"],[402,142,450,140],[403,10,451,8],[403,13,451,11,"events"],[404,8,452,6],[404,9,452,7],[404,11,452,9,"grandChildren"],[404,24,452,22],[404,25,452,23],[405,6,453,4],[406,4,455,2],[407,4,457,2,"_defineProperty"],[407,19,457,17],[407,20,457,18,"Handler"],[407,27,457,25],[407,29,457,27],[407,42,457,40],[407,44,457,42,"name"],[407,48,457,46],[407,49,457,47],[408,4,459,2,"_defineProperty"],[408,19,459,17],[408,20,459,18,"Handler"],[408,27,459,25],[408,29,459,27],[408,42,459,40],[408,44,459,42,"GestureHandlerRootViewContext"],[408,82,459,71],[408,83,459,72],[409,4,461,2],[409,11,461,9,"Handler"],[409,18,461,16],[410,2,462,0],[411,0,462,1],[411,3]],"functionMap":{"names":["<global>","_defineProperty","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","_defineProperty$argument_2","ghQueueMicrotask$argument_0","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACE,iND;sCEkE;GFC;0CEC;GFC;8BGG;CHG;gCIE;CJG;2DKO;GLE;AMG;kBCE;qBCK,4BD;GDC;CNG;eSY;ECO;ICC;qDCiB;ODY;2DCE;ODoB;0CCE;ODkB;oDCE;ODG;oDCE;8BVa;WUmB;yBCM;SDE;ODC;oDCE;ODI;KDiB;IIE;gGTK;wBUC;YVE;SSE;yBDU;SCE;KJU;IME;KNQ;IOE;KPqB;IQE;yBLU;SKE;KRQ;ISE;KTM;IUE;KVsF;GDE;CTO"}},"type":"js/module"}]}