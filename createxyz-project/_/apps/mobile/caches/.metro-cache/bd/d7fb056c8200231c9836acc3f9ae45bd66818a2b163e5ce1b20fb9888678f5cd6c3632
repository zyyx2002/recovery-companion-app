{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":55,"index":96}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"]}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":41,"index":138}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"]}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":139},"end":{"line":4,"column":69,"index":208}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0=","exportNames":["*"]}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":209},"end":{"line":5,"column":79,"index":288}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s=","exportNames":["*"]}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":289},"end":{"line":6,"column":77,"index":366}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio=","exportNames":["*"]}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":367},"end":{"line":7,"column":101,"index":468}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c=","exportNames":["*"]}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":469},"end":{"line":8,"column":65,"index":534}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI=","exportNames":["*"]}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":535},"end":{"line":9,"column":59,"index":594}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4=","exportNames":["*"]}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":595},"end":{"line":10,"column":79,"index":674}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38=","exportNames":["*"]}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":675},"end":{"line":11,"column":81,"index":756}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k=","exportNames":["*"]}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":757},"end":{"line":12,"column":84,"index":841}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE=","exportNames":["*"]}},{"name":"../../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":842},"end":{"line":13,"column":71,"index":913}}],"key":"LRN+jz/5KqOYFnR82ORUXrazSTg=","exportNames":["*"]}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":914},"end":{"line":14,"column":49,"index":963}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":964},"end":{"line":15,"column":54,"index":1018}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":1019},"end":{"line":16,"column":50,"index":1069}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"]}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1070},"end":{"line":17,"column":57,"index":1127}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ALLOWED_PROPS = void 0;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _utils = require(_dependencyMap[2], \"../../../utils\");\n  var _gesture = require(_dependencyMap[3], \"../gesture\");\n  var _FlingGestureHandler = require(_dependencyMap[4], \"../../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[5], \"../../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[6], \"../../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[7], \"../../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[8], \"../../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[9], \"../hoverGesture\");\n  var _NativeViewGestureHandler = require(_dependencyMap[10], \"../../NativeViewGestureHandler\");\n  var _gestureHandlerCommon = require(_dependencyMap[11], \"../../gestureHandlerCommon\");\n  var _EnableNewWebImplementation = require(_dependencyMap[12], \"../../../EnableNewWebImplementation\");\n  var _getReactNativeVersion = require(_dependencyMap[13], \"../../../getReactNativeVersion\");\n  var _RNRenderer = require(_dependencyMap[14], \"../../../RNRenderer\");\n  var _react = require(_dependencyMap[15], \"react\");\n  var _reanimatedWrapper = require(_dependencyMap[16], \"../reanimatedWrapper\");\n  var _eventReceiver = require(_dependencyMap[17], \"../eventReceiver\");\n  const ALLOWED_PROPS = exports.ALLOWED_PROPS = [..._gestureHandlerCommon.baseGestureHandlerWithDetectorProps, ..._TapGestureHandler.tapGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerCustomNativeProps, ..._LongPressGestureHandler.longPressGestureHandlerProps, ..._ForceTouchGestureHandler.forceTouchGestureHandlerProps, ..._FlingGestureHandler.flingGestureHandlerProps, ..._hoverGesture.hoverGestureHandlerProps, ..._NativeViewGestureHandler.nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      var _ref$current$handlerT, _ref$current;\n\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return (_ref$current$handlerT = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.handlerTag) !== null && _ref$current$handlerT !== void 0 ? _ref$current$handlerT : -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    var _interactionGroup$map, _interactionGroup$map2;\n    return (_interactionGroup$map = interactionGroup === null || interactionGroup === void 0 ? void 0 : (_interactionGroup$map2 = interactionGroup.map(convertToHandlerTag)) === null || _interactionGroup$map2 === void 0 ? void 0 : _interactionGroup$map2.filter(tag => tag > 0)) !== null && _interactionGroup$map !== void 0 ? _interactionGroup$map : [];\n  }\n  function extractGestureRelations(gesture) {\n    const requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    const simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    const blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    } // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    const areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    const areSomeWorklets = gesture.handlers.isWorklet.includes(true); // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (_reanimatedWrapper.Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    const areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets; // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n\n    if (areAllNotWorklets && !(0, _utils.isTestEnv)()) {\n      console.warn((0, _utils.tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _Platform.default.OS !== 'web') {\n      const REACT_NATIVE_VERSION = (0, _getReactNativeVersion.getReactNativeVersion)(); // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n      const wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n      let instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV; // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    const [renderState, setRenderState] = (0, _react.useState)(false);\n    const forceRender = (0, _react.useCallback)(() => {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":145,"map":[[13,2,2,0],[13,6,2,0,"_utils"],[13,12,2,0],[13,15,2,0,"require"],[13,22,2,0],[13,23,2,0,"_dependencyMap"],[13,37,2,0],[14,2,3,0],[14,6,3,0,"_gesture"],[14,14,3,0],[14,17,3,0,"require"],[14,24,3,0],[14,25,3,0,"_dependencyMap"],[14,39,3,0],[15,2,4,0],[15,6,4,0,"_FlingGestureHandler"],[15,26,4,0],[15,29,4,0,"require"],[15,36,4,0],[15,37,4,0,"_dependencyMap"],[15,51,4,0],[16,2,5,0],[16,6,5,0,"_ForceTouchGestureHandler"],[16,31,5,0],[16,34,5,0,"require"],[16,41,5,0],[16,42,5,0,"_dependencyMap"],[16,56,5,0],[17,2,6,0],[17,6,6,0,"_LongPressGestureHandler"],[17,30,6,0],[17,33,6,0,"require"],[17,40,6,0],[17,41,6,0,"_dependencyMap"],[17,55,6,0],[18,2,7,0],[18,6,7,0,"_PanGestureHandler"],[18,24,7,0],[18,27,7,0,"require"],[18,34,7,0],[18,35,7,0,"_dependencyMap"],[18,49,7,0],[19,2,8,0],[19,6,8,0,"_TapGestureHandler"],[19,24,8,0],[19,27,8,0,"require"],[19,34,8,0],[19,35,8,0,"_dependencyMap"],[19,49,8,0],[20,2,9,0],[20,6,9,0,"_hoverGesture"],[20,19,9,0],[20,22,9,0,"require"],[20,29,9,0],[20,30,9,0,"_dependencyMap"],[20,44,9,0],[21,2,10,0],[21,6,10,0,"_NativeViewGestureHandler"],[21,31,10,0],[21,34,10,0,"require"],[21,41,10,0],[21,42,10,0,"_dependencyMap"],[21,56,10,0],[22,2,11,0],[22,6,11,0,"_gestureHandlerCommon"],[22,27,11,0],[22,30,11,0,"require"],[22,37,11,0],[22,38,11,0,"_dependencyMap"],[22,52,11,0],[23,2,12,0],[23,6,12,0,"_EnableNewWebImplementation"],[23,33,12,0],[23,36,12,0,"require"],[23,43,12,0],[23,44,12,0,"_dependencyMap"],[23,58,12,0],[24,2,13,0],[24,6,13,0,"_getReactNativeVersion"],[24,28,13,0],[24,31,13,0,"require"],[24,38,13,0],[24,39,13,0,"_dependencyMap"],[24,53,13,0],[25,2,14,0],[25,6,14,0,"_RNRenderer"],[25,17,14,0],[25,20,14,0,"require"],[25,27,14,0],[25,28,14,0,"_dependencyMap"],[25,42,14,0],[26,2,15,0],[26,6,15,0,"_react"],[26,12,15,0],[26,15,15,0,"require"],[26,22,15,0],[26,23,15,0,"_dependencyMap"],[26,37,15,0],[27,2,16,0],[27,6,16,0,"_reanimatedWrapper"],[27,24,16,0],[27,27,16,0,"require"],[27,34,16,0],[27,35,16,0,"_dependencyMap"],[27,49,16,0],[28,2,17,0],[28,6,17,0,"_eventReceiver"],[28,20,17,0],[28,23,17,0,"require"],[28,30,17,0],[28,31,17,0,"_dependencyMap"],[28,45,17,0],[29,2,18,7],[29,8,18,13,"ALLOWED_PROPS"],[29,21,18,26],[29,24,18,26,"exports"],[29,31,18,26],[29,32,18,26,"ALLOWED_PROPS"],[29,45,18,26],[29,48,18,29],[29,49,18,30],[29,52,18,33,"baseGestureHandlerWithDetectorProps"],[29,109,18,68],[29,111,18,70],[29,114,18,73,"tapGestureHandlerProps"],[29,155,18,95],[29,157,18,97],[29,160,18,100,"panGestureHandlerProps"],[29,201,18,122],[29,203,18,124],[29,206,18,127,"panGestureHandlerCustomNativeProps"],[29,259,18,161],[29,261,18,163],[29,264,18,166,"longPressGestureHandlerProps"],[29,317,18,194],[29,319,18,196],[29,322,18,199,"forceTouchGestureHandlerProps"],[29,377,18,228],[29,379,18,230],[29,382,18,233,"flingGestureHandlerProps"],[29,427,18,257],[29,429,18,259],[29,432,18,262,"hoverGestureHandlerProps"],[29,470,18,286],[29,472,18,288],[29,475,18,291,"nativeViewGestureHandlerProps"],[29,530,18,320],[29,531,18,321],[30,2,20,0],[30,11,20,9,"convertToHandlerTag"],[30,30,20,28,"convertToHandlerTag"],[30,31,20,29,"ref"],[30,34,20,32],[30,36,20,34],[31,4,21,2],[31,8,21,6],[31,15,21,13,"ref"],[31,18,21,16],[31,23,21,21],[31,31,21,29],[31,33,21,31],[32,6,22,4],[32,13,22,11,"ref"],[32,16,22,14],[33,4,23,2],[33,5,23,3],[33,11,23,9],[33,15,23,13,"ref"],[33,18,23,16],[33,30,23,28,"BaseGesture"],[33,50,23,39],[33,52,23,41],[34,6,24,4],[34,13,24,11,"ref"],[34,16,24,14],[34,17,24,15,"handlerTag"],[34,27,24,25],[35,4,25,2],[35,5,25,3],[35,11,25,9],[36,6,26,4],[36,10,26,8,"_ref$current$handlerT"],[36,31,26,29],[36,33,26,31,"_ref$current"],[36,45,26,43],[38,6,28,4],[39,6,29,4],[40,6,30,4],[40,13,30,11],[40,14,30,12,"_ref$current$handlerT"],[40,35,30,33],[40,38,30,36],[40,39,30,37,"_ref$current"],[40,51,30,49],[40,54,30,52,"ref"],[40,57,30,55],[40,58,30,56,"current"],[40,65,30,63],[40,71,30,69],[40,75,30,73],[40,79,30,77,"_ref$current"],[40,91,30,89],[40,96,30,94],[40,101,30,99],[40,102,30,100],[40,105,30,103],[40,110,30,108],[40,111,30,109],[40,114,30,112,"_ref$current"],[40,126,30,124],[40,127,30,125,"handlerTag"],[40,137,30,135],[40,143,30,141],[40,147,30,145],[40,151,30,149,"_ref$current$handlerT"],[40,172,30,170],[40,177,30,175],[40,182,30,180],[40,183,30,181],[40,186,30,184,"_ref$current$handlerT"],[40,207,30,205],[40,210,30,208],[40,211,30,209],[40,212,30,210],[41,4,31,2],[42,2,32,0],[43,2,34,0],[43,11,34,9,"extractValidHandlerTags"],[43,34,34,32,"extractValidHandlerTags"],[43,35,34,33,"interactionGroup"],[43,51,34,49],[43,53,34,51],[44,4,35,2],[44,8,35,6,"_interactionGroup$map"],[44,29,35,27],[44,31,35,29,"_interactionGroup$map2"],[44,53,35,51],[45,4,37,2],[45,11,37,9],[45,12,37,10,"_interactionGroup$map"],[45,33,37,31],[45,36,37,34,"interactionGroup"],[45,52,37,50],[45,57,37,55],[45,61,37,59],[45,65,37,63,"interactionGroup"],[45,81,37,79],[45,86,37,84],[45,91,37,89],[45,92,37,90],[45,95,37,93],[45,100,37,98],[45,101,37,99],[45,104,37,102],[45,105,37,103,"_interactionGroup$map2"],[45,127,37,125],[45,130,37,128,"interactionGroup"],[45,146,37,144],[45,147,37,145,"map"],[45,150,37,148],[45,151,37,149,"convertToHandlerTag"],[45,170,37,168],[45,171,37,169],[45,177,37,175],[45,181,37,179],[45,185,37,183,"_interactionGroup$map2"],[45,207,37,205],[45,212,37,210],[45,217,37,215],[45,218,37,216],[45,221,37,219],[45,226,37,224],[45,227,37,225],[45,230,37,228,"_interactionGroup$map2"],[45,252,37,250],[45,253,37,251,"filter"],[45,259,37,257],[45,260,37,258,"tag"],[45,263,37,261],[45,267,37,265,"tag"],[45,270,37,268],[45,273,37,271],[45,274,37,272],[45,275,37,273],[45,281,37,279],[45,285,37,283],[45,289,37,287,"_interactionGroup$map"],[45,310,37,308],[45,315,37,313],[45,320,37,318],[45,321,37,319],[45,324,37,322,"_interactionGroup$map"],[45,345,37,343],[45,348,37,346],[45,350,37,348],[46,2,38,0],[47,2,40,7],[47,11,40,16,"extractGestureRelations"],[47,34,40,39,"extractGestureRelations"],[47,35,40,40,"gesture"],[47,42,40,47],[47,44,40,49],[48,4,41,2],[48,10,41,8,"requireToFail"],[48,23,41,21],[48,26,41,24,"extractValidHandlerTags"],[48,49,41,47],[48,50,41,48,"gesture"],[48,57,41,55],[48,58,41,56,"config"],[48,64,41,62],[48,65,41,63,"requireToFail"],[48,78,41,76],[48,79,41,77],[49,4,42,2],[49,10,42,8,"simultaneousWith"],[49,26,42,24],[49,29,42,27,"extractValidHandlerTags"],[49,52,42,50],[49,53,42,51,"gesture"],[49,60,42,58],[49,61,42,59,"config"],[49,67,42,65],[49,68,42,66,"simultaneousWith"],[49,84,42,82],[49,85,42,83],[50,4,43,2],[50,10,43,8,"blocksHandlers"],[50,24,43,22],[50,27,43,25,"extractValidHandlerTags"],[50,50,43,48],[50,51,43,49,"gesture"],[50,58,43,56],[50,59,43,57,"config"],[50,65,43,63],[50,66,43,64,"blocksHandlers"],[50,80,43,78],[50,81,43,79],[51,4,44,2],[51,11,44,9],[52,6,45,4,"waitFor"],[52,13,45,11],[52,15,45,13,"requireToFail"],[52,28,45,26],[53,6,46,4,"simultaneousHandlers"],[53,26,46,24],[53,28,46,26,"simultaneousWith"],[53,44,46,42],[54,6,47,4,"blocksHandlers"],[54,20,47,18],[54,22,47,20,"blocksHandlers"],[55,4,48,2],[55,5,48,3],[56,2,49,0],[57,2,50,7],[57,11,50,16,"checkGestureCallbacksForWorklets"],[57,43,50,48,"checkGestureCallbacksForWorklets"],[57,44,50,49,"gesture"],[57,51,50,56],[57,53,50,58],[58,4,51,2],[58,8,51,6],[58,9,51,7,"__DEV__"],[58,16,51,14],[58,18,51,16],[59,6,52,4],[60,4,53,2],[60,5,53,3],[60,6,53,4],[61,4,54,2],[63,4,57,2],[63,8,57,6,"gesture"],[63,15,57,13],[63,16,57,14,"config"],[63,22,57,20],[63,23,57,21,"runOnJS"],[63,30,57,28],[63,32,57,30],[64,6,58,4],[65,4,59,2],[66,4,61,2],[66,10,61,8,"areSomeNotWorklets"],[66,28,61,26],[66,31,61,29,"gesture"],[66,38,61,36],[66,39,61,37,"handlers"],[66,47,61,45],[66,48,61,46,"isWorklet"],[66,57,61,55],[66,58,61,56,"includes"],[66,66,61,64],[66,67,61,65],[66,72,61,70],[66,73,61,71],[67,4,62,2],[67,10,62,8,"areSomeWorklets"],[67,25,62,23],[67,28,62,26,"gesture"],[67,35,62,33],[67,36,62,34,"handlers"],[67,44,62,42],[67,45,62,43,"isWorklet"],[67,54,62,52],[67,55,62,53,"includes"],[67,63,62,61],[67,64,62,62],[67,68,62,66],[67,69,62,67],[67,70,62,68],[67,71,62,69],[68,4,63,2],[70,4,65,2],[70,8,65,6,"areSomeNotWorklets"],[70,26,65,24],[70,30,65,28,"areSomeWorklets"],[70,45,65,43],[70,47,65,45],[71,6,66,4,"console"],[71,13,66,11],[71,14,66,12,"error"],[71,19,66,17],[71,20,66,18],[71,24,66,18,"tagMessage"],[71,41,66,28],[71,43,66,29],[71,310,66,296],[71,311,66,297],[71,312,66,298],[72,4,67,2],[73,4,69,2],[73,8,69,6,"Reanimated"],[73,37,69,16],[73,42,69,21,"undefined"],[73,51,69,30],[73,53,69,32],[74,6,70,4],[75,6,71,4],[76,4,72,2],[77,4,74,2],[77,10,74,8,"areAllNotWorklets"],[77,27,74,25],[77,30,74,28],[77,31,74,29,"areSomeWorklets"],[77,46,74,44],[77,50,74,48,"areSomeNotWorklets"],[77,68,74,66],[77,69,74,67],[77,70,74,68],[78,4,75,2],[80,4,77,2],[80,8,77,6,"areAllNotWorklets"],[80,25,77,23],[80,29,77,27],[80,30,77,28],[80,34,77,28,"isTestEnv"],[80,50,77,37],[80,52,77,38],[80,53,77,39],[80,55,77,41],[81,6,78,4,"console"],[81,13,78,11],[81,14,78,12,"warn"],[81,18,78,16],[81,19,78,17],[81,23,78,17,"tagMessage"],[81,40,78,27],[81,42,78,28],[81,276,78,262],[81,277,78,263],[81,278,78,264],[82,4,79,2],[83,2,80,0],[83,3,80,1],[83,4,80,2],[85,2,82,7],[85,11,82,16,"validateDetectorChildren"],[85,35,82,40,"validateDetectorChildren"],[85,36,82,41,"ref"],[85,39,82,44],[85,41,82,46],[86,4,83,2],[87,4,84,2],[88,4,85,2],[89,4,86,2],[90,4,87,2],[91,4,88,2],[92,4,89,2],[93,4,90,2],[94,4,91,2],[95,4,92,2],[96,4,93,2],[97,4,94,2],[98,4,95,2],[99,4,96,2],[100,4,97,2],[101,4,98,2],[102,4,99,2],[103,4,100,2],[104,4,101,2],[105,4,102,2],[106,4,103,2],[107,4,104,2],[107,8,104,6,"__DEV__"],[107,15,104,13],[107,19,104,17,"Platform"],[107,36,104,25],[107,37,104,26,"OS"],[107,39,104,28],[107,44,104,33],[107,49,104,38],[107,51,104,40],[108,6,105,4],[108,12,105,10,"REACT_NATIVE_VERSION"],[108,32,105,30],[108,35,105,33],[108,39,105,33,"getReactNativeVersion"],[108,83,105,54],[108,85,105,55],[108,86,105,56],[108,87,105,57],[108,88,105,58],[110,6,107,4],[110,12,107,10,"wrapType"],[110,20,107,18],[110,23,107,21,"REACT_NATIVE_VERSION"],[110,43,107,41],[110,44,107,42,"minor"],[110,49,107,47],[110,52,107,50],[110,54,107,52],[110,58,107,56,"REACT_NATIVE_VERSION"],[110,78,107,76],[110,79,107,77,"major"],[110,84,107,82],[110,87,107,85],[110,88,107,86],[111,6,107,89],[112,6,108,4,"ref"],[112,9,108,7],[112,10,108,8,"_reactInternals"],[112,25,108,23],[112,26,108,24,"elementType"],[112,37,108,35],[113,6,108,38],[114,6,109,4,"ref"],[114,9,109,7],[114,10,109,8,"_reactInternalFiber"],[114,29,109,27],[114,30,109,28,"elementType"],[114,41,109,39],[114,42,109,40],[114,43,109,41],[116,6,111,4],[116,10,111,8,"instance"],[116,18,111,16],[116,21,111,19,"RNRenderer"],[116,43,111,29],[116,44,111,30,"findHostInstance_DEPRECATED"],[116,71,111,57],[116,72,111,58,"ref"],[116,75,111,61],[116,76,111,62],[116,77,111,63,"_internalFiberInstanceHandleDEV"],[116,108,111,94],[116,109,111,95],[116,110,111,96],[118,6,114,4],[118,13,114,11,"instance"],[118,21,114,19],[118,25,114,23,"instance"],[118,33,114,31],[118,34,114,32,"elementType"],[118,45,114,43],[118,50,114,48,"wrapType"],[118,58,114,56],[118,60,114,58],[119,8,115,6],[120,8,116,6],[120,12,116,10,"instance"],[120,20,116,18],[120,21,116,19,"sibling"],[120,28,116,26],[120,30,116,28],[121,10,117,8],[121,16,117,14],[121,20,117,18,"Error"],[121,25,117,23],[121,26,117,24],[121,269,117,267],[121,270,117,268],[122,8,118,6],[122,9,118,7],[122,10,118,8],[124,8,121,6,"instance"],[124,16,121,14],[124,19,121,17,"instance"],[124,27,121,25],[124,28,121,26,"return"],[124,34,121,32],[125,6,122,4],[126,4,123,2],[127,2,124,0],[128,2,125,7],[128,11,125,16,"useForceRender"],[128,25,125,30,"useForceRender"],[128,26,125,30],[128,28,125,33],[129,4,126,2],[129,10,126,8],[129,11,126,9,"renderState"],[129,22,126,20],[129,24,126,22,"setRenderState"],[129,38,126,36],[129,39,126,37],[129,42,126,40],[129,46,126,40,"useState"],[129,61,126,48],[129,63,126,49],[129,68,126,54],[129,69,126,55],[130,4,127,2],[130,10,127,8,"forceRender"],[130,21,127,19],[130,24,127,22],[130,28,127,22,"useCallback"],[130,46,127,33],[130,48,127,34],[130,54,127,40],[131,6,128,4,"setRenderState"],[131,20,128,18],[131,21,128,19],[131,22,128,20,"renderState"],[131,33,128,31],[131,34,128,32],[132,4,129,2],[132,5,129,3],[132,7,129,5],[132,8,129,6,"renderState"],[132,19,129,17],[132,21,129,19,"setRenderState"],[132,35,129,33],[132,36,129,34],[132,37,129,35],[133,4,130,2],[133,11,130,9,"forceRender"],[133,22,130,20],[134,2,131,0],[135,2,132,7],[135,11,132,16,"useWebEventHandlers"],[135,30,132,35,"useWebEventHandlers"],[135,31,132,35],[135,33,132,38],[136,4,133,2],[136,11,133,9],[136,15,133,9,"useRef"],[136,28,133,15],[136,30,133,16],[137,6,134,4,"onGestureHandlerEvent"],[137,27,134,25],[137,29,134,27,"e"],[137,30,134,28],[137,34,134,32],[138,8,135,6],[138,12,135,6,"onGestureHandlerEvent"],[138,48,135,27],[138,50,135,28,"e"],[138,51,135,29],[138,52,135,30,"nativeEvent"],[138,63,135,41],[138,64,135,42],[139,6,136,4],[139,7,136,5],[140,6,137,4,"onGestureHandlerStateChange"],[140,33,137,31],[140,35,137,33],[140,39,137,33,"isNewWebImplementationEnabled"],[140,96,137,62],[140,98,137,63],[140,99,137,64],[140,102,137,67,"e"],[140,103,137,68],[140,107,137,72],[141,8,138,6],[141,12,138,6,"onGestureHandlerEvent"],[141,48,138,27],[141,50,138,28,"e"],[141,51,138,29],[141,52,138,30,"nativeEvent"],[141,63,138,41],[141,64,138,42],[142,6,139,4],[142,7,139,5],[142,10,139,8,"undefined"],[143,4,140,2],[143,5,140,3],[143,6,140,4],[144,2,141,0],[145,0,141,1],[145,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","_interactionGroup$map2.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACmB;CDY;AEE;kQCG,cD;CFC;OIE;CJS;OKC;CL8B;OME;CN0C;OOC;kCCE;GDE;CPE;OSC;2BCE;KDE;mEEC;KFE;CTE"}},"type":"js/module"}]}