{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"]}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":65,"index":110}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.tapHandlerName = exports.tapGestureHandlerProps = exports.TapGestureHandler = void 0;\n  var _createHandler = _interopRequireDefault(require(_dependencyMap[1], \"./createHandler\"));\n  var _gestureHandlerCommon = require(_dependencyMap[2], \"./gestureHandlerCommon\");\n  const tapGestureHandlerProps = exports.tapGestureHandlerProps = ['maxDurationMs', 'maxDelayMs', 'numberOfTaps', 'maxDeltaX', 'maxDeltaY', 'maxDist', 'minPointers'];\n  const tapHandlerName = exports.tapHandlerName = 'TapGestureHandler';\n  /**\n   * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n   */\n\n  /**\n   * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  const TapGestureHandler = exports.TapGestureHandler = (0, _createHandler.default)({\n    name: tapHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...tapGestureHandlerProps],\n    config: {\n      shouldCancelWhenOutside: true\n    }\n  });\n});","lineCount":26,"map":[[7,2,1,0],[7,6,1,0,"_createHandler"],[7,20,1,0],[7,23,1,0,"_interopRequireDefault"],[7,45,1,0],[7,46,1,0,"require"],[7,53,1,0],[7,54,1,0,"_dependencyMap"],[7,68,1,0],[8,2,2,0],[8,6,2,0,"_gestureHandlerCommon"],[8,27,2,0],[8,30,2,0,"require"],[8,37,2,0],[8,38,2,0,"_dependencyMap"],[8,52,2,0],[9,2,3,7],[9,8,3,13,"tapGestureHandlerProps"],[9,30,3,35],[9,33,3,35,"exports"],[9,40,3,35],[9,41,3,35,"tapGestureHandlerProps"],[9,63,3,35],[9,66,3,38],[9,67,3,39],[9,82,3,54],[9,84,3,56],[9,96,3,68],[9,98,3,70],[9,112,3,84],[9,114,3,86],[9,125,3,97],[9,127,3,99],[9,138,3,110],[9,140,3,112],[9,149,3,121],[9,151,3,123],[9,164,3,136],[9,165,3,137],[10,2,4,7],[10,8,4,13,"tapHandlerName"],[10,22,4,27],[10,25,4,27,"exports"],[10,32,4,27],[10,33,4,27,"tapHandlerName"],[10,47,4,27],[10,50,4,30],[10,69,4,49],[11,2,5,0],[12,0,6,0],[13,0,7,0],[15,2,9,0],[16,0,10,0],[17,0,11,0],[18,2,12,0],[19,2,13,7],[19,8,13,13,"TapGestureHandler"],[19,25,13,30],[19,28,13,30,"exports"],[19,35,13,30],[19,36,13,30,"TapGestureHandler"],[19,53,13,30],[19,56,13,33],[19,60,13,33,"createHandler"],[19,82,13,46],[19,84,13,47],[20,4,14,2,"name"],[20,8,14,6],[20,10,14,8,"tapHandlerName"],[20,24,14,22],[21,4,15,2,"allowedProps"],[21,16,15,14],[21,18,15,16],[21,19,15,17],[21,22,15,20,"baseGestureHandlerProps"],[21,67,15,43],[21,69,15,45],[21,72,15,48,"tapGestureHandlerProps"],[21,94,15,70],[21,95,15,71],[22,4,16,2,"config"],[22,10,16,8],[22,12,16,10],[23,6,17,4,"shouldCancelWhenOutside"],[23,29,17,27],[23,31,17,29],[24,4,18,2],[25,2,19,0],[25,3,19,1],[25,4,19,2],[26,0,19,3],[26,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}