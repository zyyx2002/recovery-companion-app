{"dependencies":[{"name":"./error-constructors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"Hdbc9HZ5o50YpsoivQck/aX3RwE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NonError = void 0;\n  Object.defineProperty(exports, \"addKnownErrorConstructor\", {\n    enumerable: true,\n    get: function () {\n      return _errorConstructors.addKnownErrorConstructor;\n    }\n  });\n  exports.deserializeError = deserializeError;\n  exports.isErrorLike = isErrorLike;\n  exports.serializeError = serializeError;\n  var _errorConstructors = require(_dependencyMap[0], \"./error-constructors.js\");\n  class NonError extends Error {\n    name = 'NonError';\n    constructor(message) {\n      super(NonError._prepareSuperMessage(message));\n    }\n    static _prepareSuperMessage(message) {\n      try {\n        return JSON.stringify(message);\n      } catch {\n        return String(message);\n      }\n    }\n  }\n  exports.NonError = NonError;\n  const errorProperties = [{\n    property: 'name',\n    enumerable: false\n  }, {\n    property: 'message',\n    enumerable: false\n  }, {\n    property: 'stack',\n    enumerable: false\n  }, {\n    property: 'code',\n    enumerable: true\n  }, {\n    property: 'cause',\n    enumerable: false\n  }, {\n    property: 'errors',\n    enumerable: false\n  }];\n  const toJsonWasCalled = new WeakSet();\n  const toJSON = from => {\n    toJsonWasCalled.add(from);\n    const json = from.toJSON();\n    toJsonWasCalled.delete(from);\n    return json;\n  };\n  const newError = name => {\n    const ErrorConstructor = _errorConstructors.errorConstructors.get(name) ?? Error;\n    return ErrorConstructor === AggregateError ? new ErrorConstructor([]) : new ErrorConstructor();\n  };\n\n  // eslint-disable-next-line complexity\n  const destroyCircular = ({\n    from,\n    seen,\n    to,\n    forceEnumerable,\n    maxDepth,\n    depth,\n    useToJSON,\n    serialize\n  }) => {\n    if (!to) {\n      if (Array.isArray(from)) {\n        to = [];\n      } else if (!serialize && isErrorLike(from)) {\n        to = newError(from.name);\n      } else {\n        to = {};\n      }\n    }\n    seen.push(from);\n    if (depth >= maxDepth) {\n      return to;\n    }\n    if (useToJSON && typeof from.toJSON === 'function' && !toJsonWasCalled.has(from)) {\n      return toJSON(from);\n    }\n    const continueDestroyCircular = value => destroyCircular({\n      from: value,\n      seen: [...seen],\n      forceEnumerable,\n      maxDepth,\n      depth,\n      useToJSON,\n      serialize\n    });\n    for (const [key, value] of Object.entries(from)) {\n      if (value && value instanceof Uint8Array && value.constructor.name === 'Buffer') {\n        to[key] = '[object Buffer]';\n        continue;\n      }\n\n      // TODO: Use `stream.isReadable()` when targeting Node.js 18.\n      if (value !== null && typeof value === 'object' && typeof value.pipe === 'function') {\n        to[key] = '[object Stream]';\n        continue;\n      }\n      if (typeof value === 'function') {\n        continue;\n      }\n      if (!value || typeof value !== 'object') {\n        // Gracefully handle non-configurable errors like `DOMException`.\n        try {\n          to[key] = value;\n        } catch {}\n        continue;\n      }\n      if (!seen.includes(from[key])) {\n        depth++;\n        to[key] = continueDestroyCircular(from[key]);\n        continue;\n      }\n      to[key] = '[Circular]';\n    }\n    if (serialize || to instanceof Error) {\n      for (const {\n        property,\n        enumerable\n      } of errorProperties) {\n        if (from[property] !== undefined && from[property] !== null) {\n          Object.defineProperty(to, property, {\n            value: isErrorLike(from[property]) || Array.isArray(from[property]) ? continueDestroyCircular(from[property]) : from[property],\n            enumerable: forceEnumerable ? true : enumerable,\n            configurable: true,\n            writable: true\n          });\n        }\n      }\n    }\n    return to;\n  };\n  function serializeError(value, options = {}) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY,\n      useToJSON = true\n    } = options;\n    if (typeof value === 'object' && value !== null) {\n      return destroyCircular({\n        from: value,\n        seen: [],\n        forceEnumerable: true,\n        maxDepth,\n        depth: 0,\n        useToJSON,\n        serialize: true\n      });\n    }\n\n    // People sometimes throw things besides Error objectsâ€¦\n    if (typeof value === 'function') {\n      // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n      // We intentionally use `||` because `.name` is an empty string for anonymous functions.\n      return `[Function: ${value.name || 'anonymous'}]`;\n    }\n    return value;\n  }\n  function deserializeError(value, options = {}) {\n    const {\n      maxDepth = Number.POSITIVE_INFINITY\n    } = options;\n    if (value instanceof Error) {\n      return value;\n    }\n    if (isMinimumViableSerializedError(value)) {\n      return destroyCircular({\n        from: value,\n        seen: [],\n        to: newError(value.name),\n        maxDepth,\n        depth: 0,\n        serialize: false\n      });\n    }\n    return new NonError(value);\n  }\n  function isErrorLike(value) {\n    return Boolean(value) && typeof value === 'object' && typeof value.name === 'string' && typeof value.message === 'string' && typeof value.stack === 'string';\n  }\n\n  // Used as a weak check for immediately-passed objects, whereas `isErrorLike` is used for nested values to avoid bad detection\n  function isMinimumViableSerializedError(value) {\n    return Boolean(value) && typeof value === 'object' && typeof value.message === 'string' && !Array.isArray(value);\n  }\n});","lineCount":194,"map":[[15,2,1,0],[15,6,1,0,"_errorConstructors"],[15,24,1,0],[15,27,1,0,"require"],[15,34,1,0],[15,35,1,0,"_dependencyMap"],[15,49,1,0],[16,2,3,7],[16,8,3,13,"NonError"],[16,16,3,21],[16,25,3,30,"Error"],[16,30,3,35],[16,31,3,36],[17,4,4,1,"name"],[17,8,4,5],[17,11,4,8],[17,21,4,18],[18,4,6,1,"constructor"],[18,15,6,12,"constructor"],[18,16,6,13,"message"],[18,23,6,20],[18,25,6,22],[19,6,7,2],[19,11,7,7],[19,12,7,8,"NonError"],[19,20,7,16],[19,21,7,17,"_prepareSuperMessage"],[19,41,7,37],[19,42,7,38,"message"],[19,49,7,45],[19,50,7,46],[19,51,7,47],[20,4,8,1],[21,4,10,1],[21,11,10,8,"_prepareSuperMessage"],[21,31,10,28,"_prepareSuperMessage"],[21,32,10,29,"message"],[21,39,10,36],[21,41,10,38],[22,6,11,2],[22,10,11,6],[23,8,12,3],[23,15,12,10,"JSON"],[23,19,12,14],[23,20,12,15,"stringify"],[23,29,12,24],[23,30,12,25,"message"],[23,37,12,32],[23,38,12,33],[24,6,13,2],[24,7,13,3],[24,8,13,4],[24,14,13,10],[25,8,14,3],[25,15,14,10,"String"],[25,21,14,16],[25,22,14,17,"message"],[25,29,14,24],[25,30,14,25],[26,6,15,2],[27,4,16,1],[28,2,17,0],[29,2,17,1,"exports"],[29,9,17,1],[29,10,17,1,"NonError"],[29,18,17,1],[29,21,17,1,"NonError"],[29,29,17,1],[30,2,19,0],[30,8,19,6,"errorProperties"],[30,23,19,21],[30,26,19,24],[30,27,20,1],[31,4,21,2,"property"],[31,12,21,10],[31,14,21,12],[31,20,21,18],[32,4,22,2,"enumerable"],[32,14,22,12],[32,16,22,14],[33,2,23,1],[33,3,23,2],[33,5,24,1],[34,4,25,2,"property"],[34,12,25,10],[34,14,25,12],[34,23,25,21],[35,4,26,2,"enumerable"],[35,14,26,12],[35,16,26,14],[36,2,27,1],[36,3,27,2],[36,5,28,1],[37,4,29,2,"property"],[37,12,29,10],[37,14,29,12],[37,21,29,19],[38,4,30,2,"enumerable"],[38,14,30,12],[38,16,30,14],[39,2,31,1],[39,3,31,2],[39,5,32,1],[40,4,33,2,"property"],[40,12,33,10],[40,14,33,12],[40,20,33,18],[41,4,34,2,"enumerable"],[41,14,34,12],[41,16,34,14],[42,2,35,1],[42,3,35,2],[42,5,36,1],[43,4,37,2,"property"],[43,12,37,10],[43,14,37,12],[43,21,37,19],[44,4,38,2,"enumerable"],[44,14,38,12],[44,16,38,14],[45,2,39,1],[45,3,39,2],[45,5,40,1],[46,4,41,2,"property"],[46,12,41,10],[46,14,41,12],[46,22,41,20],[47,4,42,2,"enumerable"],[47,14,42,12],[47,16,42,14],[48,2,43,1],[48,3,43,2],[48,4,44,1],[49,2,46,0],[49,8,46,6,"toJsonWasCalled"],[49,23,46,21],[49,26,46,24],[49,30,46,28,"WeakSet"],[49,37,46,35],[49,38,46,36],[49,39,46,37],[50,2,48,0],[50,8,48,6,"toJSON"],[50,14,48,12],[50,17,48,15,"from"],[50,21,48,19],[50,25,48,23],[51,4,49,1,"toJsonWasCalled"],[51,19,49,16],[51,20,49,17,"add"],[51,23,49,20],[51,24,49,21,"from"],[51,28,49,25],[51,29,49,26],[52,4,50,1],[52,10,50,7,"json"],[52,14,50,11],[52,17,50,14,"from"],[52,21,50,18],[52,22,50,19,"toJSON"],[52,28,50,25],[52,29,50,26],[52,30,50,27],[53,4,51,1,"toJsonWasCalled"],[53,19,51,16],[53,20,51,17,"delete"],[53,26,51,23],[53,27,51,24,"from"],[53,31,51,28],[53,32,51,29],[54,4,52,1],[54,11,52,8,"json"],[54,15,52,12],[55,2,53,0],[55,3,53,1],[56,2,55,0],[56,8,55,6,"newError"],[56,16,55,14],[56,19,55,17,"name"],[56,23,55,21],[56,27,55,25],[57,4,56,1],[57,10,56,7,"ErrorConstructor"],[57,26,56,23],[57,29,56,26,"errorConstructors"],[57,65,56,43],[57,66,56,44,"get"],[57,69,56,47],[57,70,56,48,"name"],[57,74,56,52],[57,75,56,53],[57,79,56,57,"Error"],[57,84,56,62],[58,4,57,1],[58,11,57,8,"ErrorConstructor"],[58,27,57,24],[58,32,57,29,"AggregateError"],[58,46,57,43],[58,49,58,4],[58,53,58,8,"ErrorConstructor"],[58,69,58,24],[58,70,58,25],[58,72,58,27],[58,73,58,28],[58,76,59,4],[58,80,59,8,"ErrorConstructor"],[58,96,59,24],[58,97,59,25],[58,98,59,26],[59,2,60,0],[59,3,60,1],[61,2,62,0],[62,2,63,0],[62,8,63,6,"destroyCircular"],[62,23,63,21],[62,26,63,24,"destroyCircular"],[62,27,63,25],[63,4,64,1,"from"],[63,8,64,5],[64,4,65,1,"seen"],[64,8,65,5],[65,4,66,1,"to"],[65,6,66,3],[66,4,67,1,"forceEnumerable"],[66,19,67,16],[67,4,68,1,"maxDepth"],[67,12,68,9],[68,4,69,1,"depth"],[68,9,69,6],[69,4,70,1,"useToJSON"],[69,13,70,10],[70,4,71,1,"serialize"],[71,2,72,0],[71,3,72,1],[71,8,72,6],[72,4,73,1],[72,8,73,5],[72,9,73,6,"to"],[72,11,73,8],[72,13,73,10],[73,6,74,2],[73,10,74,6,"Array"],[73,15,74,11],[73,16,74,12,"isArray"],[73,23,74,19],[73,24,74,20,"from"],[73,28,74,24],[73,29,74,25],[73,31,74,27],[74,8,75,3,"to"],[74,10,75,5],[74,13,75,8],[74,15,75,10],[75,6,76,2],[75,7,76,3],[75,13,76,9],[75,17,76,13],[75,18,76,14,"serialize"],[75,27,76,23],[75,31,76,27,"isErrorLike"],[75,42,76,38],[75,43,76,39,"from"],[75,47,76,43],[75,48,76,44],[75,50,76,46],[76,8,77,3,"to"],[76,10,77,5],[76,13,77,8,"newError"],[76,21,77,16],[76,22,77,17,"from"],[76,26,77,21],[76,27,77,22,"name"],[76,31,77,26],[76,32,77,27],[77,6,78,2],[77,7,78,3],[77,13,78,9],[78,8,79,3,"to"],[78,10,79,5],[78,13,79,8],[78,14,79,9],[78,15,79,10],[79,6,80,2],[80,4,81,1],[81,4,83,1,"seen"],[81,8,83,5],[81,9,83,6,"push"],[81,13,83,10],[81,14,83,11,"from"],[81,18,83,15],[81,19,83,16],[82,4,85,1],[82,8,85,5,"depth"],[82,13,85,10],[82,17,85,14,"maxDepth"],[82,25,85,22],[82,27,85,24],[83,6,86,2],[83,13,86,9,"to"],[83,15,86,11],[84,4,87,1],[85,4,89,1],[85,8,89,5,"useToJSON"],[85,17,89,14],[85,21,89,18],[85,28,89,25,"from"],[85,32,89,29],[85,33,89,30,"toJSON"],[85,39,89,36],[85,44,89,41],[85,54,89,51],[85,58,89,55],[85,59,89,56,"toJsonWasCalled"],[85,74,89,71],[85,75,89,72,"has"],[85,78,89,75],[85,79,89,76,"from"],[85,83,89,80],[85,84,89,81],[85,86,89,83],[86,6,90,2],[86,13,90,9,"toJSON"],[86,19,90,15],[86,20,90,16,"from"],[86,24,90,20],[86,25,90,21],[87,4,91,1],[88,4,93,1],[88,10,93,7,"continueDestroyCircular"],[88,33,93,30],[88,36,93,33,"value"],[88,41,93,38],[88,45,93,42,"destroyCircular"],[88,60,93,57],[88,61,93,58],[89,6,94,2,"from"],[89,10,94,6],[89,12,94,8,"value"],[89,17,94,13],[90,6,95,2,"seen"],[90,10,95,6],[90,12,95,8],[90,13,95,9],[90,16,95,12,"seen"],[90,20,95,16],[90,21,95,17],[91,6,96,2,"forceEnumerable"],[91,21,96,17],[92,6,97,2,"maxDepth"],[92,14,97,10],[93,6,98,2,"depth"],[93,11,98,7],[94,6,99,2,"useToJSON"],[94,15,99,11],[95,6,100,2,"serialize"],[96,4,101,1],[96,5,101,2],[96,6,101,3],[97,4,103,1],[97,9,103,6],[97,15,103,12],[97,16,103,13,"key"],[97,19,103,16],[97,21,103,18,"value"],[97,26,103,23],[97,27,103,24],[97,31,103,28,"Object"],[97,37,103,34],[97,38,103,35,"entries"],[97,45,103,42],[97,46,103,43,"from"],[97,50,103,47],[97,51,103,48],[97,53,103,50],[98,6,104,2],[98,10,104,6,"value"],[98,15,104,11],[98,19,104,15,"value"],[98,24,104,20],[98,36,104,32,"Uint8Array"],[98,46,104,42],[98,50,104,46,"value"],[98,55,104,51],[98,56,104,52,"constructor"],[98,67,104,63],[98,68,104,64,"name"],[98,72,104,68],[98,77,104,73],[98,85,104,81],[98,87,104,83],[99,8,105,3,"to"],[99,10,105,5],[99,11,105,6,"key"],[99,14,105,9],[99,15,105,10],[99,18,105,13],[99,35,105,30],[100,8,106,3],[101,6,107,2],[103,6,109,2],[104,6,110,2],[104,10,110,6,"value"],[104,15,110,11],[104,20,110,16],[104,24,110,20],[104,28,110,24],[104,35,110,31,"value"],[104,40,110,36],[104,45,110,41],[104,53,110,49],[104,57,110,53],[104,64,110,60,"value"],[104,69,110,65],[104,70,110,66,"pipe"],[104,74,110,70],[104,79,110,75],[104,89,110,85],[104,91,110,87],[105,8,111,3,"to"],[105,10,111,5],[105,11,111,6,"key"],[105,14,111,9],[105,15,111,10],[105,18,111,13],[105,35,111,30],[106,8,112,3],[107,6,113,2],[108,6,115,2],[108,10,115,6],[108,17,115,13,"value"],[108,22,115,18],[108,27,115,23],[108,37,115,33],[108,39,115,35],[109,8,116,3],[110,6,117,2],[111,6,119,2],[111,10,119,6],[111,11,119,7,"value"],[111,16,119,12],[111,20,119,16],[111,27,119,23,"value"],[111,32,119,28],[111,37,119,33],[111,45,119,41],[111,47,119,43],[112,8,120,3],[113,8,121,3],[113,12,121,7],[114,10,122,4,"to"],[114,12,122,6],[114,13,122,7,"key"],[114,16,122,10],[114,17,122,11],[114,20,122,14,"value"],[114,25,122,19],[115,8,123,3],[115,9,123,4],[115,10,123,5],[115,16,123,11],[115,17,123,12],[116,8,125,3],[117,6,126,2],[118,6,128,2],[118,10,128,6],[118,11,128,7,"seen"],[118,15,128,11],[118,16,128,12,"includes"],[118,24,128,20],[118,25,128,21,"from"],[118,29,128,25],[118,30,128,26,"key"],[118,33,128,29],[118,34,128,30],[118,35,128,31],[118,37,128,33],[119,8,129,3,"depth"],[119,13,129,8],[119,15,129,10],[120,8,130,3,"to"],[120,10,130,5],[120,11,130,6,"key"],[120,14,130,9],[120,15,130,10],[120,18,130,13,"continueDestroyCircular"],[120,41,130,36],[120,42,130,37,"from"],[120,46,130,41],[120,47,130,42,"key"],[120,50,130,45],[120,51,130,46],[120,52,130,47],[121,8,132,3],[122,6,133,2],[123,6,135,2,"to"],[123,8,135,4],[123,9,135,5,"key"],[123,12,135,8],[123,13,135,9],[123,16,135,12],[123,28,135,24],[124,4,136,1],[125,4,138,1],[125,8,138,5,"serialize"],[125,17,138,14],[125,21,138,18,"to"],[125,23,138,20],[125,35,138,32,"Error"],[125,40,138,37],[125,42,138,39],[126,6,139,2],[126,11,139,7],[126,17,139,13],[127,8,139,14,"property"],[127,16,139,22],[128,8,139,24,"enumerable"],[129,6,139,34],[129,7,139,35],[129,11,139,39,"errorProperties"],[129,26,139,54],[129,28,139,56],[130,8,140,3],[130,12,140,7,"from"],[130,16,140,11],[130,17,140,12,"property"],[130,25,140,20],[130,26,140,21],[130,31,140,26,"undefined"],[130,40,140,35],[130,44,140,39,"from"],[130,48,140,43],[130,49,140,44,"property"],[130,57,140,52],[130,58,140,53],[130,63,140,58],[130,67,140,62],[130,69,140,64],[131,10,141,4,"Object"],[131,16,141,10],[131,17,141,11,"defineProperty"],[131,31,141,25],[131,32,141,26,"to"],[131,34,141,28],[131,36,141,30,"property"],[131,44,141,38],[131,46,141,40],[132,12,142,5,"value"],[132,17,142,10],[132,19,142,12,"isErrorLike"],[132,30,142,23],[132,31,142,24,"from"],[132,35,142,28],[132,36,142,29,"property"],[132,44,142,37],[132,45,142,38],[132,46,142,39],[132,50,142,43,"Array"],[132,55,142,48],[132,56,142,49,"isArray"],[132,63,142,56],[132,64,142,57,"from"],[132,68,142,61],[132,69,142,62,"property"],[132,77,142,70],[132,78,142,71],[132,79,142,72],[132,82,143,8,"continueDestroyCircular"],[132,105,143,31],[132,106,143,32,"from"],[132,110,143,36],[132,111,143,37,"property"],[132,119,143,45],[132,120,143,46],[132,121,143,47],[132,124,144,8,"from"],[132,128,144,12],[132,129,144,13,"property"],[132,137,144,21],[132,138,144,22],[133,12,145,5,"enumerable"],[133,22,145,15],[133,24,145,17,"forceEnumerable"],[133,39,145,32],[133,42,145,35],[133,46,145,39],[133,49,145,42,"enumerable"],[133,59,145,52],[134,12,146,5,"configurable"],[134,24,146,17],[134,26,146,19],[134,30,146,23],[135,12,147,5,"writable"],[135,20,147,13],[135,22,147,15],[136,10,148,4],[136,11,148,5],[136,12,148,6],[137,8,149,3],[138,6,150,2],[139,4,151,1],[140,4,153,1],[140,11,153,8,"to"],[140,13,153,10],[141,2,154,0],[141,3,154,1],[142,2,156,7],[142,11,156,16,"serializeError"],[142,25,156,30,"serializeError"],[142,26,156,31,"value"],[142,31,156,36],[142,33,156,38,"options"],[142,40,156,45],[142,43,156,48],[142,44,156,49],[142,45,156,50],[142,47,156,52],[143,4,157,1],[143,10,157,7],[144,6,158,2,"maxDepth"],[144,14,158,10],[144,17,158,13,"Number"],[144,23,158,19],[144,24,158,20,"POSITIVE_INFINITY"],[144,41,158,37],[145,6,159,2,"useToJSON"],[145,15,159,11],[145,18,159,14],[146,4,160,1],[146,5,160,2],[146,8,160,5,"options"],[146,15,160,12],[147,4,162,1],[147,8,162,5],[147,15,162,12,"value"],[147,20,162,17],[147,25,162,22],[147,33,162,30],[147,37,162,34,"value"],[147,42,162,39],[147,47,162,44],[147,51,162,48],[147,53,162,50],[148,6,163,2],[148,13,163,9,"destroyCircular"],[148,28,163,24],[148,29,163,25],[149,8,164,3,"from"],[149,12,164,7],[149,14,164,9,"value"],[149,19,164,14],[150,8,165,3,"seen"],[150,12,165,7],[150,14,165,9],[150,16,165,11],[151,8,166,3,"forceEnumerable"],[151,23,166,18],[151,25,166,20],[151,29,166,24],[152,8,167,3,"maxDepth"],[152,16,167,11],[153,8,168,3,"depth"],[153,13,168,8],[153,15,168,10],[153,16,168,11],[154,8,169,3,"useToJSON"],[154,17,169,12],[155,8,170,3,"serialize"],[155,17,170,12],[155,19,170,14],[156,6,171,2],[156,7,171,3],[156,8,171,4],[157,4,172,1],[159,4,174,1],[160,4,175,1],[160,8,175,5],[160,15,175,12,"value"],[160,20,175,17],[160,25,175,22],[160,35,175,32],[160,37,175,34],[161,6,176,2],[162,6,177,2],[163,6,178,2],[163,13,178,9],[163,27,178,23,"value"],[163,32,178,28],[163,33,178,29,"name"],[163,37,178,33],[163,41,178,37],[163,52,178,48],[163,55,178,51],[164,4,179,1],[165,4,181,1],[165,11,181,8,"value"],[165,16,181,13],[166,2,182,0],[167,2,184,7],[167,11,184,16,"deserializeError"],[167,27,184,32,"deserializeError"],[167,28,184,33,"value"],[167,33,184,38],[167,35,184,40,"options"],[167,42,184,47],[167,45,184,50],[167,46,184,51],[167,47,184,52],[167,49,184,54],[168,4,185,1],[168,10,185,7],[169,6,185,8,"maxDepth"],[169,14,185,16],[169,17,185,19,"Number"],[169,23,185,25],[169,24,185,26,"POSITIVE_INFINITY"],[170,4,185,43],[170,5,185,44],[170,8,185,47,"options"],[170,15,185,54],[171,4,187,1],[171,8,187,5,"value"],[171,13,187,10],[171,25,187,22,"Error"],[171,30,187,27],[171,32,187,29],[172,6,188,2],[172,13,188,9,"value"],[172,18,188,14],[173,4,189,1],[174,4,191,1],[174,8,191,5,"isMinimumViableSerializedError"],[174,38,191,35],[174,39,191,36,"value"],[174,44,191,41],[174,45,191,42],[174,47,191,44],[175,6,192,2],[175,13,192,9,"destroyCircular"],[175,28,192,24],[175,29,192,25],[176,8,193,3,"from"],[176,12,193,7],[176,14,193,9,"value"],[176,19,193,14],[177,8,194,3,"seen"],[177,12,194,7],[177,14,194,9],[177,16,194,11],[178,8,195,3,"to"],[178,10,195,5],[178,12,195,7,"newError"],[178,20,195,15],[178,21,195,16,"value"],[178,26,195,21],[178,27,195,22,"name"],[178,31,195,26],[178,32,195,27],[179,8,196,3,"maxDepth"],[179,16,196,11],[180,8,197,3,"depth"],[180,13,197,8],[180,15,197,10],[180,16,197,11],[181,8,198,3,"serialize"],[181,17,198,12],[181,19,198,14],[182,6,199,2],[182,7,199,3],[182,8,199,4],[183,4,200,1],[184,4,202,1],[184,11,202,8],[184,15,202,12,"NonError"],[184,23,202,20],[184,24,202,21,"value"],[184,29,202,26],[184,30,202,27],[185,2,203,0],[186,2,205,7],[186,11,205,16,"isErrorLike"],[186,22,205,27,"isErrorLike"],[186,23,205,28,"value"],[186,28,205,33],[186,30,205,35],[187,4,206,1],[187,11,206,8,"Boolean"],[187,18,206,15],[187,19,206,16,"value"],[187,24,206,21],[187,25,206,22],[187,29,207,4],[187,36,207,11,"value"],[187,41,207,16],[187,46,207,21],[187,54,207,29],[187,58,208,4],[187,65,208,11,"value"],[187,70,208,16],[187,71,208,17,"name"],[187,75,208,21],[187,80,208,26],[187,88,208,34],[187,92,209,4],[187,99,209,11,"value"],[187,104,209,16],[187,105,209,17,"message"],[187,112,209,24],[187,117,209,29],[187,125,209,37],[187,129,210,4],[187,136,210,11,"value"],[187,141,210,16],[187,142,210,17,"stack"],[187,147,210,22],[187,152,210,27],[187,160,210,35],[188,2,211,0],[190,2,213,0],[191,2,214,0],[191,11,214,9,"isMinimumViableSerializedError"],[191,41,214,39,"isMinimumViableSerializedError"],[191,42,214,40,"value"],[191,47,214,45],[191,49,214,47],[192,4,215,1],[192,11,215,8,"Boolean"],[192,18,215,15],[192,19,215,16,"value"],[192,24,215,21],[192,25,215,22],[192,29,216,4],[192,36,216,11,"value"],[192,41,216,16],[192,46,216,21],[192,54,216,29],[192,58,217,4],[192,65,217,11,"value"],[192,70,217,16],[192,71,217,17,"message"],[192,78,217,24],[192,83,217,29],[192,91,217,37],[192,95,218,4],[192,96,218,5,"Array"],[192,101,218,10],[192,102,218,11,"isArray"],[192,109,218,18],[192,110,218,19,"value"],[192,115,218,24],[192,116,218,25],[193,2,219,0],[194,0,219,1],[194,3]],"functionMap":{"names":["<global>","NonError","NonError#constructor","NonError._prepareSuperMessage","toJSON","newError","destroyCircular","continueDestroyCircular","serializeError","deserializeError","isErrorLike","isMinimumViableSerializedError"],"mappings":"AAA;OCE;CCG;EDE;CEE;EFM;CDC;eI+B;CJK;iBKE;CLK;wBMG;iCC8B;GDQ;CNqD;OQE;CR0B;OSE;CTmB;OUE;CVM;AWG;CXK"}},"type":"js/module"}]}