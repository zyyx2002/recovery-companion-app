{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = void 0;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  } // eslint-disable-next-line @typescript-eslint/ban-types\n\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  } // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n\n  function isFabric() {\n    var _global;\n\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!((_global = global) !== null && _global !== void 0 && _global.nativeFabricUIManager);\n  }\n  function isReact19() {\n    return _react.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = exports.INT32_MAX = 2 ** 31 - 1;\n});","lineCount":96,"map":[[16,2,1,0],[16,6,1,0,"_react"],[16,12,1,0],[16,15,1,0,"_interopRequireDefault"],[16,37,1,0],[16,38,1,0,"require"],[16,45,1,0],[16,46,1,0,"_dependencyMap"],[16,60,1,0],[17,2,2,7],[17,11,2,16,"toArray"],[17,18,2,23,"toArray"],[17,19,2,24,"object"],[17,25,2,30],[17,27,2,32],[18,4,3,2],[18,8,3,6],[18,9,3,7,"Array"],[18,14,3,12],[18,15,3,13,"isArray"],[18,22,3,20],[18,23,3,21,"object"],[18,29,3,27],[18,30,3,28],[18,32,3,30],[19,6,4,4],[19,13,4,11],[19,14,4,12,"object"],[19,20,4,18],[19,21,4,19],[20,4,5,2],[21,4,7,2],[21,11,7,9,"object"],[21,17,7,15],[22,2,8,0],[23,2,9,7],[23,11,9,16,"withPrevAndCurrent"],[23,29,9,34,"withPrevAndCurrent"],[23,30,9,35,"array"],[23,35,9,40],[23,37,9,42,"mapFn"],[23,42,9,47],[23,44,9,49],[24,4,10,2],[24,10,10,8,"previousArr"],[24,21,10,19],[24,24,10,22],[24,25,10,23],[24,29,10,27],[24,30,10,28],[25,4,11,2],[25,10,11,8,"currentArr"],[25,20,11,18],[25,23,11,21],[25,24,11,22],[25,27,11,25,"array"],[25,32,11,30],[25,33,11,31],[26,4,12,2],[26,10,12,8,"transformedArr"],[26,24,12,22],[26,27,12,25],[26,29,12,27],[27,4,13,2,"currentArr"],[27,14,13,12],[27,15,13,13,"forEach"],[27,22,13,20],[27,23,13,21],[27,24,13,22,"current"],[27,31,13,29],[27,33,13,31,"i"],[27,34,13,32],[27,39,13,37],[28,6,14,4],[29,6,15,4],[30,6,16,4],[31,6,17,4],[31,12,17,10,"previous"],[31,20,17,18],[31,23,17,21,"previousArr"],[31,34,17,32],[31,35,17,33,"i"],[31,36,17,34],[31,37,17,35],[32,6,18,4],[32,12,18,10,"transformed"],[32,23,18,21],[32,26,18,24,"mapFn"],[32,31,18,29],[32,32,18,30,"previous"],[32,40,18,38],[32,42,18,40,"current"],[32,49,18,47],[32,50,18,48],[33,6,19,4,"previousArr"],[33,17,19,15],[33,18,19,16,"push"],[33,22,19,20],[33,23,19,21,"transformed"],[33,34,19,32],[33,35,19,33],[34,6,20,4,"transformedArr"],[34,20,20,18],[34,21,20,19,"push"],[34,25,20,23],[34,26,20,24,"transformed"],[34,37,20,35],[34,38,20,36],[35,4,21,2],[35,5,21,3],[35,6,21,4],[36,4,22,2],[36,11,22,9,"transformedArr"],[36,25,22,23],[37,2,23,0],[37,3,23,1],[37,4,23,2],[39,2,25,7],[39,11,25,16,"hasProperty"],[39,22,25,27,"hasProperty"],[39,23,25,28,"object"],[39,29,25,34],[39,31,25,36,"key"],[39,34,25,39],[39,36,25,41],[40,4,26,2],[40,11,26,9,"Object"],[40,17,26,15],[40,18,26,16,"prototype"],[40,27,26,25],[40,28,26,26,"hasOwnProperty"],[40,42,26,40],[40,43,26,41,"call"],[40,47,26,45],[40,48,26,46,"object"],[40,54,26,52],[40,56,26,54,"key"],[40,59,26,57],[40,60,26,58],[41,2,27,0],[42,2,28,7],[42,11,28,16,"isTestEnv"],[42,20,28,25,"isTestEnv"],[42,21,28,25],[42,23,28,28],[43,4,29,2],[44,4,30,2],[44,11,30,9,"hasProperty"],[44,22,30,20],[44,23,30,21,"global"],[44,29,30,27],[44,31,30,29],[44,40,30,38],[44,41,30,39],[44,45,30,43,"process"],[44,52,30,50],[44,53,30,51,"env"],[44,56,30,54],[44,57,30,55,"NODE_ENV"],[44,65,30,63],[44,70,30,68],[44,76,30,74],[45,2,31,0],[46,2,32,7],[46,11,32,16,"tagMessage"],[46,21,32,26,"tagMessage"],[46,22,32,27,"msg"],[46,25,32,30],[46,27,32,32],[47,4,33,2],[47,11,33,9],[47,45,33,43,"msg"],[47,48,33,46],[47,50,33,48],[48,2,34,0],[48,3,34,1],[48,4,34,2],[49,2,35,0],[51,2,37,7],[51,11,37,16,"isFabric"],[51,19,37,24,"isFabric"],[51,20,37,24],[51,22,37,27],[52,4,38,2],[52,8,38,6,"_global"],[52,15,38,13],[54,4,40,2],[55,4,41,2],[55,11,41,9],[55,12,41,10],[55,14,41,12],[55,15,41,13,"_global"],[55,22,41,20],[55,25,41,23,"global"],[55,31,41,29],[55,37,41,35],[55,41,41,39],[55,45,41,43,"_global"],[55,52,41,50],[55,57,41,55],[55,62,41,60],[55,63,41,61],[55,67,41,65,"_global"],[55,74,41,72],[55,75,41,73,"nativeFabricUIManager"],[55,96,41,94],[55,97,41,95],[56,2,42,0],[57,2,43,7],[57,11,43,16,"isReact19"],[57,20,43,25,"isReact19"],[57,21,43,25],[57,23,43,28],[58,4,44,2],[58,11,44,9,"React"],[58,25,44,14],[58,26,44,15,"version"],[58,33,44,22],[58,34,44,23,"startsWith"],[58,44,44,33],[58,45,44,34],[58,50,44,39],[58,51,44,40],[59,2,45,0],[60,2,46,7],[60,11,46,16,"isRemoteDebuggingEnabled"],[60,35,46,40,"isRemoteDebuggingEnabled"],[60,36,46,40],[60,38,46,43],[61,4,47,2],[62,4,48,2],[63,4,49,2],[63,10,49,8,"localGlobal"],[63,21,49,19],[63,24,49,22,"global"],[63,30,49,28],[64,4,50,2],[64,11,50,9],[64,12,50,10],[64,13,50,11,"localGlobal"],[64,24,50,22],[64,25,50,23,"nativeCallSyncHook"],[64,43,50,41],[64,47,50,45],[64,48,50,46],[64,49,50,47,"localGlobal"],[64,60,50,58],[64,61,50,59,"__REMOTEDEV__"],[64,74,50,72],[64,79,50,77],[64,80,50,78,"localGlobal"],[64,91,50,89],[64,92,50,90,"RN$Bridgeless"],[64,105,50,103],[65,2,51,0],[66,2,52,0],[67,0,53,0],[68,0,54,0],[69,0,55,0],[70,0,56,0],[71,0,57,0],[72,0,58,0],[73,0,59,0],[74,0,60,0],[76,2,62,7],[76,11,62,16,"deepEqual"],[76,20,62,25,"deepEqual"],[76,21,62,26,"obj1"],[76,25,62,30],[76,27,62,32,"obj2"],[76,31,62,36],[76,33,62,38],[77,4,63,2],[77,8,63,6,"obj1"],[77,12,63,10],[77,17,63,15,"obj2"],[77,21,63,19],[77,23,63,21],[78,6,64,4],[78,13,64,11],[78,17,64,15],[79,4,65,2],[80,4,67,2],[80,8,67,6],[80,15,67,13,"obj1"],[80,19,67,17],[80,24,67,22],[80,32,67,30],[80,36,67,34],[80,43,67,41,"obj2"],[80,47,67,45],[80,52,67,50],[80,60,67,58],[80,64,67,62,"obj1"],[80,68,67,66],[80,73,67,71],[80,77,67,75],[80,81,67,79,"obj2"],[80,85,67,83],[80,90,67,88],[80,94,67,92],[80,96,67,94],[81,6,68,4],[81,13,68,11],[81,18,68,16],[82,4,69,2],[83,4,71,2],[83,10,71,8,"keys1"],[83,15,71,13],[83,18,71,16,"Object"],[83,24,71,22],[83,25,71,23,"keys"],[83,29,71,27],[83,30,71,28,"obj1"],[83,34,71,32],[83,35,71,33],[84,4,72,2],[84,10,72,8,"keys2"],[84,15,72,13],[84,18,72,16,"Object"],[84,24,72,22],[84,25,72,23,"keys"],[84,29,72,27],[84,30,72,28,"obj2"],[84,34,72,32],[84,35,72,33],[85,4,74,2],[85,8,74,6,"keys1"],[85,13,74,11],[85,14,74,12,"length"],[85,20,74,18],[85,25,74,23,"keys2"],[85,30,74,28],[85,31,74,29,"length"],[85,37,74,35],[85,39,74,37],[86,6,75,4],[86,13,75,11],[86,18,75,16],[87,4,76,2],[88,4,78,2],[88,9,78,7],[88,15,78,13,"key"],[88,18,78,16],[88,22,78,20,"keys1"],[88,27,78,25],[88,29,78,27],[89,6,79,4],[89,10,79,8],[89,11,79,9,"keys2"],[89,16,79,14],[89,17,79,15,"includes"],[89,25,79,23],[89,26,79,24,"key"],[89,29,79,27],[89,30,79,28],[89,34,79,32],[89,35,79,33,"deepEqual"],[89,44,79,42],[89,45,79,43,"obj1"],[89,49,79,47],[89,50,79,48,"key"],[89,53,79,51],[89,54,79,52],[89,56,79,54,"obj2"],[89,60,79,58],[89,61,79,59,"key"],[89,64,79,62],[89,65,79,63],[89,66,79,64],[89,68,79,66],[90,8,80,6],[90,15,80,13],[90,20,80,18],[91,6,81,4],[92,4,82,2],[93,4,84,2],[93,11,84,9],[93,15,84,13],[94,2,85,0],[95,2,86,7],[95,8,86,13,"INT32_MAX"],[95,17,86,22],[95,20,86,22,"exports"],[95,27,86,22],[95,28,86,22,"INT32_MAX"],[95,37,86,22],[95,40,86,25],[95,41,86,26],[95,45,86,30],[95,47,86,32],[95,50,86,35],[95,51,86,36],[96,0,86,37],[96,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCC;CDM;OEC;qBCI;GDQ;CFE;OIE;CJE;OKC;CLG;OMC;CNE;OOG;CPK;OQC;CRE;OSC;CTK;OUW;CVuB"}},"type":"js/module"}]}