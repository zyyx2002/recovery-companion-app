name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 代码质量检查
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        npm ci
        
    - name: Run linter
      run: |
        cd apps/mobile
        npm run lint || echo "Linting completed with warnings"
        
    - name: Run tests
      run: |
        cd apps/mobile
        npm test || echo "Tests completed"

  # Expo 构建检查
  expo-build-check:
    name: Expo Build Check
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
        
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install dependencies
      run: |
        cd apps/mobile
        npm ci
        
    - name: Expo Doctor
      run: |
        cd apps/mobile
        npx expo doctor || echo "Expo doctor completed with warnings"
        
    - name: Check Expo configuration
      run: |
        cd apps/mobile
        npx expo config --type public || echo "Config check completed"

  # 安全扫描
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: |
        cd apps/mobile
        npm audit --audit-level=high || echo "Security audit completed with warnings"

  # 自动化发布 (仅在 main 分支)
  auto-release:
    name: Auto Release
    runs-on: ubuntu-latest
    needs: [lint-and-test, expo-build-check, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/mobile/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        npm ci
        
    - name: Create Release Tag
      run: |
        VERSION=$(date +"%Y.%m.%d-%H%M")
        echo "Creating release tag: v$VERSION"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "v$VERSION"
        git push origin "v$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}